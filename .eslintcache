[{"F:\\Hospital Almenara\\Front\\almenara-reactapp\\src\\index.js":"1","F:\\Hospital Almenara\\Front\\almenara-reactapp\\src\\App.js":"2","F:\\Hospital Almenara\\Front\\almenara-reactapp\\src\\auth\\AuthContext.js":"3","F:\\Hospital Almenara\\Front\\almenara-reactapp\\src\\config\\token.js":"4","F:\\Hospital Almenara\\Front\\almenara-reactapp\\src\\auth\\authReducer.js":"5","F:\\Hospital Almenara\\Front\\almenara-reactapp\\src\\routers\\AppRouter.js":"6","F:\\Hospital Almenara\\Front\\almenara-reactapp\\src\\config\\clienteAxios.js":"7","F:\\Hospital Almenara\\Front\\almenara-reactapp\\src\\routers\\PrivateRoute.js":"8","F:\\Hospital Almenara\\Front\\almenara-reactapp\\src\\routers\\DashboardRoutes.js":"9","F:\\Hospital Almenara\\Front\\almenara-reactapp\\src\\routers\\PublicRoute.js":"10","F:\\Hospital Almenara\\Front\\almenara-reactapp\\src\\types\\types.js":"11","F:\\Hospital Almenara\\Front\\almenara-reactapp\\src\\pages\\Login\\index.js":"12","F:\\Hospital Almenara\\Front\\almenara-reactapp\\src\\pages\\Inicio\\index.js":"13","F:\\Hospital Almenara\\Front\\almenara-reactapp\\src\\components\\Layout\\index.js":"14","F:\\Hospital Almenara\\Front\\almenara-reactapp\\src\\pages\\Proceso\\AsignarGrupo\\index.js":"15","F:\\Hospital Almenara\\Front\\almenara-reactapp\\src\\pages\\Mantenimiento\\Universidad\\index.js":"16","F:\\Hospital Almenara\\Front\\almenara-reactapp\\src\\pages\\Proceso\\AsignarConvenio\\index.js":"17","F:\\Hospital Almenara\\Front\\almenara-reactapp\\src\\pages\\Proceso\\AsignarServicio\\index.js":"18","F:\\Hospital Almenara\\Front\\almenara-reactapp\\src\\pages\\Mantenimiento\\Servicio\\index.js":"19","F:\\Hospital Almenara\\Front\\almenara-reactapp\\src\\pages\\Mantenimiento\\Especialidad\\index.js":"20","F:\\Hospital Almenara\\Front\\almenara-reactapp\\src\\pages\\Mantenimiento\\Grupo\\index.js":"21","F:\\Hospital Almenara\\Front\\almenara-reactapp\\src\\pages\\Mantenimiento\\Usuario\\index.js":"22","F:\\Hospital Almenara\\Front\\almenara-reactapp\\src\\pages\\Mantenimiento\\GrupoMant\\index.js":"23","F:\\Hospital Almenara\\Front\\almenara-reactapp\\src\\pages\\Mantenimiento\\Medico\\index.js":"24","F:\\Hospital Almenara\\Front\\almenara-reactapp\\src\\pages\\Reporte\\Medico\\index.js":"25","F:\\Hospital Almenara\\Front\\almenara-reactapp\\src\\pages\\Mantenimiento\\EspecialidadServicio\\index.js":"26","F:\\Hospital Almenara\\Front\\almenara-reactapp\\src\\pages\\Reporte\\Especialidad\\index.js":"27","F:\\Hospital Almenara\\Front\\almenara-reactapp\\src\\pages\\Reporte\\Servicio\\RotacionServiciosPorPeriodo\\index.js":"28","F:\\Hospital Almenara\\Front\\almenara-reactapp\\src\\pages\\Reporte\\Servicio\\index.js":"29","F:\\Hospital Almenara\\Front\\almenara-reactapp\\src\\services\\UserService.js":"30","F:\\Hospital Almenara\\Front\\almenara-reactapp\\src\\services\\ServicioDoctorService.js":"31","F:\\Hospital Almenara\\Front\\almenara-reactapp\\src\\services\\SchoolService.js":"32","F:\\Hospital Almenara\\Front\\almenara-reactapp\\src\\services\\SpecialtyService.js":"33","F:\\Hospital Almenara\\Front\\almenara-reactapp\\src\\services\\ServicioDelegadoService.js":"34","F:\\Hospital Almenara\\Front\\almenara-reactapp\\src\\services\\DoctorService.js":"35","F:\\Hospital Almenara\\Front\\almenara-reactapp\\src\\services\\ServicioService.js":"36","F:\\Hospital Almenara\\Front\\almenara-reactapp\\src\\services\\RoleService.js":"37","F:\\Hospital Almenara\\Front\\almenara-reactapp\\src\\services\\AnioAcademicoService.js":"38","F:\\Hospital Almenara\\Front\\almenara-reactapp\\src\\services\\MesService.js":"39","F:\\Hospital Almenara\\Front\\almenara-reactapp\\src\\services\\NivelService.js":"40","F:\\Hospital Almenara\\Front\\almenara-reactapp\\src\\services\\CampusService.js":"41","F:\\Hospital Almenara\\Front\\almenara-reactapp\\src\\services\\TeamService.js":"42","F:\\Hospital Almenara\\Front\\almenara-reactapp\\src\\pages\\Mantenimiento\\Medico\\ImportFromExcel.js":"43","F:\\Hospital Almenara\\Front\\almenara-reactapp\\src\\services\\SchoolAgreementService.js":"44","F:\\Hospital Almenara\\Front\\almenara-reactapp\\src\\services\\PlazaService.js":"45","F:\\Hospital Almenara\\Front\\almenara-reactapp\\src\\components\\Grupos\\TableMesList.js":"46","F:\\Hospital Almenara\\Front\\almenara-reactapp\\src\\components\\Sidebar\\index.js":"47","F:\\Hospital Almenara\\Front\\almenara-reactapp\\src\\components\\Header\\index.js":"48","F:\\Hospital Almenara\\Front\\almenara-reactapp\\src\\services\\MesDiaService.js":"49","F:\\Hospital Almenara\\Front\\almenara-reactapp\\src\\components\\Grupos\\TableMes.js":"50","F:\\Hospital Almenara\\Front\\almenara-reactapp\\src\\components\\Grupos\\SelectTd.js":"51","F:\\Hospital Almenara\\Front\\almenara-reactapp\\src\\pages\\Proceso\\AsignarServicio2\\index.js":"52","F:\\Hospital Almenara\\Front\\almenara-reactapp\\src\\pages\\Proceso\\AsignarServicio2\\Formulario.jsx":"53","F:\\Hospital Almenara\\Front\\almenara-reactapp\\src\\pages\\Proceso\\AsignarServicio2\\TablaServicio2.jsx":"54","F:\\Hospital Almenara\\Front\\almenara-reactapp\\src\\pages\\Mantenimiento\\Medico2\\index.js":"55","F:\\Hospital Almenara\\Front\\almenara-reactapp\\src\\pages\\Mantenimiento\\Medico2\\ImportFromExcel.js":"56","F:\\Hospital Almenara\\Front\\almenara-reactapp\\src\\pages\\Proceso\\AsignarServicio2\\FormularioAsignarServicio.jsx":"57","F:\\Hospital Almenara\\Front\\almenara-reactapp\\src\\pages\\Reporte\\MedicoResidenteGrupo2\\index.jsx":"58","F:\\Hospital Almenara\\Front\\almenara-reactapp\\src\\pages\\Reporte\\MedicoResidenteGrupo2\\FormularioGrupo2.jsx":"59","F:\\Hospital Almenara\\Front\\almenara-reactapp\\src\\pages\\Reporte\\MedicoResidenteGrupo2\\TableGrupo2.jsx":"60","F:\\Hospital Almenara\\Front\\almenara-reactapp\\src\\pages\\Reporte\\Servicio2\\index.jsx":"61","F:\\Hospital Almenara\\reactdos\\alemanra\\src\\index.js":"62","F:\\Hospital Almenara\\reactdos\\alemanra\\src\\App.js":"63","F:\\Hospital Almenara\\reactdos\\alemanra\\src\\auth\\AuthContext.js":"64","F:\\Hospital Almenara\\reactdos\\alemanra\\src\\auth\\authReducer.js":"65","F:\\Hospital Almenara\\reactdos\\alemanra\\src\\config\\token.js":"66","F:\\Hospital Almenara\\reactdos\\alemanra\\src\\routers\\AppRouter.js":"67","F:\\Hospital Almenara\\reactdos\\alemanra\\src\\routers\\PrivateRoute.js":"68","F:\\Hospital Almenara\\reactdos\\alemanra\\src\\routers\\PublicRoute.js":"69","F:\\Hospital Almenara\\reactdos\\alemanra\\src\\config\\clienteAxios.js":"70","F:\\Hospital Almenara\\reactdos\\alemanra\\src\\routers\\DashboardRoutes.js":"71","F:\\Hospital Almenara\\reactdos\\alemanra\\src\\types\\types.js":"72","F:\\Hospital Almenara\\reactdos\\alemanra\\src\\pages\\Login\\index.js":"73","F:\\Hospital Almenara\\reactdos\\alemanra\\src\\pages\\Inicio\\index.js":"74","F:\\Hospital Almenara\\reactdos\\alemanra\\src\\pages\\Proceso\\AsignarGrupo\\index.js":"75","F:\\Hospital Almenara\\reactdos\\alemanra\\src\\pages\\Proceso\\AsignarServicio2\\index.js":"76","F:\\Hospital Almenara\\reactdos\\alemanra\\src\\pages\\Proceso\\AsignarServicio\\index.js":"77","F:\\Hospital Almenara\\reactdos\\alemanra\\src\\pages\\Proceso\\AsignarConvenio\\index.js":"78","F:\\Hospital Almenara\\reactdos\\alemanra\\src\\components\\Layout\\index.js":"79","F:\\Hospital Almenara\\reactdos\\alemanra\\src\\pages\\Mantenimiento\\Universidad\\index.js":"80","F:\\Hospital Almenara\\reactdos\\alemanra\\src\\pages\\Mantenimiento\\Especialidad\\index.js":"81","F:\\Hospital Almenara\\reactdos\\alemanra\\src\\pages\\Mantenimiento\\GrupoMant\\index.js":"82","F:\\Hospital Almenara\\reactdos\\alemanra\\src\\pages\\Mantenimiento\\Medico\\index.js":"83","F:\\Hospital Almenara\\reactdos\\alemanra\\src\\pages\\Mantenimiento\\Usuario\\index.js":"84","F:\\Hospital Almenara\\reactdos\\alemanra\\src\\pages\\Mantenimiento\\Servicio\\index.js":"85","F:\\Hospital Almenara\\reactdos\\alemanra\\src\\pages\\Mantenimiento\\Grupo\\index.js":"86","F:\\Hospital Almenara\\reactdos\\alemanra\\src\\pages\\Mantenimiento\\EspecialidadServicio\\index.js":"87","F:\\Hospital Almenara\\reactdos\\alemanra\\src\\pages\\Reporte\\Servicio\\index.js":"88","F:\\Hospital Almenara\\reactdos\\alemanra\\src\\pages\\Reporte\\Medico\\index.js":"89","F:\\Hospital Almenara\\reactdos\\alemanra\\src\\pages\\Mantenimiento\\Medico2\\index.js":"90","F:\\Hospital Almenara\\reactdos\\alemanra\\src\\pages\\Reporte\\Especialidad\\index.js":"91","F:\\Hospital Almenara\\reactdos\\alemanra\\src\\pages\\Reporte\\Servicio\\RotacionServiciosPorPeriodo\\index.js":"92","F:\\Hospital Almenara\\reactdos\\alemanra\\src\\services\\UserService.js":"93","F:\\Hospital Almenara\\reactdos\\alemanra\\src\\pages\\Reporte\\MedicoResidenteGrupo2\\index.jsx":"94","F:\\Hospital Almenara\\reactdos\\alemanra\\src\\pages\\Reporte\\Servicio2\\index.jsx":"95","F:\\Hospital Almenara\\reactdos\\alemanra\\src\\services\\SpecialtyService.js":"96","F:\\Hospital Almenara\\reactdos\\alemanra\\src\\services\\ServicioDoctorService.js":"97","F:\\Hospital Almenara\\reactdos\\alemanra\\src\\services\\ServicioDelegadoService.js":"98","F:\\Hospital Almenara\\reactdos\\alemanra\\src\\services\\DoctorService.js":"99","F:\\Hospital Almenara\\reactdos\\alemanra\\src\\services\\TeamService.js":"100","F:\\Hospital Almenara\\reactdos\\alemanra\\src\\services\\SchoolService.js":"101","F:\\Hospital Almenara\\reactdos\\alemanra\\src\\services\\MesService.js":"102","F:\\Hospital Almenara\\reactdos\\alemanra\\src\\services\\ServicioService.js":"103","F:\\Hospital Almenara\\reactdos\\alemanra\\src\\services\\AnioAcademicoService.js":"104","F:\\Hospital Almenara\\reactdos\\alemanra\\src\\services\\NivelService.js":"105","F:\\Hospital Almenara\\reactdos\\alemanra\\src\\services\\CampusService.js":"106","F:\\Hospital Almenara\\reactdos\\alemanra\\src\\pages\\Mantenimiento\\Medico2\\ImportFromExcel.js":"107","F:\\Hospital Almenara\\reactdos\\alemanra\\src\\services\\PlazaService.js":"108","F:\\Hospital Almenara\\reactdos\\alemanra\\src\\services\\SchoolAgreementService.js":"109","F:\\Hospital Almenara\\reactdos\\alemanra\\src\\components\\Grupos\\TableMesList.js":"110","F:\\Hospital Almenara\\reactdos\\alemanra\\src\\pages\\Mantenimiento\\Medico\\ImportFromExcel.js":"111","F:\\Hospital Almenara\\reactdos\\alemanra\\src\\services\\RoleService.js":"112","F:\\Hospital Almenara\\reactdos\\alemanra\\src\\pages\\Proceso\\AsignarServicio2\\TablaServicio2.jsx":"113","F:\\Hospital Almenara\\reactdos\\alemanra\\src\\pages\\Proceso\\AsignarServicio2\\Formulario.jsx":"114","F:\\Hospital Almenara\\reactdos\\alemanra\\src\\pages\\Proceso\\AsignarServicio2\\FormularioAsignarServicio.jsx":"115","F:\\Hospital Almenara\\reactdos\\alemanra\\src\\pages\\Reporte\\MedicoResidenteGrupo2\\TableGrupo2.jsx":"116","F:\\Hospital Almenara\\reactdos\\alemanra\\src\\pages\\Reporte\\MedicoResidenteGrupo2\\FormularioGrupo2.jsx":"117","F:\\Hospital Almenara\\reactdos\\alemanra\\src\\components\\Sidebar\\index.js":"118","F:\\Hospital Almenara\\reactdos\\alemanra\\src\\components\\Header\\index.js":"119","F:\\Hospital Almenara\\reactdos\\alemanra\\src\\services\\MesDiaService.js":"120","F:\\Hospital Almenara\\reactdos\\alemanra\\src\\components\\Grupos\\TableMes.js":"121","F:\\Hospital Almenara\\reactdos\\alemanra\\src\\components\\Grupos\\SelectTd.js":"122"},{"size":234,"mtime":1618581495176,"results":"123","hashOfConfig":"124"},{"size":752,"mtime":1618581495170,"results":"125","hashOfConfig":"124"},{"size":90,"mtime":1618581495170,"results":"126","hashOfConfig":"124"},{"size":334,"mtime":1618581495173,"results":"127","hashOfConfig":"124"},{"size":500,"mtime":1618581495170,"results":"128","hashOfConfig":"124"},{"size":804,"mtime":1618581495186,"results":"129","hashOfConfig":"124"},{"size":330,"mtime":1618583805960,"results":"130","hashOfConfig":"124"},{"size":585,"mtime":1618581495186,"results":"131","hashOfConfig":"124"},{"size":3440,"mtime":1619487857343,"results":"132","hashOfConfig":"124"},{"size":516,"mtime":1618581495186,"results":"133","hashOfConfig":"124"},{"size":82,"mtime":1618581495190,"results":"134","hashOfConfig":"124"},{"size":3863,"mtime":1618581495177,"results":"135","hashOfConfig":"124"},{"size":135,"mtime":1618581495176,"results":"136","hashOfConfig":"124"},{"size":522,"mtime":1618697521356,"results":"137","hashOfConfig":"124"},{"size":674,"mtime":1618581495182,"results":"138","hashOfConfig":"124"},{"size":7400,"mtime":1618602738899,"results":"139","hashOfConfig":"124"},{"size":3842,"mtime":1618581495182,"results":"140","hashOfConfig":"124"},{"size":13835,"mtime":1619579289569,"results":"141","hashOfConfig":"124"},{"size":7024,"mtime":1618602783491,"results":"142","hashOfConfig":"124"},{"size":7008,"mtime":1618602880212,"results":"143","hashOfConfig":"124"},{"size":17054,"mtime":1618581495178,"results":"144","hashOfConfig":"124"},{"size":16526,"mtime":1618603415091,"results":"145","hashOfConfig":"124"},{"size":8904,"mtime":1618581495179,"results":"146","hashOfConfig":"124"},{"size":49310,"mtime":1619068514740,"results":"147","hashOfConfig":"124"},{"size":4555,"mtime":1619380934661,"results":"148","hashOfConfig":"124"},{"size":10544,"mtime":1618602899660,"results":"149","hashOfConfig":"124"},{"size":2531,"mtime":1619531748829,"results":"150","hashOfConfig":"124"},{"size":9039,"mtime":1619324352632,"results":"151","hashOfConfig":"124"},{"size":6377,"mtime":1619581855086,"results":"152","hashOfConfig":"124"},{"size":704,"mtime":1618581495190,"results":"153","hashOfConfig":"124"},{"size":3259,"mtime":1619577142370,"results":"154","hashOfConfig":"124"},{"size":495,"mtime":1618581495189,"results":"155","hashOfConfig":"124"},{"size":1055,"mtime":1619530523981,"results":"156","hashOfConfig":"124"},{"size":235,"mtime":1618581495189,"results":"157","hashOfConfig":"124"},{"size":3126,"mtime":1619618519627,"results":"158","hashOfConfig":"124"},{"size":1547,"mtime":1618581495189,"results":"159","hashOfConfig":"124"},{"size":304,"mtime":1618581495188,"results":"160","hashOfConfig":"124"},{"size":381,"mtime":1618581495188,"results":"161","hashOfConfig":"124"},{"size":183,"mtime":1618581495188,"results":"162","hashOfConfig":"124"},{"size":193,"mtime":1618581495188,"results":"163","hashOfConfig":"124"},{"size":188,"mtime":1618581495188,"results":"164","hashOfConfig":"124"},{"size":996,"mtime":1618581495190,"results":"165","hashOfConfig":"124"},{"size":9452,"mtime":1619497776388,"results":"166","hashOfConfig":"124"},{"size":222,"mtime":1618581495188,"results":"167","hashOfConfig":"124"},{"size":190,"mtime":1618581495188,"results":"168","hashOfConfig":"124"},{"size":9244,"mtime":1618581495171,"results":"169","hashOfConfig":"124"},{"size":5179,"mtime":1619487891087,"results":"170","hashOfConfig":"124"},{"size":1010,"mtime":1618581495172,"results":"171","hashOfConfig":"124"},{"size":1045,"mtime":1618581495188,"results":"172","hashOfConfig":"124"},{"size":2799,"mtime":1618581495171,"results":"173","hashOfConfig":"124"},{"size":1992,"mtime":1618581495171,"results":"174","hashOfConfig":"124"},{"size":5982,"mtime":1619066890658,"results":"175","hashOfConfig":"124"},{"size":1600,"mtime":1619500792344,"results":"176","hashOfConfig":"124"},{"size":4219,"mtime":1619411149670,"results":"177","hashOfConfig":"124"},{"size":46126,"mtime":1619618562851,"results":"178","hashOfConfig":"124"},{"size":9468,"mtime":1619619708973,"results":"179","hashOfConfig":"124"},{"size":2034,"mtime":1619066632975,"results":"180","hashOfConfig":"124"},{"size":4029,"mtime":1619379288738,"results":"181","hashOfConfig":"124"},{"size":1945,"mtime":1619380844520,"results":"182","hashOfConfig":"124"},{"size":3380,"mtime":1619379165156,"results":"183","hashOfConfig":"124"},{"size":6274,"mtime":1619581833756,"results":"184","hashOfConfig":"124"},{"size":234,"mtime":1618581495176,"results":"185","hashOfConfig":"186"},{"size":752,"mtime":1618581495170,"results":"187","hashOfConfig":"186"},{"size":90,"mtime":1618581495170,"results":"188","hashOfConfig":"186"},{"size":500,"mtime":1618581495170,"results":"189","hashOfConfig":"186"},{"size":334,"mtime":1618581495173,"results":"190","hashOfConfig":"186"},{"size":804,"mtime":1618581495186,"results":"191","hashOfConfig":"186"},{"size":585,"mtime":1618581495186,"results":"192","hashOfConfig":"186"},{"size":516,"mtime":1618581495186,"results":"193","hashOfConfig":"186"},{"size":391,"mtime":1619648453593,"results":"194","hashOfConfig":"186"},{"size":3440,"mtime":1619487857343,"results":"195","hashOfConfig":"186"},{"size":82,"mtime":1618581495190,"results":"196","hashOfConfig":"186"},{"size":3863,"mtime":1618581495177,"results":"197","hashOfConfig":"186"},{"size":135,"mtime":1618581495176,"results":"198","hashOfConfig":"186"},{"size":674,"mtime":1618581495182,"results":"199","hashOfConfig":"186"},{"size":5982,"mtime":1619066890658,"results":"200","hashOfConfig":"186"},{"size":13835,"mtime":1619579289569,"results":"201","hashOfConfig":"186"},{"size":3842,"mtime":1618581495182,"results":"202","hashOfConfig":"186"},{"size":522,"mtime":1618697521356,"results":"203","hashOfConfig":"186"},{"size":7400,"mtime":1618602738899,"results":"204","hashOfConfig":"186"},{"size":7008,"mtime":1618602880212,"results":"205","hashOfConfig":"186"},{"size":8904,"mtime":1618581495179,"results":"206","hashOfConfig":"186"},{"size":49310,"mtime":1619068514740,"results":"207","hashOfConfig":"186"},{"size":16526,"mtime":1618603415091,"results":"208","hashOfConfig":"186"},{"size":7024,"mtime":1618602783491,"results":"209","hashOfConfig":"186"},{"size":17054,"mtime":1618581495178,"results":"210","hashOfConfig":"186"},{"size":10544,"mtime":1618602899660,"results":"211","hashOfConfig":"186"},{"size":6377,"mtime":1619581855086,"results":"212","hashOfConfig":"186"},{"size":4555,"mtime":1619380934661,"results":"213","hashOfConfig":"186"},{"size":46126,"mtime":1619618562851,"results":"214","hashOfConfig":"186"},{"size":2531,"mtime":1619531748829,"results":"215","hashOfConfig":"186"},{"size":9039,"mtime":1619324352632,"results":"216","hashOfConfig":"186"},{"size":704,"mtime":1618581495190,"results":"217","hashOfConfig":"186"},{"size":4029,"mtime":1619379288738,"results":"218","hashOfConfig":"186"},{"size":6274,"mtime":1619581833756,"results":"219","hashOfConfig":"186"},{"size":1055,"mtime":1619530523981,"results":"220","hashOfConfig":"186"},{"size":3259,"mtime":1619577142370,"results":"221","hashOfConfig":"186"},{"size":235,"mtime":1618581495189,"results":"222","hashOfConfig":"186"},{"size":3126,"mtime":1619618519627,"results":"223","hashOfConfig":"186"},{"size":996,"mtime":1618581495190,"results":"224","hashOfConfig":"186"},{"size":495,"mtime":1618581495189,"results":"225","hashOfConfig":"186"},{"size":183,"mtime":1618581495188,"results":"226","hashOfConfig":"186"},{"size":1547,"mtime":1618581495189,"results":"227","hashOfConfig":"186"},{"size":381,"mtime":1618581495188,"results":"228","hashOfConfig":"186"},{"size":193,"mtime":1618581495188,"results":"229","hashOfConfig":"186"},{"size":188,"mtime":1618581495188,"results":"230","hashOfConfig":"186"},{"size":9468,"mtime":1619619708973,"results":"231","hashOfConfig":"186"},{"size":190,"mtime":1618581495188,"results":"232","hashOfConfig":"186"},{"size":222,"mtime":1618581495188,"results":"233","hashOfConfig":"186"},{"size":9244,"mtime":1618581495171,"results":"234","hashOfConfig":"186"},{"size":9452,"mtime":1619497776388,"results":"235","hashOfConfig":"186"},{"size":304,"mtime":1618581495188,"results":"236","hashOfConfig":"186"},{"size":4219,"mtime":1619411149670,"results":"237","hashOfConfig":"186"},{"size":1600,"mtime":1619500792344,"results":"238","hashOfConfig":"186"},{"size":2034,"mtime":1619066632975,"results":"239","hashOfConfig":"186"},{"size":3380,"mtime":1619379165156,"results":"240","hashOfConfig":"186"},{"size":1945,"mtime":1619380844520,"results":"241","hashOfConfig":"186"},{"size":5179,"mtime":1619487891087,"results":"242","hashOfConfig":"186"},{"size":1010,"mtime":1618581495172,"results":"243","hashOfConfig":"186"},{"size":1045,"mtime":1618581495188,"results":"244","hashOfConfig":"186"},{"size":2799,"mtime":1618581495171,"results":"245","hashOfConfig":"186"},{"size":1992,"mtime":1618581495171,"results":"246","hashOfConfig":"186"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},"kwuoms",{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"280","usedDeprecatedRules":"249"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"285","usedDeprecatedRules":"249"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"288","usedDeprecatedRules":"249"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"291","usedDeprecatedRules":"249"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":"294","usedDeprecatedRules":"249"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"297","usedDeprecatedRules":"249"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"300","usedDeprecatedRules":"249"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":0,"source":"303","usedDeprecatedRules":"249"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"306","usedDeprecatedRules":"249"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"309","usedDeprecatedRules":"249"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"312","usedDeprecatedRules":"249"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"315","usedDeprecatedRules":"249"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"318","usedDeprecatedRules":"249"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"323","usedDeprecatedRules":"249"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"348","usedDeprecatedRules":"249"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"355","usedDeprecatedRules":"249"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"358","usedDeprecatedRules":"249"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"363","messages":"364","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"365","usedDeprecatedRules":"249"},{"filePath":"366","messages":"367","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"368","usedDeprecatedRules":"369"},{"filePath":"370","messages":"371","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"372","usedDeprecatedRules":"249"},{"filePath":"373","messages":"374","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"375","usedDeprecatedRules":"249"},{"filePath":"376","messages":"377","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"378","usedDeprecatedRules":"249"},{"filePath":"379","messages":"380","errorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":0,"source":"381","usedDeprecatedRules":"249"},{"filePath":"382","messages":"383","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"384","usedDeprecatedRules":"249"},{"filePath":"385","messages":"386","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"387","messages":"388","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"389","usedDeprecatedRules":"249"},{"filePath":"390","messages":"391","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"392","messages":"393","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"394","usedDeprecatedRules":"249"},{"filePath":"395","messages":"396","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"397","messages":"398","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"399"},"9i5byn",{"filePath":"400","messages":"401","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"399"},{"filePath":"402","messages":"403","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"399"},{"filePath":"404","messages":"405","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"399"},{"filePath":"406","messages":"407","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"399"},{"filePath":"408","messages":"409","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"399"},{"filePath":"410","messages":"411","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"399"},{"filePath":"412","messages":"413","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"399"},{"filePath":"414","messages":"415","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"416","messages":"417","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"399"},{"filePath":"418","messages":"419","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"399"},{"filePath":"420","messages":"421","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"399"},{"filePath":"422","messages":"423","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"399"},{"filePath":"424","messages":"425","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"399"},{"filePath":"426","messages":"427","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"372","usedDeprecatedRules":"399"},{"filePath":"428","messages":"429","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"285","usedDeprecatedRules":"399"},{"filePath":"430","messages":"431","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"399"},{"filePath":"432","messages":"433","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"399"},{"filePath":"434","messages":"435","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"280","usedDeprecatedRules":"399"},{"filePath":"436","messages":"437","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"291","usedDeprecatedRules":"399"},{"filePath":"438","messages":"439","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"300","usedDeprecatedRules":"399"},{"filePath":"440","messages":"441","errorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":0,"source":"303","usedDeprecatedRules":"399"},{"filePath":"442","messages":"443","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"297","usedDeprecatedRules":"399"},{"filePath":"444","messages":"445","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"288","usedDeprecatedRules":"399"},{"filePath":"446","messages":"447","errorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":"294","usedDeprecatedRules":"399"},{"filePath":"448","messages":"449","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"309","usedDeprecatedRules":"399"},{"filePath":"450","messages":"451","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"318","usedDeprecatedRules":"399"},{"filePath":"452","messages":"453","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"306","usedDeprecatedRules":"399"},{"filePath":"454","messages":"455","errorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":0,"source":"381","usedDeprecatedRules":"399"},{"filePath":"456","messages":"457","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"312","usedDeprecatedRules":"399"},{"filePath":"458","messages":"459","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"315","usedDeprecatedRules":"399"},{"filePath":"460","messages":"461","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"399"},{"filePath":"462","messages":"463","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"389","usedDeprecatedRules":"399"},{"filePath":"464","messages":"465","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"399"},{"filePath":"466","messages":"467","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"399"},{"filePath":"468","messages":"469","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"323","usedDeprecatedRules":"399"},{"filePath":"470","messages":"471","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"399"},{"filePath":"472","messages":"473","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"399"},{"filePath":"474","messages":"475","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"399"},{"filePath":"476","messages":"477","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"399"},{"filePath":"478","messages":"479","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"399"},{"filePath":"480","messages":"481","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"399"},{"filePath":"482","messages":"483","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"399"},{"filePath":"484","messages":"485","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"399"},{"filePath":"486","messages":"487","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"399"},{"filePath":"488","messages":"489","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"384","usedDeprecatedRules":"399"},{"filePath":"490","messages":"491","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"399"},{"filePath":"492","messages":"493","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"399"},{"filePath":"494","messages":"495","errorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"355","usedDeprecatedRules":"399"},{"filePath":"496","messages":"497","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"348","usedDeprecatedRules":"399"},{"filePath":"498","messages":"499","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"399"},{"filePath":"500","messages":"501","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"378","usedDeprecatedRules":"399"},{"filePath":"502","messages":"503","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"375","usedDeprecatedRules":"399"},{"filePath":"504","messages":"505","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"399"},{"filePath":"506","messages":"507","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"394","usedDeprecatedRules":"399"},{"filePath":"508","messages":"509","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"399"},{"filePath":"510","messages":"511","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"358","usedDeprecatedRules":"399"},{"filePath":"512","messages":"513","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"399"},{"filePath":"514","messages":"515","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"399"},{"filePath":"516","messages":"517","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"365","usedDeprecatedRules":"399"},{"filePath":"518","messages":"519","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"368","usedDeprecatedRules":"399"},"F:\\Hospital Almenara\\Front\\almenara-reactapp\\src\\index.js",[],["520","521"],"F:\\Hospital Almenara\\Front\\almenara-reactapp\\src\\App.js",[],"F:\\Hospital Almenara\\Front\\almenara-reactapp\\src\\auth\\AuthContext.js",[],"F:\\Hospital Almenara\\Front\\almenara-reactapp\\src\\config\\token.js",[],"F:\\Hospital Almenara\\Front\\almenara-reactapp\\src\\auth\\authReducer.js",[],"F:\\Hospital Almenara\\Front\\almenara-reactapp\\src\\routers\\AppRouter.js",[],"F:\\Hospital Almenara\\Front\\almenara-reactapp\\src\\config\\clienteAxios.js",[],"F:\\Hospital Almenara\\Front\\almenara-reactapp\\src\\routers\\PrivateRoute.js",[],"F:\\Hospital Almenara\\Front\\almenara-reactapp\\src\\routers\\DashboardRoutes.js",[],"F:\\Hospital Almenara\\Front\\almenara-reactapp\\src\\routers\\PublicRoute.js",[],"F:\\Hospital Almenara\\Front\\almenara-reactapp\\src\\types\\types.js",[],"F:\\Hospital Almenara\\Front\\almenara-reactapp\\src\\pages\\Login\\index.js",[],"F:\\Hospital Almenara\\Front\\almenara-reactapp\\src\\pages\\Inicio\\index.js",[],"F:\\Hospital Almenara\\Front\\almenara-reactapp\\src\\components\\Layout\\index.js",[],"F:\\Hospital Almenara\\Front\\almenara-reactapp\\src\\pages\\Proceso\\AsignarGrupo\\index.js",[],"F:\\Hospital Almenara\\Front\\almenara-reactapp\\src\\pages\\Mantenimiento\\Universidad\\index.js",["522","523"],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Breadcrumb,\r\n  Button,\r\n  Drawer,\r\n  Input,\r\n  Table,\r\n  Tag,\r\n  Form,\r\n  Radio,\r\n  notification,\r\n} from \"antd\";\r\nimport { EditOutlined, PlusOutlined } from \"@ant-design/icons\";\r\nimport { createSchool, getSchools, actualizarSchool } from \"../../../services/SchoolService\";\r\nimport * as Yup from \"yup\";\r\n\r\nimport \"../Mantenimiento.css\";\r\nimport { useFormik } from \"formik\";\r\n\r\nconst openNotification = (msg, description, placement) => {\r\n  notification.success({\r\n    message: msg,\r\n    description: description,\r\n    placement,\r\n  });\r\n};\r\n\r\nexport const Universidad = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [visible, setVisible] = useState(false);\r\n  const [editar, setEditar] = useState(false);\r\n  const [filterTable, setFilterTable] = useState(null);  \r\n  const [dataSource, setDataSource] = useState([]);\r\n\r\n  const listar = () => {\r\n    getSchools().then((resp) => {\r\n      resp.forEach((data) => {\r\n        data.key = data.id;\r\n      });\r\n      setDataSource(resp);\r\n    });\r\n  };\r\n\r\n  const validationSchema = Yup.object().shape({\r\n    name: Yup.string()\r\n      .trim()\r\n      .matches(/^[ñÑa-zA-Z ]*$/, \"Solo se admiten letras.\")\r\n      .required(\"Nombre requerido.\"),\r\n    shortName: Yup.string()\r\n      .trim()\r\n      .matches(/^[ñÑa-zA-Z ]*$/, \"Solo se admiten letras.\")\r\n      .required(\"Nombre Abreviado requerido.\"),\r\n  });\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      name: \"\",\r\n      shortName: \"\",\r\n      status: true,\r\n    },\r\n    validationSchema,\r\n    onSubmit: (value) => {\r\n      console.log(value);\r\n      if(editar){\r\n        createSchool(value).then((resp) => {\r\n          console.log(resp);\r\n          listar();\r\n          setVisible(false);\r\n          openNotification(\"Actualizado Correctamente\", \"\", \"topRight\");\r\n        });\r\n      }else{\r\n        createSchool(value).then((resp) => {\r\n          console.log(resp);\r\n          listar();\r\n          setVisible(false);\r\n          openNotification(\"Guardado Correctamente\", \"\", \"topRight\");\r\n        });\r\n      }\r\n\r\n     \r\n      \r\n      formik.resetForm();\r\n    },\r\n  });\r\n\r\n\r\n\r\n  const columns = [\r\n    {\r\n      title: \"#\",\r\n      dataIndex: \"id\",\r\n      key: \"id\",\r\n      width: 50,\r\n      fixed: \"left\",\r\n      align: \"center\",\r\n    },\r\n    {\r\n      title: \"Nombre\",\r\n      dataIndex: \"name\",\r\n      key: \"name\",\r\n      align: \"center\",\r\n    },\r\n    {\r\n      title: \"Nombre Abreviado\",\r\n      dataIndex: \"shortName\",\r\n      key: \"shortName\",\r\n      width: 170,\r\n      align: \"center\",\r\n    },\r\n    {\r\n      title: \"Estado\",\r\n      dataIndex: \"status\",\r\n      key: \"status\",\r\n      width: 120,\r\n      align: \"center\",\r\n      render: (val, record) =>\r\n        record.status ? (\r\n          <Tag color=\"green\">ACTIVO</Tag>\r\n        ) : (\r\n          <Tag color=\"red\">INACTIVO</Tag>\r\n        ),\r\n      filters: [\r\n        {\r\n          text: \"ACTIVO\",\r\n          value: true,\r\n        },\r\n        {\r\n          text: \"INACTIVO\",\r\n          value: false,\r\n        },\r\n      ],\r\n      filterMultiple: false,\r\n      onFilter: (value, record) => {\r\n        let status = String(record.status);\r\n        return status.indexOf(value) === 0;\r\n      },\r\n    },\r\n    {\r\n      title: \"Acciones\",\r\n      key: \"action\",\r\n      fixed: \"right\",\r\n      width: 100,\r\n      align: \"center\",\r\n      render: (record) => (\r\n        // <Button type=\"link\" size=\"small\">\r\n        //   <EditOutlined />\r\n        // </Button>\r\n         <Button type=\"primary\" size=\"large\" onClick={() => \r\n          {             \r\n            formik.values.name = record.name;\r\n            formik.values.shortName = record.shortName;\r\n            formik.values.status = record.status;\r\n            formik.values.id = record.id;\r\n            setEditar(true);\r\n            setVisible(true);          \r\n          }\r\n         \r\n         }>\r\n        <EditOutlined />\r\n       </Button>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  const keyUpTable = (value) => {\r\n    setFilterTable(\r\n      dataSource.filter((o) =>\r\n        Object.keys(o).some((k) =>\r\n          String(o[k]).toLowerCase().includes(value.toLowerCase())\r\n        )\r\n      )\r\n    );\r\n  };\r\n\r\n  const handleCloseDrawer = () => {\r\n    setVisible(false);\r\n    formik.resetForm();\r\n  };\r\n\r\n  useEffect(() => {\r\n    setLoading(false);\r\n    listar();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"mantenimiento\">\r\n      <header>\r\n        <h2 className=\"title\">\r\n          <Breadcrumb>\r\n            <Breadcrumb.Item>Mantenimiento</Breadcrumb.Item>\r\n            <Breadcrumb.Item>Universidad</Breadcrumb.Item>\r\n          </Breadcrumb>\r\n        </h2>\r\n        <Button type=\"primary\" size=\"large\" onClick={() =>           \r\n          {\r\n            formik.values.name = null;\r\n            formik.values.shortName = null;\r\n            formik.values.true = null;\r\n            formik.values.id = null;\r\n            setEditar(false);\r\n            setVisible(true)\r\n          }\r\n          }>\r\n          <PlusOutlined /> Agregar\r\n        </Button>\r\n      </header>\r\n      <div className=\"content\">\r\n        <Input.Search\r\n          className=\"searchInput\"\r\n          placeholder=\"Buscar por ...\"\r\n          onKeyUpCapture={(e) => keyUpTable(e.target.value)}\r\n        />\r\n        <Table\r\n          loading={!dataSource.length>0}\r\n          dataSource={filterTable === null ? dataSource : filterTable}\r\n          columns={columns}\r\n          pagination={{ pageSize: 5 }}\r\n          scroll={{ x: 800 }}\r\n        />\r\n        <Drawer\r\n          title=\"Agregar Universidad\"\r\n          placement=\"right\"\r\n          closable={false}\r\n          width={400}\r\n          onClose={handleCloseDrawer}\r\n          visible={visible}\r\n        >\r\n          <Form\r\n            title=\"Universidad\"\r\n            layout=\"vertical\"\r\n            onSubmitCapture={formik.handleSubmit}\r\n          >\r\n            <Form.Item label=\"Nombre:\" required>\r\n              <Input\r\n                name=\"name\"\r\n                value={formik.values.name}\r\n                onChange={formik.handleChange}\r\n              />\r\n              {formik.errors.name && formik.touched.name ? (\r\n                <div className=\"error-field\">{formik.errors.name}</div>\r\n              ) : null}\r\n            </Form.Item>\r\n            <Form.Item label=\"Nombre Abreviado:\" required>\r\n              <Input\r\n                name=\"shortName\"\r\n                value={formik.values.shortName}\r\n                onChange={formik.handleChange}\r\n              />\r\n              {formik.errors.shortName && formik.touched.shortName ? (\r\n                <div className=\"error-field\">{formik.errors.shortName}</div>\r\n              ) : null}\r\n            </Form.Item>\r\n            <Form.Item label=\"Estado:\">\r\n              <Radio.Group\r\n                name=\"status\"\r\n                value={formik.values.status}\r\n                onChange={formik.handleChange}\r\n              >\r\n                <Radio.Button value={true}>ACTIVO</Radio.Button>\r\n                <Radio.Button value={false}>INACTIVO</Radio.Button>\r\n              </Radio.Group>\r\n            </Form.Item>\r\n\r\n              {\r\n                editar? (\r\n                <Button type=\"primary\" htmlType=\"submit\" block> Actualizar</Button>\r\n                ) : <Button type=\"primary\" htmlType=\"submit\" block> Registrar</Button>\r\n              }\r\n\r\n            \r\n          </Form>\r\n        </Drawer>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","F:\\Hospital Almenara\\Front\\almenara-reactapp\\src\\pages\\Proceso\\AsignarConvenio\\index.js",[],"F:\\Hospital Almenara\\Front\\almenara-reactapp\\src\\pages\\Proceso\\AsignarServicio\\index.js",["524","525","526","527","528","529","530","531","532"],"import { FilePdfTwoTone, EditOutlined } from \"@ant-design/icons\";\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  getServiciosDoctor,\r\n  getServiciosDoctorBySpecialtyId,\r\n  viewPdfServiciosDoctor,\r\n  viewPdfServiciosDoctorFilterSpecialty,\r\n} from \"../../../services/ServicioDoctorService\";\r\nimport {\r\n  Form,\r\n  Breadcrumb,\r\n  Button,\r\n  Select,\r\n  Empty,\r\n  Modal,\r\n  Input,\r\n  Row,\r\n  Col,\r\n  Drawer,\r\n  notification,\r\n  Spin,\r\n} from \"antd\";\r\nimport { useFormik } from \"formik\";\r\nimport { getSpecialties } from \"../../../services/SpecialtyService\";\r\nimport { updateServicioDelegado } from \"../../../services/ServicioDelegadoService\";\r\nimport * as Yup from \"yup\";\r\nimport \"./AsignarStyle.css\";\r\n\r\nexport const AsignarServicio = () => {\r\n  const [serviciosDoctor, setServiciosDoctor] = useState([]);\r\n  const [specialties, setSpecialties] = useState([]);\r\n  const [filterSpecialtyOn, setfilterSpecialtyOn] = useState(false);\r\n  const [idSpecialty, setIdSpecialty] = useState(null);\r\n  const [isImportDataModalVisible, setIsModalImportDataVisible] = useState(\r\n    false\r\n  );\r\n  const [serviceSpecialities, setServiceSpecialities] = useState([]);\r\n  const [selectedMonth, setSelectedMonth] = useState(null);\r\n\r\n  const editService = (data, data3) => {\r\n    setIsModalImportDataVisible(true);\r\n    console.log(data3);\r\n    console.log(data.doctor.specialty.servicios);\r\n\r\n    let monthID = data3.mes.id;\r\n    let monthName = getMonthName(monthID);\r\n    let serviceSpecialities = data.doctor.specialty.servicios;\r\n\r\n    formik.values.id = data3.id;\r\n    formik.values.mes = { id: monthID, nombre: monthName };\r\n    formik.values.servicio = {\r\n      id: data3.servicio != null ? data3.servicio.id : null,\r\n      nombre: data3.servicio != null ? data3.servicio.nombre : \"\",\r\n    };\r\n    setSelectedMonth(monthName);\r\n    setServiceSpecialities(\r\n      serviceSpecialities.length > 0\r\n        ? data.doctor.specialty.servicios.filter(\r\n            (servicio) => servicio.state == true\r\n          )\r\n        : []\r\n    );\r\n  };\r\n\r\n  const getMonthName = (monthNumber) => {\r\n    let monthNames = [\r\n      \"Julio\",\r\n      \"Agosto\",\r\n      \"Setiembre\",\r\n      \"Octubre\",\r\n      \"Noviembre\",\r\n      \"Diciembre\",\r\n      \"Enero\",\r\n      \"Febrero\",\r\n      \"Marzo\",\r\n      \"Abril\",\r\n      \"Mayo\",\r\n      \"Junio\",\r\n      \"Diciembre\",\r\n      \"Enero\",\r\n      \"Febrero\",\r\n      \"Marzo\",\r\n      \"Abril\",\r\n      \"Mayo\",\r\n      \"Junio\",\r\n      \"Julio\",\r\n      \"Agosto\",\r\n      \"Setiembre\",\r\n      \"Octubre\",\r\n      \"Noviembre\",\r\n    ];\r\n    return monthNames[monthNumber - 1];\r\n  };\r\n\r\n  const validationSchema = Yup.object().shape({\r\n    servicio: Yup.object().shape({\r\n      id: Yup.number().nullable().required(\"Servicio requerida\"),\r\n    }),\r\n  });\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      id: null,\r\n      mes: {\r\n        id: null,\r\n        nombre: null,\r\n      },\r\n      servicio: {\r\n        id: null,\r\n        nombre: null,\r\n      },\r\n    },\r\n    validationSchema,\r\n    onSubmit: (value) => {\r\n      updateServicioDelegado(value)\r\n        .then((resp) => {\r\n          listar();\r\n          setIsModalImportDataVisible(false);\r\n          openNotification(\"Actualizado Correctamente\", \"\", \"topRight\");\r\n          formik.resetForm();\r\n        })\r\n        .catch(function (error) {\r\n          openErrorNotification(\r\n            \"Hubo un error mientras se actualizaba\",\r\n            \"\",\r\n            \"topRight\"\r\n          );\r\n        });\r\n    },\r\n  });\r\n\r\n  const openNotification = (msg, description, placement) => {\r\n    notification.success({\r\n      message: msg,\r\n      description: description,\r\n      placement,\r\n    });\r\n  };\r\n\r\n  const openErrorNotification = (msg, description, placement) => {\r\n    notification.error({\r\n      message: msg,\r\n      description: description,\r\n      placement,\r\n    });\r\n  };\r\n\r\n  const handleCancelModalImport = () => {\r\n    setIsModalImportDataVisible(false);\r\n  };\r\n\r\n  const listar = () => {\r\n    getServiciosDoctor()\r\n      .then(setServiciosDoctor)\r\n      .catch((err) => console.log(err.response));\r\n  };\r\n\r\n  const listarByIdSpecialty = (id) => {\r\n    getServiciosDoctorBySpecialtyId(id).then(setServiciosDoctor);\r\n  };\r\n\r\n  const hanldeSelectSpecialty = (e) => {\r\n    setIdSpecialty(e);\r\n    setfilterSpecialtyOn(true);\r\n    listarByIdSpecialty(e);\r\n  };\r\n\r\n  const exportToPdf = () => {\r\n    if (filterSpecialtyOn) {\r\n      viewPdfServiciosDoctorFilterSpecialty(idSpecialty);\r\n    } else {\r\n      viewPdfServiciosDoctor();\r\n    }\r\n  };\r\n\r\n  const clearFilter = () => {\r\n    setfilterSpecialtyOn(false);\r\n    setIdSpecialty(null);\r\n    listar();\r\n  };\r\n\r\n  useEffect(() => {\r\n    listar();\r\n    getSpecialties().then(setSpecialties);\r\n  }, []);\r\n\r\n  const filtrarServicio = serviciosDoctor.filter((doctser) => {\r\n    console.log(doctser);\r\n    return doctser.anioAcademicoDelegados.filter((academico) => {\r\n      return academico.servicioDelegados.filter((delegado) => {\r\n        return delegado.mes.grupo == 1;\r\n      });\r\n    });\r\n  });\r\n\r\n  // console.log(filtrarServicio);\r\n  return (\r\n    <div className=\"mantenimiento\">\r\n      <header>\r\n        <h2 className=\"title\">\r\n          <Breadcrumb>\r\n            <Breadcrumb.Item>Proceso</Breadcrumb.Item>\r\n            <Breadcrumb.Item>Servicio Médico</Breadcrumb.Item>\r\n          </Breadcrumb>\r\n        </h2>\r\n        {/* <Button\r\n          type=\"dashed\"\r\n          color=\"red\"\r\n          size=\"large\"\r\n          danger\r\n          onClick={exportToPdf}\r\n        >\r\n          <FilePdfTwoTone twoToneColor=\"red\" /> Exportar a PDF\r\n        </Button> */}\r\n      </header>\r\n      <div className=\"content\">\r\n        <Form layout=\"inline\" style={{ marginBottom: \"20px\" }}>\r\n          <Form.Item label=\"Filtrar por Especialidad\">\r\n            <Select\r\n              loading={!specialties.length > 0}\r\n              showSearch\r\n              name=\"specialty\"\r\n              placeholder=\"Seleccione una especialidad\"\r\n              optionFilterProp=\"children\"\r\n              style={{ width: \"300px\" }}\r\n              value={idSpecialty}\r\n              onChange={hanldeSelectSpecialty}\r\n              filterOption={(input, option) =>\r\n                option.props.children\r\n                  .toLowerCase()\r\n                  .indexOf(input.toLowerCase()) >= 0\r\n              }\r\n            >\r\n              {specialties.map((data) => (\r\n                <Select.Option key={data.id} value={data.id}>\r\n                  {data.name}\r\n                </Select.Option>\r\n              ))}\r\n            </Select>\r\n          </Form.Item>\r\n          <Form.Item>\r\n            <Button type=\"ghost\" onClick={clearFilter}>\r\n              Limpiar\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n        <div\r\n          className=\"table-responsive\"\r\n          style={{ position: \"relative\", overflow: \"scroll\", height: \"90vh\" }}\r\n        >\r\n          <table\r\n            className=\"table table-hover table-striped\"\r\n            border=\"1\"\r\n            style={{ textAlign: \"center\" }}\r\n          >\r\n            <thead className=\"StyckyHeader\">\r\n              <tr>\r\n                <th style={{ width: \"300px\" }}>Residente</th>\r\n                <th>Especialidad</th>\r\n                <th>NIV.</th>\r\n                <th>AÑO</th>\r\n                <th>JUL</th>\r\n                <th>AGO</th>\r\n                <th>SET</th>\r\n                <th>OCT</th>\r\n                <th>NOV</th>\r\n                <th>DIC</th>\r\n                <th>ENE</th>\r\n                <th>FEB</th>\r\n                <th>MAR</th>\r\n                <th>ABR</th>\r\n                <th>MAY</th>\r\n                <th>JUN</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {serviciosDoctor.length === 0 ? (\r\n                <>\r\n                  <Spin\r\n                    style={{\r\n                      position: \"absolute\",\r\n                      left: \"0\",\r\n                      top: \"50%\",\r\n                      right: \"0\",\r\n                      bottom: \"auto\",\r\n                      zIndex: 99,\r\n                    }}\r\n                  />\r\n                  <Empty\r\n                    style={{\r\n                      position: \"absolute\",\r\n                      left: \"0\",\r\n                      top: \"45%\",\r\n                      right: \"0\",\r\n                      bottom: \"auto\",\r\n                    }}\r\n                  />\r\n                </>\r\n              ) : (\r\n                serviciosDoctor.map((data) => (\r\n                  <React.Fragment key={data.id}>\r\n                    <tr>\r\n                      <td\r\n                        className=\"stickyResidente\"\r\n                        rowSpan=\"4\"\r\n                        align=\"center\"\r\n                      >\r\n                        {data.doctor.name} -{\" \"}\r\n                        {data.doctor.schoolAgreement.school.shortName}\r\n                      </td>\r\n                      <td\r\n                        className=\"stickyEspecialidad\"\r\n                        align=\"center\"\r\n                        rowSpan=\"4\"\r\n                      >\r\n                        {data.doctor.specialty.name}\r\n                      </td>\r\n                    </tr>\r\n                    {data.anioAcademicoDelegados.map((data2) => (\r\n                      <tr\r\n                        key={String(data.id).concat(\r\n                          String(data2 == null ? 0 : data2.id)\r\n                        )}\r\n                      >\r\n                        <td>\r\n                          {data2.anioAcademico != null\r\n                            ? data2.anioAcademico.codigo\r\n                            : \"No definido\"}\r\n                        </td>\r\n                        <td>\r\n                          {data2.anioAcademico != null\r\n                            ? data2.anioAcademico.anioInicio\r\n                            : \"No definido\"}{\" \"}\r\n                          -{\" \"}\r\n                          {data2.anioAcademico != null\r\n                            ? data2.anioAcademico.anioFinal\r\n                            : \"No definido\"}\r\n                        </td>\r\n                        {data2.servicioDelegados.map((data3) => (\r\n                          <td\r\n                            key={String(data.id)\r\n                              .concat(String(data2.id == null ? 0 : data2.id))\r\n                              .concat(\r\n                                String(\r\n                                  data3.id != null\r\n                                    ? data3.id\r\n                                    : data2.id == null\r\n                                    ? 0\r\n                                    : data2.id\r\n                                )\r\n                              )}\r\n                            style={\r\n                              data3.servicio == null\r\n                                ? { background: \"#cca6a1\" }\r\n                                : data3.servicio.id == 1\r\n                                ? { background: \"#abe1ff\" }\r\n                                : {}\r\n                            }\r\n                          >\r\n                            {data3.servicio == null\r\n                              ? \"No definido\"\r\n                              : data3.servicio.name}{\" \"}\r\n                            <br />\r\n                            <Button\r\n                              color=\"blue-1\"\r\n                              size=\"small\"\r\n                              onClick={() => {\r\n                                editService(data, data3);\r\n                              }}\r\n                              style={{ marginTop: \"5px\" }}\r\n                            >\r\n                              <EditOutlined />\r\n                            </Button>\r\n                            {/* respaw */}\r\n                          </td>\r\n                        ))}\r\n                      </tr>\r\n                    ))}\r\n                  </React.Fragment>\r\n                ))\r\n              )}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n      <Drawer\r\n        title=\"Editar Servicio\"\r\n        placement=\"right\"\r\n        closable={false}\r\n        width={500}\r\n        onClose={handleCancelModalImport}\r\n        visible={isImportDataModalVisible}\r\n        id=\"newForm\"\r\n      >\r\n        <Form layout=\"vertical\" onSubmitCapture={formik.handleSubmit}>\r\n          <Form.Item label=\"Periodo\">\r\n            <Input\r\n              name=\"document\"\r\n              // value={formik.values.document}\r\n              // onChange={formik.handleChange}\r\n              value={selectedMonth}\r\n              disabled={true}\r\n            />\r\n          </Form.Item>\r\n\r\n          <Form.Item label=\"Servicio\">\r\n            <Select\r\n              showSearch\r\n              name=\"servicio.id\"\r\n              placeholder=\"Seleccione un servicio\"\r\n              optionFilterProp=\"children\"\r\n              style={{ width: \"100%\" }}\r\n              value={formik.values.servicio.id}\r\n              onChange={(text) => formik.setFieldValue(\"servicio.id\", text)}\r\n              filterOption={(input, option) =>\r\n                option.props.children\r\n                  .toLowerCase()\r\n                  .indexOf(input.toLowerCase()) >= 0\r\n              }\r\n            >\r\n              {serviceSpecialities.map((data) => (\r\n                <Select.Option key={data.id} value={data.id}>\r\n                  {data.name}\r\n                </Select.Option>\r\n              ))}\r\n            </Select>\r\n            {formik.errors.servicio && formik.touched.servicio ? (\r\n              <div className=\"error-field\">{formik.errors.servicio.id}</div>\r\n            ) : null}\r\n          </Form.Item>\r\n          <Form.Item>\r\n            <Button type=\"primary\" size=\"small\" htmlType=\"submit\" block>\r\n              Guardar\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </Drawer>\r\n    </div>\r\n  );\r\n};\r\n","F:\\Hospital Almenara\\Front\\almenara-reactapp\\src\\pages\\Mantenimiento\\Servicio\\index.js",["533","534"],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Breadcrumb,\r\n  Button,\r\n  Drawer,\r\n  Input,\r\n  Table,\r\n  Tag,\r\n  Form,\r\n  Radio,\r\n  notification,\r\n} from \"antd\";\r\nimport { EditOutlined, PlusOutlined } from \"@ant-design/icons\";\r\nimport { getServicios, createServicio, actualizarServicio } from \"../../../services/ServicioService\";\r\nimport * as Yup from \"yup\";\r\n\r\nimport \"../Mantenimiento.css\";\r\nimport { useFormik } from \"formik\";\r\n\r\nconst openNotification = (msg, description, placement) => {\r\n  notification.success({\r\n    message: msg,\r\n    description: description,\r\n    placement,\r\n  });\r\n};\r\n\r\nexport const Servicio = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [visible, setVisible] = useState(false);\r\n  const [editar, setEditar] = useState(false);\r\n  const [filterTable, setFilterTable] = useState(null);  \r\n  const [dataSource, setDataSource] = useState([]);\r\n\r\n  const listar = () => {\r\n    getServicios().then((resp) => {\r\n      resp.forEach((data) => {\r\n        data.key = data.id;\r\n      });\r\n      console.log(resp);\r\n      setDataSource(resp);\r\n      if(filterTable != null)\r\n      {\r\n        setFilterTable(resp);\r\n      }\r\n    });\r\n  };\r\n\r\n  const validationSchema = Yup.object().shape({\r\n    name: Yup.string()\r\n      .trim()\r\n      //.matches(/^[ñÑa-zA-ZáéíóúÁÉÍÓÚ ]*$/, \"Solo se admiten letras.\")\r\n      .required(\"Nombre requerido.\"),\r\n    state: Yup.boolean()\r\n      .required(\"Debe seleccionar un estado para el servicio.\"),\r\n  });\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      name: \"\",\r\n      state: true,\r\n    },\r\n    validationSchema,\r\n    onSubmit: (value) => {\r\n      console.log(value);\r\n      if(editar)\r\n      {\r\n        actualizarServicio(value).then((resp) => {\r\n          console.log(resp);\r\n          listar();\r\n          setVisible(false);\r\n          openNotification(\"Actualizado Correctamente\", \"\", \"topRight\");\r\n        });\r\n      }\r\n      else\r\n      {\r\n        createServicio(value).then((resp) => {\r\n          console.log(resp);\r\n          listar();\r\n          setVisible(false);\r\n          openNotification(\"Guardado Correctamente\", \"\", \"topRight\");\r\n        });\r\n      }      \r\n      formik.resetForm();\r\n    },\r\n  });\r\n\r\n\r\n\r\n  const columns = [\r\n    {\r\n      title: \"#\",\r\n      dataIndex: \"id\",\r\n      key: \"id\",\r\n      width: 80,\r\n      fixed: \"left\",\r\n      align: \"center\",\r\n    },\r\n    {\r\n      title: \"Nombre\",\r\n      dataIndex: \"name\",\r\n      key: \"name\",\r\n      align: \"center\",\r\n    },\r\n    {\r\n      title: \"Estado\",\r\n      dataIndex: \"state\",\r\n      key: \"state\",\r\n      width: 120,\r\n      align: \"center\",\r\n      render: (val, record) =>\r\n        record.state ? (\r\n          <Tag color=\"green\">ACTIVO</Tag>\r\n        ) : (\r\n          <Tag color=\"red\">INACTIVO</Tag>\r\n        ),\r\n      filters: [\r\n        {\r\n          text: \"ACTIVO\",\r\n          value: true,\r\n        },\r\n        {\r\n          text: \"INACTIVO\",\r\n          value: false,\r\n        },\r\n      ],\r\n      filterMultiple: false,\r\n      onFilter: (value, record) => {\r\n        let status = String(record.state);\r\n        return status.indexOf(value) === 0;\r\n      },\r\n    },\r\n    {\r\n      title: \"Acciones\",\r\n      key: \"action\",\r\n      fixed: \"right\",\r\n      width: 100,\r\n      align: \"center\",\r\n      render: (record) => (\r\n        // <Button type=\"link\" size=\"small\">\r\n        //   <EditOutlined />\r\n        // </Button>\r\n         <Button type=\"primary\" size=\"large\" onClick={() => \r\n          {             \r\n            formik.values.name = record.name;\r\n            formik.values.state = record.state;\r\n            formik.values.id = record.id;\r\n            setEditar(true);\r\n            setVisible(true);          \r\n          }\r\n         \r\n         }>\r\n        <EditOutlined />\r\n       </Button>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  const keyUpTable = (value) => {\r\n    setFilterTable(\r\n      dataSource.filter((o) =>\r\n        Object.keys(o).some((k) =>\r\n          String(o[k]).toLowerCase().includes(value.toLowerCase())\r\n        )\r\n      )\r\n    );\r\n  };\r\n\r\n  const handleCloseDrawer = () => {\r\n    setVisible(false);\r\n    formik.resetForm();\r\n  };\r\n\r\n  useEffect(() => {\r\n    setLoading(false);\r\n    listar();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"mantenimiento\">\r\n      <header>\r\n        <h2 className=\"title\">\r\n          <Breadcrumb>\r\n            <Breadcrumb.Item>Mantenimiento</Breadcrumb.Item>\r\n            <Breadcrumb.Item>Servicio</Breadcrumb.Item>\r\n          </Breadcrumb>\r\n        </h2>\r\n        <Button type=\"primary\" size=\"large\" onClick={() =>           \r\n          {\r\n            formik.values.name = null;\r\n            formik.values.id = null;\r\n            formik.values.state = null;\r\n            setEditar(false);\r\n            setVisible(true)\r\n          }\r\n          }>\r\n          <PlusOutlined /> Agregar\r\n        </Button>\r\n      </header>\r\n      <div className=\"content\">\r\n        <Input.Search\r\n          className=\"searchInput\"\r\n          placeholder=\"Buscar por ...\"\r\n          onKeyUpCapture={(e) => keyUpTable(e.target.value)}\r\n        />\r\n        <Table\r\n          loading={!dataSource.length>0}\r\n          dataSource={filterTable === null ? dataSource : filterTable}\r\n          columns={columns}\r\n          pagination={{ pageSize: 5 }}\r\n          scroll={{ x: 800 }}\r\n        />\r\n        <Drawer\r\n          title={\r\n            editar? (\r\n            \"Actualizar Servicio\"\r\n            ) : \"Agregar Servicio\"\r\n          }\r\n          placement=\"right\"\r\n          closable={false}\r\n          width={400}\r\n          onClose={handleCloseDrawer}\r\n          visible={visible}\r\n        >\r\n          <Form\r\n            title=\"Servicio\"\r\n            layout=\"vertical\"\r\n            onSubmitCapture={formik.handleSubmit}\r\n          >\r\n            <Form.Item label=\"Nombre:\" required>\r\n              <Input\r\n                name=\"name\"\r\n                value={formik.values.name}\r\n                onChange={formik.handleChange}\r\n              />\r\n              {formik.errors.name && formik.touched.name ? (\r\n                <div className=\"error-field\">{formik.errors.name}</div>\r\n              ) : null}\r\n            </Form.Item>\r\n            <Form.Item label=\"Estado:\">\r\n              <Radio.Group\r\n                name=\"state\"\r\n                value={formik.values.state}\r\n                onChange={formik.handleChange}\r\n              >\r\n                <Radio.Button value={true}>ACTIVO</Radio.Button>\r\n                <Radio.Button value={false}>INACTIVO</Radio.Button>\r\n              </Radio.Group>\r\n              {formik.errors.state && formik.touched.state ? (\r\n                <div className=\"error-field\">{formik.errors.state}</div>\r\n              ) : null}\r\n            </Form.Item>\r\n\r\n              {\r\n                editar? (\r\n                <Button type=\"primary\" htmlType=\"submit\" block> Actualizar</Button>\r\n                ) : <Button type=\"primary\" htmlType=\"submit\" block> Registrar</Button>\r\n              }\r\n\r\n            \r\n          </Form>\r\n        </Drawer>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","F:\\Hospital Almenara\\Front\\almenara-reactapp\\src\\pages\\Mantenimiento\\Especialidad\\index.js",["535"],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Breadcrumb,\r\n  Button,\r\n  Drawer,\r\n  Input,\r\n  Table,\r\n  Tag,\r\n  Form,\r\n  Radio,\r\n  notification,\r\n} from \"antd\";\r\nimport { EditOutlined, PlusOutlined } from \"@ant-design/icons\";\r\n\r\nimport {\r\n  getSpecialties,\r\n  createEspecialidad,\r\n  actualizarEspecialidad,\r\n} from \"../../../services/SpecialtyService\";\r\n\r\nimport * as Yup from \"yup\";\r\n\r\nimport \"../Mantenimiento.css\";\r\nimport { useFormik } from \"formik\";\r\n\r\nconst openNotification = (msg, description, placement) => {\r\n  notification.success({\r\n    message: msg,\r\n    description: description,\r\n    placement,\r\n  });\r\n};\r\n\r\nexport const Especialidad = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [visible, setVisible] = useState(false);\r\n  const [editar, setEditar] = useState(false);\r\n  const [filterTable, setFilterTable] = useState(null);\r\n  const [dataSource, setDataSource] = useState([]);\r\n\r\n  const listar = () => {\r\n    getSpecialties().then((resp) => {\r\n      resp.forEach((data) => {\r\n        data.key = data.id;\r\n      });\r\n      console.log(resp);\r\n      setDataSource(resp);\r\n    });\r\n  };\r\n\r\n  const validationSchema = Yup.object().shape({\r\n    name: Yup.string()\r\n      .trim()\r\n      //.matches(/^[ñÑa-zA-ZáéíóúÁÉÍÓÚ ]*$/, \"Solo se admiten letras.\")\r\n      .required(\"Nombre requerido.\"),\r\n    state: Yup.boolean().required(\r\n      \"Debe seleccionar un estado para la especialidad.\"\r\n    ),\r\n  });\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      name: \"\",\r\n      state: true,\r\n    },\r\n    validationSchema,\r\n    onSubmit: (value) => {\r\n      console.log(value);\r\n      if (editar) {\r\n        actualizarEspecialidad(value).then((resp) => {\r\n          console.log(resp);\r\n          listar();\r\n          setVisible(false);\r\n          openNotification(\"Actualizado Correctamente\", \"\", \"topRight\");\r\n        });\r\n      } else {\r\n        createEspecialidad(value).then((resp) => {\r\n          console.log(resp);\r\n          listar();\r\n          setVisible(false);\r\n          openNotification(\"Guardado Correctamente\", \"\", \"topRight\");\r\n        });\r\n      }\r\n      formik.resetForm();\r\n    },\r\n  });\r\n\r\n  const columns = [\r\n    {\r\n      title: \"#\",\r\n      dataIndex: \"id\",\r\n      key: \"id\",\r\n      width: 80,\r\n      fixed: \"left\",\r\n      align: \"center\",\r\n    },\r\n    {\r\n      title: \"Nombre\",\r\n      dataIndex: \"name\",\r\n      key: \"name\",\r\n      align: \"center\",\r\n    },\r\n    {\r\n      title: \"Estado\",\r\n      dataIndex: \"state\",\r\n      key: \"state\",\r\n      width: 120,\r\n      align: \"center\",\r\n      render: (val, record) =>\r\n        record.state ? (\r\n          <Tag color=\"green\">ACTIVO</Tag>\r\n        ) : (\r\n          <Tag color=\"red\">INACTIVO</Tag>\r\n        ),\r\n      filters: [\r\n        {\r\n          text: \"ACTIVO\",\r\n          value: true,\r\n        },\r\n        {\r\n          text: \"INACTIVO\",\r\n          value: false,\r\n        },\r\n      ],\r\n      filterMultiple: false,\r\n      onFilter: (value, record) => {\r\n        let status = String(record.state);\r\n        return status.indexOf(value) === 0;\r\n      },\r\n    },\r\n    {\r\n      title: \"Acciones\",\r\n      key: \"action\",\r\n      fixed: \"right\",\r\n      width: 100,\r\n      align: \"center\",\r\n      render: (record) => (\r\n        // <Button type=\"link\" size=\"small\">\r\n        //   <EditOutlined />\r\n        // </Button>\r\n        <Button\r\n          type=\"primary\"\r\n          size=\"large\"\r\n          onClick={() => {\r\n            formik.values.name = record.name;\r\n            formik.values.state = record.state;\r\n            formik.values.id = record.id;\r\n            setEditar(true);\r\n            setVisible(true);\r\n          }}\r\n        >\r\n          <EditOutlined />\r\n        </Button>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  const keyUpTable = (value) => {\r\n    setFilterTable(\r\n      dataSource.filter((o) =>\r\n        Object.keys(o).some((k) =>\r\n          String(o[k]).toLowerCase().includes(value.toLowerCase())\r\n        )\r\n      )\r\n    );\r\n  };\r\n\r\n  const handleCloseDrawer = () => {\r\n    setVisible(false);\r\n    formik.resetForm();\r\n  };\r\n\r\n  useEffect(() => {\r\n    setLoading(false);\r\n    listar();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"mantenimiento\">\r\n      <header>\r\n        <h2 className=\"title\">\r\n          <Breadcrumb>\r\n            <Breadcrumb.Item>Mantenimiento</Breadcrumb.Item>\r\n            <Breadcrumb.Item>Especialidad</Breadcrumb.Item>\r\n          </Breadcrumb>\r\n        </h2>\r\n        <Button\r\n          type=\"primary\"\r\n          size=\"large\"\r\n          onClick={() => {\r\n            formik.values.name = null;\r\n            formik.values.id = null;\r\n            formik.values.state = null;\r\n            setEditar(false);\r\n            setVisible(true);\r\n          }}\r\n        >\r\n          <PlusOutlined /> Agregar\r\n        </Button>\r\n      </header>\r\n      <div className=\"content\">\r\n        <Input.Search\r\n          className=\"searchInput\"\r\n          placeholder=\"Buscar por ...\"\r\n          onKeyUpCapture={(e) => keyUpTable(e.target.value)}\r\n        />\r\n        <Table\r\n          loading={!dataSource.length > 0}\r\n          dataSource={filterTable === null ? dataSource : filterTable}\r\n          columns={columns}\r\n          pagination={{ pageSize: 5 }}\r\n          scroll={{ x: 800 }}\r\n        />\r\n        <Drawer\r\n          title={editar ? \"Actualizar Especialidad\" : \"Agregar Especialidad\"}\r\n          placement=\"right\"\r\n          closable={false}\r\n          width={400}\r\n          onClose={handleCloseDrawer}\r\n          visible={visible}\r\n        >\r\n          <Form\r\n            title=\"Especialidad\"\r\n            layout=\"vertical\"\r\n            onSubmitCapture={formik.handleSubmit}\r\n          >\r\n            <Form.Item label=\"Nombre:\" required>\r\n              <Input\r\n                name=\"name\"\r\n                value={formik.values.name}\r\n                onChange={formik.handleChange}\r\n              />\r\n              {formik.errors.name && formik.touched.name ? (\r\n                <div className=\"error-field\">{formik.errors.name}</div>\r\n              ) : null}\r\n            </Form.Item>\r\n            <Form.Item label=\"Estado:\">\r\n              <Radio.Group\r\n                name=\"state\"\r\n                value={formik.values.state}\r\n                onChange={formik.handleChange}\r\n              >\r\n                <Radio.Button value={true}>ACTIVO</Radio.Button>\r\n                <Radio.Button value={false}>INACTIVO</Radio.Button>\r\n              </Radio.Group>\r\n              {formik.errors.state && formik.touched.state ? (\r\n                <div className=\"error-field\">{formik.errors.state}</div>\r\n              ) : null}\r\n            </Form.Item>\r\n            {editar ? (\r\n              <Button type=\"primary\" htmlType=\"submit\" block>\r\n                {\" \"}\r\n                Actualizar\r\n              </Button>\r\n            ) : (\r\n              <Button type=\"primary\" htmlType=\"submit\" block>\r\n                {\" \"}\r\n                Registrar\r\n              </Button>\r\n            )}\r\n          </Form>\r\n        </Drawer>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","F:\\Hospital Almenara\\Front\\almenara-reactapp\\src\\pages\\Mantenimiento\\Grupo\\index.js",["536","537","538","539","540","541","542","543","544","545","546","547","548","549","550","551","552","553","554","555","556","557","558","559"],"import React, { useEffect, useState } from \"react\";\r\nimport { } from \"antd\";\r\nimport {\r\n  Breadcrumb, Modal, Select ,\r\n  Button,\r\n  Drawer,\r\n  Input,\r\n  Table,\r\n  Tag,\r\n  Form,\r\n  Radio,\r\n  notification,\r\n  AutoComplete,\r\n} from \"antd\";\r\nimport { EditOutlined, PlusOutlined } from \"@ant-design/icons\";\r\nimport { getDoctors, getDoctorsByTeam, getDoctorsByTeamTipo, getTeamIdCategoriaTodos, getFindAllByTeamIdGrupo, findAllTipos, \r\n  createDoctor, createDoctorGrupo, borrarDoctorGrupo } from \"../../../services/DoctorService\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport \"./Grupo.css\";\r\n\r\nexport const Grupo = () => {\r\n  const [team1, setTeam1] = useState([]);\r\n  const [categoriaslst, setCategoriaslst] = useState([]);\r\n  const [doctoreslst, setDoctoreslst] = useState([]);  \r\n  const [editar, setEditar] = useState(false);  \r\n  const [visible, setVisible] = useState(false);\r\n  const [categoriaId, setCategoria] = useState(null);  \r\n  const [placeCategoria, setPlaceCategoria] = useState('Seleccione una Categoría');\r\n  const [placeNombre, setPlaceNombre] = useState('Seleccione un Médico');\r\n  const [placeGrupo, setPlaceGrupo] = useState('Seleccione un Grupo');\r\n  const [idTeam, setIdTeam] = useState(null);\r\n  var grupoDoctores = [];\r\n\r\n \r\n  const hanldeSelectTeam = (e) => {\r\n    // setGrupoDoctores([]);\r\n    getFindAllByTeamIdGrupo(e, categoriaId).then( x =>\r\n      {\r\n        console.log(x);        \r\n        grupoDoctores = x;\r\n\r\n        Modal.info({\r\n          title: \"Asignar Grupo\",\r\n          content: (\r\n            <div>\r\n            {grupoDoctores.map((data) => (              \r\n            <table className=\"table table-striped table-hover\">\r\n              <thead>\r\n                <tr>               \r\n                  <th>Doctor</th>\r\n                  <th>Especialidad</th>\r\n                  <th>Acciones</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                      {data.doctores.map((data2) => (\r\n                        <tr>\r\n\r\n                        {\r\n                          data2.nivel.id == 1? (\r\n                            <td style={{textAlign: 'left', backgroundColor:'#CAFFB3'}}>- {data2.paternalSurname} {data2.maternalSurname}, {data2.name}</td>\r\n                          ): data2.nivel.id == 2? (\r\n                            <td style={{textAlign: 'left', backgroundColor:'#FFFFB3'}}>- {data2.paternalSurname} {data2.maternalSurname}, {data2.name}</td>\r\n                          ):(\r\n                            <td style={{textAlign: 'left', backgroundColor:'#FFBBB3'}}>- {data2.paternalSurname} {data2.maternalSurname}, {data2.name}</td>\r\n                          )\r\n                        }\r\n\r\n                        {\r\n                          data2.nivel.id == 1? (                            \r\n                            <td style={{textAlign: 'left', backgroundColor:'#CAFFB3'}}>{data2.specialty.name}</td>\r\n                          ): data2.nivel.id == 2? (                            \r\n                            <td style={{textAlign: 'left', backgroundColor:'#FFFFB3'}}>{data2.specialty.name}</td>\r\n                          ):(                            \r\n                            <td style={{textAlign: 'left', backgroundColor:'#FFBBB3'}}>{data2.specialty.name}</td>\r\n                          )\r\n                        }\r\n                          \r\n                          <td key=\"edit\">\r\n                            <Button type=\"primary\" size=\"large\" onClick={() => \r\n                                {             \r\n                                  formik.values.name = data2.name;             \r\n                                  formik.values.team = data2.team.id;\r\n                                  formik.values.id = data2.id;  \r\n                                  console.log(data2); \r\n                                  setEditar(true);                               \r\n                                  setVisible(true);\r\n                                }\r\n                              }>\r\n                              <EditOutlined />\r\n                            </Button>        \r\n                            </td>\r\n                        </tr>\r\n                      ))}\r\n              </tbody>\r\n            </table>            \r\n            ))}\r\n          </div>\r\n          ),\r\n          onOk() {},\r\n        });\r\n  \r\n      }\r\n      );  \r\n  };\r\n\r\n  const handleCloseDrawer = () => {\r\n    setVisible(false);\r\n    formik.resetForm();\r\n  };\r\n\r\n  const editarMedico = (e) => {\r\n    console.log(e);\r\n  }\r\n\r\n  \r\n  const hanldeSelectNombre = (e) => {\r\n    console.log(e);\r\n    console.log(e.nativeEvent);    \r\n    console.log(e.nativeEvent.data);\r\n    \r\n    formik.values.name = e.nativeEvent.data;\r\n\r\n};\r\n\r\n  const hanldeSelectCategoria = (e) => {\r\n      console.log(e);\r\n      if(e == 1){\r\n        setPlaceCategoria('Medicina');\r\n        setCategoria(e);\r\n        cargarListado(e);        \r\n      }\r\n      if(e == 2){\r\n        setPlaceCategoria('Cirugía');\r\n        setCategoria(e);\r\n        cargarListado(e); \r\n      }\r\n  };\r\n\r\n  \r\n  \r\n  const hanldeSelectNombreMedico = (e) => {\r\n    console.log(e);\r\n        \r\n    doctoreslst.find(x => {\r\n      if(x.id == e){        \r\n        formik.values.name = x.name;\r\n        formik.values.id = e;\r\n        setPlaceNombre(formik.values.name);\r\n      }\r\n    });\r\n\r\n};\r\n\r\n\r\n  const hanldeSelectTeama = (e) => {\r\n    console.log(e);\r\n    console.log(formik.values.team);\r\n\r\n    team1.find(x => {\r\n\r\n      if(x.idGrupo == e){\r\n        setPlaceGrupo(x.nombreGrupo);\r\n      }\r\n\r\n    });\r\n\r\n    \r\n    formik.values.team  = e;\r\n    \r\n};\r\n\r\n  useEffect(() => {\r\n    setIdTeam(null);\r\n    cargarDoctores();\r\n\r\n      findAllTipos().then( x =>\r\n      {  \r\n        setCategoriaslst(x);\r\n      }\r\n      );\r\n\r\n      getTeamIdCategoriaTodos().then( x => {\r\n        setTeam1(x);\r\n      });\r\n\r\n\r\n  }, []);\r\n\r\n  \r\nconst cargarListado = (cate) => {\r\n    getDoctorsByTeamTipo(1, cate).then( x => {\r\n      console.log(x);\r\n      setTeam1(x) ;\r\n    });\r\n};\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  // name: Yup.string()\r\n  //   .trim()\r\n  //   .matches(/^[ñÑa-zA-Z ]*$/, \"Solo se admiten letras.\")\r\n  //   .required(\"Nombre requerido.\"),\r\n  // shortName: Yup.string()\r\n  //   .trim()\r\n  //   .matches(/^[ñÑa-zA-Z ]*$/, \"Solo se admiten letras.\")\r\n  //   .required(\"Nombre Abreviado requerido.\"),\r\n});\r\n\r\n\r\nconst openNotification = (msg, description, placement) => {\r\n  notification.success({\r\n    message: msg,\r\n    description: description,\r\n    placement,\r\n  });\r\n};\r\n\r\n\r\nconst formik = useFormik({\r\n  initialValues: {\r\n    name: \"\",\r\n    shortName: \"\",\r\n    status: true,\r\n  },\r\n  validationSchema,\r\n  onSubmit: (value) => {\r\n    console.log(value);\r\n  \r\n    createDoctorGrupo(value.id, value.name, value.team).then((resp) => {\r\n         console.log(resp);                \r\n         setVisible(false);\r\n         cargarListado(categoriaId);\r\n         openNotification(\"Guardado Correctamente\", \"\", \"topRight\");\r\n       });\r\n   \r\n   \r\n    \r\n    formik.resetForm();\r\n  },\r\n});\r\n\r\n\r\n\r\n  const borrarDoctor = (id) => {\r\n    borrarDoctorGrupo(id).then((resp) => {\r\n      console.log(resp);\r\n      setVisible(false);\r\n      cargarListado(categoriaId);\r\n      openNotification(\"Eliminado Correctamente\", \"\", \"topRight\");\r\n    });\r\n  }\r\n\r\n  const cargarDoctores = () => {\r\n    getDoctors().then((resp) => {    \r\n      var resp2 = [];\r\n      resp.forEach(element => {\r\n        if(element.status){\r\n          resp2.push(element);\r\n        }\r\n      });\r\n      \r\n      setDoctoreslst(resp2);\r\n    });\r\n  }\r\n  \r\n\r\n\r\n  return (\r\n    <div className=\"mantenimiento\">\r\n      <header>       \r\n        <h2 className=\"title\">\r\n          <Breadcrumb>\r\n            <Breadcrumb.Item>Mantenimiento</Breadcrumb.Item>\r\n            <Breadcrumb.Item>Asignar Grupos</Breadcrumb.Item>\r\n          </Breadcrumb>\r\n        </h2>\r\n        <Button type=\"primary\" size=\"large\" onClick={() =>           \r\n          {\r\n            formik.values.name = null;\r\n            formik.values.shortName = null;\r\n            formik.values.true = null;\r\n            formik.values.id = null;\r\n            cargarDoctores();\r\n            setEditar(false);\r\n            setVisible(true);\r\n          }\r\n          }>\r\n          <PlusOutlined /> Agregar\r\n        </Button>\r\n      </header>\r\n      <div className=\"content\">\r\n        {/* TIPOS */}\r\n        <Form layout=\"inline\" style={{ marginBottom: \"20px\" }}>\r\n          <Form.Item label=\"Categoría\">\r\n            <Select\r\n              showSearch\r\n              name=\"cateogria\"\r\n              placeholder= {placeCategoria}\r\n              optionFilterProp=\"children\"\r\n              style={{ width: \"300px\", marginLeft: \"45px\" }}\r\n              value={idTeam}\r\n              onChange={hanldeSelectCategoria}\r\n              filterOption={(input, option) =>\r\n                option.props.children\r\n                  .toLowerCase()\r\n                  .indexOf(input.toLowerCase()) >= 0\r\n              }\r\n            >\r\n                {categoriaslst.map((data) => (\r\n                <Select.Option key={data.name} value={data.id}>\r\n                {data.name}\r\n                </Select.Option>\r\n                ))}\r\n            </Select>\r\n          </Form.Item>\r\n        </Form>\r\n        \r\n        {/* //grupos */}\r\n        <Form layout=\"inline\" style={{ marginBottom: \"20px\" }}>\r\n          <Form.Item label=\"Filtrar por Grupo\">\r\n            <Select\r\n              showSearch\r\n              name=\"specialty\"\r\n              placeholder=\"Seleccione un Grupo\"\r\n              optionFilterProp=\"children\"\r\n              style={{ width: \"300px\" }}\r\n              value={idTeam}\r\n              onChange={hanldeSelectTeam}\r\n              filterOption={(input, option) =>\r\n                option.props.children\r\n                  .toLowerCase()\r\n                  .indexOf(input.toLowerCase()) >= 0\r\n              }>\r\n            {team1.map((data) => (\r\n              <Select.Option key={data.idGrupo} value={data.idGrupo}>\r\n             {data.nombreGrupo}\r\n              </Select.Option>\r\n              ))}\r\n            </Select>\r\n          </Form.Item>\r\n        </Form>\r\n          \r\n\r\n              <p >Leyenda de colores: Residente Nivel 1:  \r\n                <span style={{color: \"#CAFFB3\", border: \"1px solid black\", borderRadius:\"10px\", paddingLeft: \"10px\", paddingRight:\"10px\", color:\"black\", backgroundColor:\"#CAFFB3\", marginLeft:\"5px\", marginRight:\"5px\"}}></span>\r\n                  | Residente Nivel 2: \r\n                <span style={{color: \"#FFFFB3\", border: \"1px solid black\", borderRadius:\"10px\", paddingLeft: \"10px\", paddingRight:\"10px\", color:\"black\", backgroundColor:\"#FFFFB3\", marginLeft:\"5px\", marginRight:\"5px\"}}></span>\r\n                   | Residente Nivel 3:\r\n                <span style={{color: \"#FFBBB3\", border: \"1px solid black\", borderRadius:\"10px\", paddingLeft: \"10px\", paddingRight:\"10px\", color:\"black\", backgroundColor:\"#FFBBB3\", marginLeft:\"5px\", marginRight:\"5px\"}}></span>\r\n                   </p>\r\n\r\n        <div\r\n          className=\"table-group table-responsive\"\r\n          style={{ textAlign: \"center\", display: \"flex\" }}>\r\n\r\n            {team1.map((data) => (\r\n                <table className=\"table table-striped table-hover\" border=\"1\" style={{width: \"340px\", marginRight: \"10px\"}}>\r\n                <thead>\r\n                  <tr >\r\n                    <th> {data.nombreGrupo}</th>\r\n                    <th> Acciones</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {data.doctores.map((data2) => (\r\n                    <tr >\r\n                       {\r\n                data2.nivel.id == 1? (\r\n                    <td key={data2.id} style={{textAlign: 'left', backgroundColor:'#CAFFB3'}}>\r\n                    {data2.name} {data2.paternalSurname}\r\n                    </td>\r\n                ): data2.nivel.id == 2? (\r\n                  <td key={data2.id} style={{textAlign: 'left', backgroundColor:'#FFFFB3'}}>\r\n                  {data2.name} {data2.paternalSurname}\r\n                  </td>\r\n                ):(\r\n                  <td key={data2.id} style={{textAlign: 'left', backgroundColor:'#FFBBB3'}}>\r\n                  {data2.name} {data2.paternalSurname}\r\n                  </td>\r\n                )\r\n              }\r\n                                                                  \r\n                      <td key=\"edit\">\r\n\r\n                      <Button type=\"primary\" size=\"large\" onClick={() => \r\n                          {                    \r\n                            formik.values.name = data2.name;             \r\n                            formik.values.team = data2.team.id;\r\n                            formik.values.id = data2.id;\r\n                            console.log(data2);\r\n                            setEditar(true);\r\n                            setVisible(true);          \r\n                          }\r\n                        \r\n                        }>\r\n                        <EditOutlined />\r\n                      </Button>        \r\n\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n              ))}\r\n      \r\n        </div>\r\n      </div>\r\n\r\n\r\n      <Drawer\r\n          title=\"Médico\"\r\n          placement=\"right\"\r\n          closable={false}\r\n\r\n          width={400}\r\n          onClose={handleCloseDrawer}\r\n          visible={visible}\r\n        >\r\n          <Form\r\n            title=\"Medico\"\r\n            layout=\"vertical\"\r\n            onSubmitCapture={formik.handleSubmit}\r\n          >\r\n            <Form.Item label=\"Nombre:\" required>\r\n\r\n            {\r\n                editar? (\r\n              \r\n                  <Input\r\n                  name=\"name\"\r\n                  disabled                 \r\n                  value={formik.values.name}\r\n                  onChange={formik.handleChange}\r\n                />\r\n                ) :    \r\n                <Select\r\n              showSearch\r\n              name=\"medico\"\r\n              placeholder= {placeNombre}\r\n              optionFilterProp=\"children\"\r\n              style={{ width: \"300px\"}}\r\n              value={formik.values.name}\r\n              onChange={hanldeSelectNombreMedico}\r\n              filterOption={(input, option) =>\r\n                option.props.children\r\n                  .toLowerCase()\r\n                  .indexOf(input.toLowerCase()) >= 0\r\n              }\r\n            >\r\n                {doctoreslst.map((data) => (\r\n                <Select.Option key={data.id} value={data.id}>\r\n                {data.name}\r\n                </Select.Option>\r\n                ))}\r\n            </Select>\r\n              } \r\n                {formik.errors.name && formik.touched.name ? (\r\n                  <div className=\"error-field\">{formik.errors.name}</div>\r\n                ) : null}\r\n            </Form.Item>\r\n           \r\n            <Form.Item label=\"Categoría\">\r\n            <Select\r\n              showSearch\r\n              name=\"cateogria\"\r\n              placeholder= {placeCategoria}\r\n              optionFilterProp=\"children\"\r\n              style={{ width: \"300px\"}}\r\n              value={formik.values.categoria}\r\n              onChange={hanldeSelectCategoria}\r\n              filterOption={(input, option) =>\r\n                option.props.children\r\n                  .toLowerCase()\r\n                  .indexOf(input.toLowerCase()) >= 0\r\n              }\r\n            >\r\n                {categoriaslst.map((data) => (\r\n                <Select.Option key={data.name} value={data.id}>\r\n                {data.name}\r\n                </Select.Option>\r\n                ))}\r\n            </Select>\r\n          </Form.Item>\r\n\r\n          <Form.Item label=\"Grupo\">\r\n            <Select\r\n              showSearch\r\n              name=\"specialty2\"\r\n              placeholder=\"Seleccione un Grupo\"\r\n              optionFilterProp=\"children\"\r\n              style={{ width: \"300px\" }}\r\n              value={formik.values.team}\r\n              onChange={hanldeSelectTeama}  \r\n              filterOption={(input, option) =>\r\n                option.props.children\r\n                  .toLowerCase()\r\n                  .indexOf(input.toLowerCase()) >= 0\r\n              }>\r\n            {team1.map((data) => (\r\n              <Select.Option key={data.nombreGrupo} value={data.idGrupo}>\r\n             {data.nombreGrupo}\r\n              </Select.Option>\r\n              ))}\r\n            </Select>\r\n          </Form.Item>\r\n\r\n               {\r\n                editar? (\r\n                <Button type=\"primary\" htmlType=\"submit\"  block> Actualizar</Button>\r\n                ) : <Button type=\"primary\" htmlType=\"submit\"  block> Registrar</Button>\r\n              } \r\n              <Button type=\"danger\" \r\n              onClick={() => \r\n                {     console.log(formik.values.idta2); \r\n                  borrarDoctor(formik.values.id);           \r\n                \r\n                }\r\n              }\r\n              block> Eliminar</Button>\r\n\r\n            \r\n          </Form>\r\n        </Drawer>\r\n\r\n    </div>\r\n\r\n\r\n\r\n  );\r\n};\r\n","F:\\Hospital Almenara\\Front\\almenara-reactapp\\src\\pages\\Mantenimiento\\Usuario\\index.js",["560","561","562","563","564","565","566","567","568"],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Breadcrumb,\r\n  Button,\r\n  Drawer,\r\n  Input,\r\n  Table,\r\n  Tag,\r\n  Form,\r\n  Radio,\r\n  notification,\r\n  Checkbox,\r\n  Row,\r\n  Col,\r\n} from \"antd\";\r\nimport { EditOutlined, PlusOutlined, EyeInvisibleOutlined, EyeTwoTone } from \"@ant-design/icons\";\r\nimport { getRoleById, getRoles } from \"../../../services/RoleService\";\r\nimport { getUserById, getUsers, findById, updateUser, createUser } from \"../../../services/UserService\";\r\nimport * as Yup from \"yup\";\r\n\r\nimport \"../Mantenimiento.css\";\r\nimport { useFormik } from \"formik\";\r\nimport { render } from \"@testing-library/react\";\r\n\r\nconst openNotification = (msg, description, placement) => {\r\n  notification.success({\r\n    message: msg,\r\n    description: description,\r\n    placement,\r\n  });\r\n};\r\n\r\nconst openErrorNotification = (msg, description, placement) => {\r\n  notification.error({\r\n    message: msg,\r\n    description: description,\r\n    placement,\r\n  });\r\n};\r\n\r\nexport const Usuario = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [visibleNewForm, setVisibleNewForm] = useState(false);\r\n  const [visibleUpdateForm, setVisibleUpdateForm] = useState(false);\r\n  const [editar, setEditar] = useState(false);\r\n  const [filterTable, setFilterTable] = useState(null);  \r\n  const [dataSource, setDataSource] = useState([]);\r\n  const [selectedRoles, setSelectedRoles] = useState([]);\r\n\r\n  const [roles, setRoles] = useState([]);\r\n\r\n  const listar = () => {\r\n    getUsers().then((resp) => {\r\n      console.log(resp);\r\n      resp.forEach((data) => {\r\n        data.key = data.id;\r\n      });\r\n      setDataSource(resp);\r\n    });\r\n  };\r\n\r\n  function roleOptions(data){\r\n    let response = [];\r\n    data.forEach( (role) => {\r\n      // console.log(role);\r\n      response.push( {\r\n        label : role.name,\r\n        value : role.id\r\n      });\r\n    });\r\n    return response;\r\n  };\r\n\r\n  function getUser(id)\r\n  {\r\n    getUserById(id).then((data) => {\r\n      setDataDoctorToForm(data);\r\n      setVisibleUpdateForm(true);\r\n    });\r\n  }\r\n\r\n  function roleOptionsChecked(data){\r\n    let response = [];\r\n    console.log(data);\r\n    data.forEach( (role) => {      \r\n      response.push( role.id );\r\n    });\r\n    return response;\r\n  };\r\n\r\n  function onChangeRoles(checkedValues) {\r\n    console.log(checkedValues);\r\n    let chk = [];\r\n    formik.values.roles = [];\r\n    checkedValues.forEach(rol => {      \r\n      formik.values.roles.push({id : rol});\r\n      chk.push(rol);\r\n    });    \r\n\r\n    setSelectedRoles(chk);\r\n  }\r\n\r\n  const validationSchema = Yup.object().shape({\r\n    username: Yup.string()\r\n      .trim()\r\n      .matches(/^[ñÑa-zA-Z ]*$/, \"Solo se admiten letras.\")\r\n      .required(\"Nombre de Usuario requerido.\"),\r\n    password: Yup.string()      \r\n      .min(8, \"Debe tener al menos 8 caracteres.\")\r\n      .required(\"Contraseña requerido.\"),\r\n    name: Yup.string()\r\n      .trim()\r\n      .matches(/^[ñÑa-zA-Z ]*$/, \"Solo se admiten letras.\")\r\n      .required(\"Nombre requerido.\"),\r\n    lastName: Yup.string()\r\n      .trim()\r\n      .matches(/^[ñÑa-zA-Z ]*$/, \"Solo se admiten letras.\")\r\n      .required(\"Apellido requerido.\"),\r\n  });\r\n\r\n  const formik = useFormik({\r\n    initialValues: {  \r\n      action : \"new\",\r\n      username : \"\",\r\n      password : \"\",\r\n      name : \"\",\r\n      lastName : \"\",\r\n      status : true,\r\n      roles: []\r\n  },\r\n    validationSchema,\r\n    onSubmit: (value) => {\r\n      console.log(value);\r\n      delete value.key;      \r\n      value.username = value.username.trim();      \r\n      if(value.action == \"new\" || editar == false)\r\n      { delete value.action;      \r\n        createUser(value).then((resp) => {\r\n          console.log(resp);\r\n          listar();\r\n          setVisibleNewForm(false);\r\n          openNotification(\"Registrado Correctamente\", \"\", \"topRight\");\r\n          formik.resetForm();\r\n        }).catch(function (error) {\r\n          if (error.response) \r\n          {\r\n            openErrorNotification(error.response.data.message, \"\", \"topRight\");            \r\n          }\r\n        });\r\n      }\r\n      else if(value.action == \"update\" || editar == true)\r\n      { delete value.action;      \r\n        updateUser(value).then((resp) => {\r\n          console.log(resp);\r\n          listar();\r\n          setVisibleUpdateForm(false);\r\n          openNotification(\"Actualizado Correctamente\", \"\", \"topRight\");\r\n          formik.resetForm();\r\n        }).catch(function (error) {\r\n          if (error.response) \r\n          { openErrorNotification(error.response.data.message, \"\", \"topRight\");\r\n            // console.log(error.response.status);\r\n            // console.log(error.response.headers);\r\n          }\r\n        });\r\n      }      \r\n    },\r\n  });\r\n\r\n\r\n\r\n  const columns = [\r\n    {\r\n      title: \"#\",\r\n      dataIndex: \"id\",\r\n      key: \"id\",\r\n      width: 50,\r\n      fixed: \"left\",\r\n      align: \"center\",\r\n    },\r\n    {\r\n      title: \"Nombre de Usuario\",\r\n      dataIndex: \"username\",\r\n      key: \"username\",\r\n      align: \"center\",\r\n    },\r\n    {\r\n      title: \"Nombres\",\r\n      dataIndex: \"name\",\r\n      key: \"name\",\r\n      align: \"center\",\r\n    },    \r\n    {\r\n      title: \"Apellido\",\r\n      dataIndex: \"lastName\",\r\n      key: \"lastName\",\r\n      align: \"center\",\r\n    },\r\n    {\r\n      title: \"Estado\",\r\n      dataIndex: \"status\",\r\n      key: \"status\",\r\n      width: 120,\r\n      align: \"center\",\r\n      render: (val, record) =>\r\n        record.status ? (\r\n          <Tag color=\"green\">ACTIVO</Tag>\r\n        ) : (\r\n          <Tag color=\"red\">INACTIVO</Tag>\r\n        ),\r\n      filters: [\r\n        {\r\n          text: \"ACTIVO\",\r\n          value: true,\r\n        },\r\n        {\r\n          text: \"INACTIVO\",\r\n          value: false,\r\n        },\r\n      ],\r\n      filterMultiple: false,\r\n      onFilter: (value, record) => {\r\n        let status = String(record.status);\r\n        return status.indexOf(value) === 0;\r\n      },\r\n    },\r\n    {\r\n      title: \"Acciones\",\r\n      key: \"action\",\r\n      fixed: \"right\",\r\n      width: 100,\r\n      align: \"center\",\r\n      render: (record) => (\r\n         <Button type=\"primary\" size=\"large\" onClick={() => { showUpdateForm(record); }}>\r\n        <EditOutlined />\r\n       </Button>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  const keyUpTable = (value) => {\r\n    setFilterTable(\r\n      dataSource.filter((o) =>\r\n        Object.keys(o).some((k) =>\r\n          String(o[k]).toLowerCase().includes(value.toLowerCase())\r\n        )\r\n      )\r\n    );\r\n  };\r\n\r\n  const handleCloseDrawerNewForm = (e) => {    \r\n    setVisibleNewForm(false);\r\n    formik.resetForm();\r\n  };\r\n\r\n  const handleCloseDrawerUpdateForm = (e) => {    \r\n    setVisibleUpdateForm(false);\r\n    formik.resetForm();\r\n  };\r\n\r\n  const showUpdateForm = (user) => {    \r\n    getUser(user.id);\r\n    console.log(user);    \r\n  };\r\n\r\n  function setDataDoctorToForm(doctor)\r\n  { formik.values.id = doctor.id;\r\n    formik.values.username = doctor.username;\r\n    formik.values.password = doctor.password;\r\n    formik.values.name = doctor.name;\r\n    formik.values.lastName = doctor.lastName;\r\n    formik.values.status = doctor.status;\r\n    formik.values.roles = doctor.roles;\r\n    formik.values.action = \"update\";\r\n    let chkRoles = [];\r\n    doctor.roles.forEach(r => {chkRoles.push(r.id); console.log(r)});\r\n    console.log(chkRoles);\r\n    setSelectedRoles(chkRoles);\r\n    setEditar(true);\r\n  }\r\n\r\n  function cleanDataDoctorToForm()\r\n  { formik.values.id = null;\r\n    formik.values.username = '';\r\n    formik.values.password = '';\r\n    formik.values.name = '';\r\n    formik.values.lastName = '';\r\n    formik.values.status = true;\r\n    formik.values.roles = [];\r\n    formik.values.action = \"new\";\r\n    setEditar(false);\r\n  }\r\n\r\n  useEffect(() => {\r\n    setLoading(false);    \r\n    listar();\r\n    getRoles().then(setRoles);\r\n    // console.log(roles);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"mantenimiento\">\r\n      <header>\r\n        <h2 className=\"title\">\r\n          <Breadcrumb>\r\n            <Breadcrumb.Item>Mantenimiento</Breadcrumb.Item>\r\n            <Breadcrumb.Item>Usuario</Breadcrumb.Item>\r\n          </Breadcrumb>\r\n        </h2>\r\n        <Button type=\"primary\" size=\"large\" onClick={() =>{ cleanDataDoctorToForm(); setVisibleNewForm(true)}}>\r\n          <PlusOutlined /> Agregar\r\n        </Button>\r\n      </header>\r\n      <div className=\"content\">\r\n        <Input.Search\r\n          className=\"searchInput\"\r\n          placeholder=\"Buscar por ...\"\r\n          onKeyUpCapture={(e) => keyUpTable(e.target.value)}\r\n        />\r\n        <Table\r\n          loading={!dataSource.length>0}\r\n          dataSource={filterTable === null ? dataSource : filterTable}\r\n          columns={columns}\r\n          pagination={{ pageSize: 5 }}\r\n          scroll={{ x: 800 }}\r\n        />\r\n        <Drawer\r\n          title=\"Agregar Usuario\"\r\n          placement=\"right\"\r\n          closable={false}\r\n          width={400}\r\n          onClose={handleCloseDrawerNewForm}\r\n          visible={visibleNewForm}\r\n        >\r\n          <Form\r\n            title=\"Usuario\"\r\n            layout=\"vertical\"\r\n            onSubmitCapture={formik.handleSubmit}\r\n          >\r\n            <Row gutter={12} style={{display:'none'}}>\r\n              <Col span={12}>\r\n                <Form.Item required>\r\n                  <Input\r\n                    name=\"action\"\r\n                    value={formik.values.action}\r\n                    onChange={formik.handleChange}                    \r\n                  />                  \r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Form.Item label=\"Nombre de Usuario:\" required>\r\n              <Input\r\n                name=\"username\"\r\n                value={formik.values.username}\r\n                onChange={formik.handleChange}\r\n              />\r\n              {formik.errors.username && formik.touched.username ? (\r\n                <div className=\"error-field\">{formik.errors.username}</div>\r\n              ) : null}\r\n            </Form.Item>\r\n            <Form.Item label=\"Contraseña:\" required>\r\n              <Input.Password\r\n                name=\"password\"\r\n                value={formik.values.password}\r\n                onChange={formik.handleChange}\r\n                iconRender={visible => (visible ? <EyeTwoTone /> : <EyeInvisibleOutlined />)}\r\n              />\r\n              {formik.errors.password && formik.touched.password ? (\r\n                <div className=\"error-field\">{formik.errors.password}</div>\r\n              ) : null}\r\n            </Form.Item>\r\n            <Form.Item label=\"Nombres:\" required>\r\n              <Input\r\n                name=\"name\"\r\n                value={formik.values.name}\r\n                onChange={formik.handleChange}\r\n              />\r\n              {formik.errors.name && formik.touched.name ? (\r\n                <div className=\"error-field\">{formik.errors.name}</div>\r\n              ) : null}\r\n            </Form.Item>\r\n            <Form.Item label=\"Apellidos:\" required>\r\n              <Input\r\n                name=\"lastName\"\r\n                value={formik.values.lastName}\r\n                onChange={formik.handleChange}\r\n              />\r\n              {formik.errors.lastName && formik.touched.lastName ? (\r\n                <div className=\"error-field\">{formik.errors.lastName}</div>\r\n              ) : null}\r\n            </Form.Item>\r\n            <Form.Item label=\"Roles:\" required>\r\n              {/* checkhere */}\r\n              <Checkbox.Group options={roleOptions(roles)} defaultValue={[2]} onChange={onChangeRoles} />\r\n              {formik.errors.roles && formik.touched.roles ? (\r\n                <div className=\"error-field\">{formik.errors.roles}</div>\r\n              ) : null}\r\n            </Form.Item>\r\n            <Form.Item label=\"Estado:\">\r\n              <Radio.Group\r\n                name=\"status\"\r\n                value={formik.values.status}\r\n                onChange={formik.handleChange}\r\n              >\r\n                <Radio.Button value={true}>ACTIVO</Radio.Button>\r\n                <Radio.Button value={false}>INACTIVO</Radio.Button>\r\n              </Radio.Group>\r\n            </Form.Item>\r\n            <Button type=\"primary\" htmlType=\"submit\" block> Registrar</Button>\r\n          </Form>\r\n        </Drawer>\r\n\r\n        <Drawer\r\n          title=\"Actualizar Usuario\"\r\n          placement=\"right\"\r\n          closable={false}\r\n          width={400}\r\n          onClose={handleCloseDrawerUpdateForm}\r\n          visible={visibleUpdateForm}\r\n        >\r\n          <Form\r\n            title=\"Usuario\"\r\n            layout=\"vertical\"\r\n            onSubmitCapture={formik.handleSubmit}\r\n          >\r\n            <Row gutter={12} style={{display:'none'}}>\r\n              <Col span={12}>\r\n                <Form.Item required>\r\n                  <Input\r\n                    name=\"action\"\r\n                    value={formik.values.action}\r\n                    onChange={formik.handleChange}                    \r\n                  />                  \r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={12}>\r\n              <Col span={12}>\r\n                <Form.Item label=\"ID:\" required >\r\n                  <Input\r\n                    disabled\r\n                    name=\"id\"\r\n                    value={formik.values.id}\r\n                    onChange={formik.handleChange}\r\n                  />\r\n                  {formik.errors.document && formik.touched.document ? (\r\n                    <div className=\"error-field\">{formik.errors.document}</div>\r\n                  ) : null}\r\n                </Form.Item>\r\n              </Col>              \r\n              <Col span={12}>\r\n                <Form.Item label=\"Nombre de Usuario:\" required>\r\n                  <Input\r\n                    name=\"username\"\r\n                    value={formik.values.username}\r\n                    onChange={formik.handleChange}\r\n                  />\r\n                  {formik.errors.username && formik.touched.username ? (\r\n                    <div className=\"error-field\">{formik.errors.username}</div>\r\n                  ) : null}\r\n              </Form.Item>\r\n              </Col>\r\n            </Row>            \r\n            <Form.Item label=\"Contraseña:\" required>\r\n              <Input.Password\r\n                  placeholder=\"Ingrese la nueva contraseña\"\r\n                  name=\"password\"\r\n                  value={formik.values.password}\r\n                  onChange={formik.handleChange}   \r\n                  iconRender={visible => (visible ? <EyeTwoTone /> : <EyeInvisibleOutlined />)}\r\n                />\r\n                {formik.errors.password && formik.touched.password ? (\r\n                  <div className=\"error-field\">{formik.errors.password}</div>\r\n                ) : null}\r\n            </Form.Item>\r\n            <Form.Item label=\"Nombres:\" required>\r\n              <Input\r\n                name=\"name\"\r\n                value={formik.values.name}\r\n                onChange={formik.handleChange}\r\n              />\r\n              {formik.errors.name && formik.touched.name ? (\r\n                <div className=\"error-field\">{formik.errors.name}</div>\r\n              ) : null}\r\n            </Form.Item>\r\n            <Form.Item label=\"Apellidos:\" required>\r\n              <Input\r\n                name=\"lastName\"\r\n                value={formik.values.lastName}\r\n                onChange={formik.handleChange}\r\n              />\r\n              {formik.errors.lastName && formik.touched.lastName ? (\r\n                <div className=\"error-field\">{formik.errors.lastName}</div>\r\n              ) : null}\r\n            </Form.Item>\r\n            <Form.Item label=\"Roles:\" required>\r\n              <Checkbox.Group options={roleOptions(roles)}               \r\n              value={selectedRoles}\r\n              //defaultValue={selectedRoles} \r\n              onChange={onChangeRoles} />\r\n              {formik.errors.roles && formik.touched.roles ? (\r\n                <div className=\"error-field\">{formik.errors.roles}</div>\r\n              ) : null}\r\n            </Form.Item>\r\n            <Form.Item label=\"Estado:\">\r\n              <Radio.Group\r\n                name=\"status\"\r\n                value={formik.values.status}\r\n                onChange={formik.handleChange}\r\n              >\r\n                <Radio.Button value={true}>ACTIVO</Radio.Button>\r\n                <Radio.Button value={false}>INACTIVO</Radio.Button>\r\n              </Radio.Group>\r\n            </Form.Item>\r\n            <Button type=\"primary\" htmlType=\"submit\" block> Actualizar</Button>\r\n              \r\n\r\n            \r\n          </Form>\r\n        </Drawer>\r\n      </div>\r\n    </div>\r\n  );\r\n};","F:\\Hospital Almenara\\Front\\almenara-reactapp\\src\\pages\\Mantenimiento\\GrupoMant\\index.js",["569","570","571","572","573","574","575","576","577","578","579","580","581","582","583","584","585","586","587","588","589"],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Breadcrumb, Modal, Select ,\r\n  Button,\r\n  Drawer,\r\n  Input,\r\n  Table,\r\n  Tag,\r\n  Form,\r\n  Radio,\r\n  notification,\r\n  AutoComplete,\r\n} from \"antd\";\r\nimport { EditOutlined, PlusOutlined } from \"@ant-design/icons\";\r\nimport { createSchool, getSchools, actualizarSchool } from \"../../../services/SchoolService\";\r\nimport { getDoctors, getDoctorsByTeam, getDoctorsByTeamTipo, getTeamIdCategoriaTodos, getFindAllByTeamIdGrupo, findAllTipos, \r\n  createDoctor, createDoctorGrupo, borrarDoctorGrupo } from \"../../../services/DoctorService\";\r\n\r\n  import { getTeams, createTeams, actualizarTeams, guardar, registrar } from \"../../../services/TeamService\";\r\n\r\nimport * as Yup from \"yup\";\r\n\r\nimport \"../Mantenimiento.css\";\r\nimport { useFormik } from \"formik\";\r\n\r\nconst openNotification = (msg, description, placement) => {\r\n  notification.success({\r\n    message: msg,\r\n    description: description,\r\n    placement,\r\n  });\r\n};\r\n\r\nexport const GrupoMant = () => {\r\n  const [loading, setLoading] = useState(false);  \r\n  const [visible, setVisible] = useState(false);\r\n  const [editar, setEditar] = useState(false);\r\n  const [placeCategoria, setPlaceCategoria] = useState('Seleccione una Categoría');\r\n  const [categoriaslst, setCategoriaslst] = useState([]);\r\n  const [filterTable, setFilterTable] = useState(null);  \r\n  const [dataSource, setDataSource] = useState([]);\r\n  const [categoriaId, setCategoria] = useState(null);  \r\n  const [idTeam, setIdTeam] = useState(null);\r\n\r\n  const listar = () => {\r\n    getTeams().then((resp) => {\r\n      resp.forEach((data) => {\r\n          data.key = data.id;         \r\n          if(data.tipo != null) {\r\n            if(data.tipo.id != null){\r\n              data.tipoId = data.tipo.id;\r\n            }\r\n            if(data.tipo.name != null){\r\n              data.tipoName = data.tipo.name;\r\n            }\r\n          }                    \r\n      });\r\n      setDataSource(resp);\r\n    });\r\n  };\r\n\r\n  const validationSchema = Yup.object().shape({\r\n     \r\n  });\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      name: \"\",\r\n      shortName: \"\",\r\n      status: true,\r\n    },\r\n    validationSchema,\r\n    onSubmit: (value) => {\r\n      value.tipoId = categoriaId;\r\n\r\n\r\n      if(value.name == null){\r\n        openNotification(\"Debe ingresar un nombre\", \"\", \"topLeft\");\r\n        return;\r\n      }\r\n\r\n      if(value.name.trim() == ''){\r\n        openNotification(\"Debe ingresar un nombre\", \"\", \"topLeft\");\r\n        return;\r\n      }\r\n\r\n      if(value.tipoId == null){\r\n        openNotification(\"Debe seleccionar una Categoría\", \"\", \"topLeft\");\r\n        return;\r\n      }\r\n\r\n      console.log(value);\r\n      if(editar){\r\n        guardar(value.id, value.name, value.tipoId).then((resp) => {\r\n          console.log(resp);\r\n          listar();\r\n          setVisible(false);\r\n          openNotification(\"Actualizado Correctamente\", \"\", \"topRight\");\r\n        });\r\n      }else{\r\n        registrar(value.name, value.tipoId).then((resp) => {\r\n          console.log(resp);\r\n          listar();\r\n          setVisible(false);\r\n          openNotification(\"Guardado Correctamente\", \"\", \"topRight\");\r\n        });\r\n      }\r\n\r\n      formik.resetForm();\r\n    },\r\n  });\r\n\r\n\r\n\r\n  const columns = [\r\n    {\r\n      title: \"#\",\r\n      dataIndex: \"id\",\r\n      key: \"id\",\r\n      width: 50,\r\n      fixed: \"left\",\r\n      align: \"center\",\r\n    },\r\n    {\r\n      title: \"Nombre\",\r\n      dataIndex: \"name\",\r\n      key: \"name\",\r\n      align: \"center\",\r\n    },\r\n    {\r\n      title: \"# Categoría\",\r\n      dataIndex: \"tipoId\",\r\n      key: \"tipoId\",\r\n      width: 170,\r\n      align: \"center\",\r\n    },\r\n    {\r\n      title: \"Categoría\",\r\n      dataIndex: \"tipoName\",\r\n      key: \"tipoName\",\r\n      width: 170,\r\n      align: \"center\",\r\n    },\r\n    {\r\n      title: \"Acciones\",\r\n      key: \"action\",\r\n      fixed: \"right\",\r\n      width: 100,\r\n      align: \"center\",\r\n      render: (record) => (\r\n        // <Button type=\"link\" size=\"small\">\r\n        //   <EditOutlined />\r\n        // </Button>\r\n         <Button type=\"primary\" size=\"large\" onClick={() => \r\n          {             \r\n            formik.values.name = record.name;\r\n            formik.values.tipoId = record.tipoId;\r\n            formik.values.tipoName = record.tipoName;\r\n            formik.values.id = record.id;            \r\n\r\n            setPlaceCategoria(record.tipoName);\r\n            setCategoria(record.tipoId);\r\n\r\n            setEditar(true);\r\n            setVisible(true);          \r\n          }\r\n         \r\n         }>\r\n        <EditOutlined />\r\n       </Button>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  const keyUpTable = (value) => {\r\n    setFilterTable(\r\n      dataSource.filter((o) =>\r\n        Object.keys(o).some((k) =>\r\n          String(o[k]).toLowerCase().includes(value.toLowerCase())\r\n        )\r\n      )\r\n    );\r\n  };\r\n\r\n  const handleCloseDrawer = () => {\r\n    setVisible(false);\r\n    formik.resetForm();\r\n  };\r\n\r\n  const hanldeSelectCategoria = (e) => {\r\n    console.log(e);\r\n    if(e == 1){\r\n      setPlaceCategoria('Medicina');\r\n      setCategoria(e);\r\n    }\r\n    if(e == 2){\r\n      setPlaceCategoria('Cirugía');\r\n      setCategoria(e);      \r\n    }\r\n};\r\n\r\n  useEffect(() => {\r\n    setLoading(false);\r\n    setIdTeam(null);\r\n\r\n    findAllTipos().then( x =>\r\n      {  \r\n        setCategoriaslst(x);\r\n      }\r\n      );\r\n\r\n    listar();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"mantenimiento\">\r\n      <header>\r\n        <h2 className=\"title\">\r\n          <Breadcrumb>\r\n            <Breadcrumb.Item>Mantenimiento</Breadcrumb.Item>\r\n            <Breadcrumb.Item>Grupo</Breadcrumb.Item>\r\n          </Breadcrumb>\r\n        </h2>\r\n        <Button type=\"primary\" size=\"large\" onClick={() =>           \r\n          {\r\n            formik.values.name = null;\r\n            formik.values.tipoId = null;\r\n            formik.values.tipoName = null;\r\n            formik.values.id = null;\r\n            \r\n            setCategoria(null);\r\n            setPlaceCategoria('Seleccione');\r\n            setEditar(false);\r\n            setVisible(true)\r\n          }\r\n          }>\r\n          <PlusOutlined /> Agregar\r\n        </Button>\r\n      </header>\r\n      <div className=\"content\">\r\n        <Input.Search\r\n          className=\"searchInput\"\r\n          placeholder=\"Buscar por ...\"\r\n          onKeyUpCapture={(e) => keyUpTable(e.target.value)}\r\n        />\r\n        <Table\r\n          loading={loading}\r\n          dataSource={filterTable === null ? dataSource : filterTable}\r\n          columns={columns}\r\n          pagination={{ pageSize: 5 }}\r\n          scroll={{ x: 800 }}\r\n        />\r\n        <Drawer\r\n          title=\"Agregar Grupo\"\r\n          placement=\"right\"\r\n          closable={false}\r\n          width={400}\r\n          onClose={handleCloseDrawer}\r\n          visible={visible}\r\n        >\r\n          <Form\r\n            title=\"Grupo\"\r\n            layout=\"vertical\"\r\n            onSubmitCapture={formik.handleSubmit}\r\n          >\r\n            <Form.Item label=\"Nombre:\" required>\r\n              <Input\r\n                name=\"name\"\r\n                value={formik.values.name}\r\n                onChange={formik.handleChange}\r\n              />\r\n              {formik.errors.name && formik.touched.name ? (\r\n                <div className=\"error-field\">{formik.errors.name}</div>\r\n              ) : null}\r\n            </Form.Item>\r\n            {/* TIPOS */}\r\n\r\n            <Form.Item label=\"Categoría\">\r\n            <Select\r\n              showSearch\r\n              name=\"cateogria\"\r\n              placeholder= {placeCategoria}\r\n              optionFilterProp=\"children\"\r\n              style={{ width: \"300px\"}}\r\n              value={formik.values.categoria}\r\n              onChange={hanldeSelectCategoria}\r\n              filterOption={(input, option) =>\r\n                option.props.children\r\n                  .toLowerCase()\r\n                  .indexOf(input.toLowerCase()) >= 0\r\n              }\r\n            >\r\n                {categoriaslst.map((data) => (\r\n                <Select.Option key={data.name} value={data.id}>\r\n                {data.name}\r\n                </Select.Option>\r\n                ))}\r\n            </Select>\r\n          </Form.Item>\r\n    \r\n            \r\n            {/* <Form.Item label=\"Estado:\">\r\n              <Radio.Group\r\n                name=\"status\"\r\n                value={formik.values.status}\r\n                onChange={formik.handleChange}\r\n              >\r\n                <Radio.Button value={true}>ACTIVO</Radio.Button>\r\n                <Radio.Button value={false}>INACTIVO</Radio.Button>\r\n              </Radio.Group>\r\n            </Form.Item> */}\r\n\r\n              {\r\n                editar? (\r\n                <Button type=\"primary\" htmlType=\"submit\" block> Actualizar</Button>\r\n                ) : <Button type=\"primary\" htmlType=\"submit\" block> Registrar</Button>\r\n              }\r\n\r\n            \r\n          </Form>\r\n        </Drawer>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","F:\\Hospital Almenara\\Front\\almenara-reactapp\\src\\pages\\Mantenimiento\\Medico\\index.js",["590","591","592","593","594","595","596","597","598","599","600","601","602","603","604","605","606","607","608","609","610","611","612","613","614","615","616"],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Breadcrumb,\r\n  Button,\r\n  Drawer,\r\n  Input,\r\n  Table,\r\n  Tag,\r\n  Form,\r\n  Radio,\r\n  Select,\r\n  DatePicker,\r\n  Row,\r\n  Col,\r\n  notification,\r\n  Tooltip,\r\n  Modal,\r\n  Upload,\r\n  message,\r\n} from \"antd\";\r\nimport {\r\n  EditOutlined,\r\n  PlusOutlined,\r\n  ClockCircleOutlined,\r\n  UploadOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { useFormik } from \"formik\";\r\nimport { OutTable, ExcelRenderer } from \"react-excel-renderer\";\r\nimport {\r\n  updateDoctor,\r\n  createDoctor,\r\n  getDoctors,\r\n  upgradeDoctorLevel,\r\n  saveImportedDoctor,\r\n  deleteDoctorByDocumento,\r\n} from \"../../../services/DoctorService\";\r\nimport { getSchoolsAgreements } from \"../../../services/SchoolAgreementService\";\r\nimport { getSpecialties } from \"../../../services/SpecialtyService\";\r\nimport { getPlazas } from \"../../../services/PlazaService\";\r\nimport { getCampus } from \"../../../services/CampusService\";\r\n\r\nimport * as Yup from \"yup\";\r\nimport moment from \"moment\";\r\n\r\nimport \"../Mantenimiento.css\";\r\nimport { getNiveles } from \"../../../services/NivelService\";\r\nimport { getTeams } from \"../../../services/TeamService\";\r\nimport ImportFromExcel from \"./ImportFromExcel\";\r\n\r\nconst openNotification = (msg, description, placement) => {\r\n  notification.success({\r\n    message: msg,\r\n    description: description,\r\n    placement,\r\n  });\r\n};\r\n\r\nconst openErrorNotification = (msg, description, placement) => {\r\n  notification.error({\r\n    message: msg,\r\n    description: description,\r\n    placement,\r\n  });\r\n};\r\n\r\nexport const Medico = () => {\r\n  const [consultarApi, setconsultarApi] = useState(false);\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [visibleNewForm, setVisibleNewForm] = useState(false);\r\n  const [visibleUpdateForm, setVisibleUpdateForm] = useState(false);\r\n  const [filterTable, setFilterTable] = useState(null);\r\n  const [dataSource, setDataSource] = useState([]);\r\n  const [editar, setEditar] = useState(false);\r\n  const [isImportDataModalVisible, setIsModalImportDataVisible] = useState(\r\n    false\r\n  );\r\n\r\n  const [schoolsAgreements, setSchoolsAgreements] = useState([]);\r\n  const [specialties, setSpecialties] = useState([]);\r\n  const [plazas, setPlazas] = useState([]);\r\n  const [campus, setCampus] = useState([]);\r\n  const [teams, setTeams] = useState([]);\r\n  const [niveles, setNiveles] = useState([]);\r\n\r\n  const [isOpen, setOpen] = useState(false);\r\n  const [dataLoaded, setDataLoaded] = useState(false);\r\n  const [isFormInvalid, setFormInvalid] = useState(false);\r\n  const [rows, setRows] = useState([]);\r\n  const [cols, setCols] = useState(false);\r\n  const [uploadedFileName, setUploadedFileName] = useState(null);\r\n\r\n  const listar = () => {\r\n    getDoctors().then((resp) => {\r\n      resp.forEach((data) => {\r\n        data.key = data.id;\r\n        data.schoolName =\r\n          data.schoolAgreement == null\r\n            ? \"Sin definir\"\r\n            : data.schoolAgreement.school.shortName;\r\n        data.specialtyName =\r\n          data.specialty == null ? \"Sin definir\" : data.specialty.name;\r\n        data.plazaName = data.plaza == null ? \"Sin definir\" : data.plaza.name;\r\n        data.campusName =\r\n          data.campus == null ? \"Sin definir\" : data.campus.name;\r\n        data.lastName =\r\n          data.paternalSurname == null\r\n            ? \"Sin definir\"\r\n            : data.paternalSurname + \" \" + data.maternalSurname;\r\n        // data.teamName = \"Grupo \" + data.team.name;\r\n        data.nivelName = data.nivel == null ? \"Sin definir\" : data.nivel.name;\r\n        data.phone =\r\n          data.phone == null || data.phone.trim() == \"\"\r\n            ? \"Sin definir\"\r\n            : data.phone;\r\n        data.email =\r\n          data.email == null || data.email.trim() == \"\"\r\n            ? \"Sin definir\"\r\n            : data.email;\r\n        data.birthDate =\r\n          data.birthDate == null || data.birthDate.trim() == \"\"\r\n            ? \"Sin definir\"\r\n            : data.birthDate;\r\n        data.address =\r\n          data.address == null || data.address.trim() == \"\"\r\n            ? \"Sin definir\"\r\n            : data.address;\r\n      });\r\n      setDataSource(resp);\r\n      console.log(resp);\r\n    });\r\n  };\r\n\r\n  const validationSchema = Yup.object().shape({\r\n    document: Yup.string()\r\n      .trim()\r\n      .matches(/^[0-9]*$/, \"Solo se admiten números.\")\r\n      .length(8, \"Se requiere 8 dígitos.\")\r\n      .required(\"DNI requerido.\"),\r\n    paternalSurname: Yup.string()\r\n      .trim()\r\n      .matches(/^[ñÑa-zA-ZáéíóúÁÉÍÓÚ ]*$/, \"Solo se admiten letras.\")\r\n      .required(\"Apellido Paterno requerido.\"),\r\n    maternalSurname: Yup.string()\r\n      .trim()\r\n      .matches(/^[ñÑa-zA-ZáéíóúÁÉÍÓÚ ]*$/, \"Solo se admiten letras.\")\r\n      .required(\"Apellido Materno requerido.\"),\r\n    name: Yup.string()\r\n      .trim()\r\n      .matches(/^[ñÑa-zA-ZáéíóúÁÉÍÓÚ ]*$/, \"Solo se admiten letras.\")\r\n      .required(\"Nombre requerido.\"),\r\n    schoolAgreement: Yup.object().shape({\r\n      id: Yup.number().nullable().required(\"Universidad requerida\"),\r\n    }),\r\n    specialty: Yup.object().shape({\r\n      id: Yup.number().nullable().required(\"Especialidad requerida\"),\r\n    }),\r\n    plaza: Yup.object().shape({\r\n      id: Yup.number().nullable().required(\"Plaza requerida.\"),\r\n    }),\r\n    campus: Yup.object().shape({\r\n      id: Yup.number().nullable().required(\"Sede requerida.\"),\r\n    }),\r\n    // team: Yup.object().shape({\r\n    //   id: Yup.number().nullable().required(\"Grupo requerido.\"),\r\n    // }),\r\n    address: Yup.string()\r\n      .trim()\r\n      // .matches(\r\n      //   /^[a-zA-Z\\s](\\d)?$/,\r\n      //   \"No se admiten caracteres especiales.\"\r\n      // ),\r\n      .min(5, \"El campo debe tener al menos 5 caracteres.\")\r\n      .required(\"Dirección es un campo requerido\"),\r\n    cmp: Yup.string()\r\n      .trim()\r\n      .matches(/^[0-9]*$/, \"Solo se admiten números.\")\r\n      .min(5, \"Solo se admite min. 5 dígitos.\")\r\n      .max(6, \"Solo se admite máx. 6 dígitos.\")\r\n      .required(\"CMP requerido\"),\r\n    email: Yup.string()\r\n      .trim()\r\n      .email(\"Formato no válido. (ej. correo@example.com)\")\r\n      .required(\"Correo requerido.\"),\r\n    phone: Yup.string()\r\n      .length(9, \"Se requiere 9 dígitos.\")\r\n      .required(\"N° Celular requerido.\"),\r\n  });\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      action: \"new\",\r\n      document: \"\",\r\n      paternalSurname: \"\",\r\n      maternalSurname: \"\",\r\n      name: \"\",\r\n      schoolAgreement: {\r\n        id: null,\r\n      },\r\n      specialty: {\r\n        id: null,\r\n      },\r\n      plaza: {\r\n        id: null,\r\n      },\r\n      campus: {\r\n        id: null,\r\n      },\r\n      team: {\r\n        id: null,\r\n      },\r\n      nivel: {\r\n        id: 1,\r\n      },\r\n      birthDate: null,\r\n      registeredAt: null,\r\n      address: \"\",\r\n      cmp: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      status: true,\r\n    },\r\n    validationSchema,\r\n    // onOpen :() => {\r\n    //   console.log(\"Opening...\")\r\n    // },\r\n    onSubmit: (value) => {\r\n      console.log(value);\r\n\r\n      if (value.action == \"new\" || editar == false) {\r\n        createDoctor(value)\r\n          .then((resp) => {\r\n            // console.log(resp);\r\n            listar();\r\n            setVisibleNewForm(false);\r\n            openNotification(\"Guardado Correctamente\", \"\", \"topRight\");\r\n            formik.resetForm();\r\n          })\r\n          .catch(function (error) {\r\n            if (error.response) {\r\n              openErrorNotification(\r\n                error.response.data.message,\r\n                \"\",\r\n                \"topRight\"\r\n              );\r\n            }\r\n          });\r\n      } else if (value.action == \"update\" || editar == true) {\r\n        delete value.action;\r\n        // console.log(value);\r\n        updateDoctor(value)\r\n          .then((resp) => {\r\n            console.log(resp);\r\n            listar();\r\n            setVisibleUpdateForm(false);\r\n            openNotification(\"Actualizado Correctamente\", \"\", \"topRight\");\r\n            formik.resetForm();\r\n          })\r\n          .catch(function (error) {\r\n            if (error.response) {\r\n              openErrorNotification(\r\n                error.response.data.message,\r\n                \"\",\r\n                \"topRight\"\r\n              );\r\n            }\r\n          });\r\n      } else if (value.action == \"delete\") {\r\n        console.log(\"eliminando \" + value);\r\n      }\r\n    },\r\n  });\r\n\r\n  function upgradeDoctors() {\r\n    upgradeDoctorLevel()\r\n      .then((resp) => {\r\n        console.log(resp);\r\n        listar();\r\n      })\r\n      .catch((error) => {\r\n        openErrorNotification(\r\n          \"Error al actualizar el nivel de los médicos.\",\r\n          \"\",\r\n          \"topRight\"\r\n        );\r\n      });\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n      title: \"#\",\r\n      dataIndex: \"id\",\r\n      key: \"id\",\r\n      width: 50,\r\n      fixed: \"left\",\r\n      align: \"center\",\r\n    },\r\n    {\r\n      title: \"N° Documento\",\r\n      dataIndex: \"document\",\r\n      key: \"document\",\r\n      width: 110,\r\n      align: \"center\",\r\n    },\r\n    {\r\n      title: \"Apellidos\",\r\n      dataIndex: \"lastName\",\r\n      key: \"lastName\",\r\n      align: \"center\",\r\n    },\r\n    {\r\n      title: \"Nombres\",\r\n      dataIndex: \"name\",\r\n      key: \"name\",\r\n      align: \"center\",\r\n    },\r\n    {\r\n      title: \"Universidad\",\r\n      dataIndex: \"schoolName\",\r\n      key: \"schoolName\",\r\n      width: 108,\r\n      align: \"center\",\r\n    },\r\n    {\r\n      title: \"Especialidad\",\r\n      dataIndex: \"specialtyName\",\r\n      key: \"specialtyName\",\r\n      align: \"center\",\r\n    },\r\n    {\r\n      title: \"Plaza\",\r\n      dataIndex: \"plazaName\",\r\n      key: \"plazaName\",\r\n      width: 80,\r\n      align: \"center\",\r\n    },\r\n    // {\r\n    //   title: \"Grupo\",\r\n    //   dataIndex: \"teamName\",\r\n    //   key: \"teamName\",\r\n    //   width: 80,\r\n    //   align: \"center\",\r\n    // },\r\n    {\r\n      title: \"Nivel\",\r\n      dataIndex: \"nivelName\",\r\n      key: \"nivelName\",\r\n      width: 70,\r\n      align: \"center\",\r\n    },\r\n    {\r\n      title: \"Sede\",\r\n      dataIndex: \"campusName\",\r\n      key: \"campusName\",\r\n      width: 78,\r\n      align: \"center\",\r\n    },\r\n    {\r\n      title: \"Fecha de Nacimiento\",\r\n      dataIndex: \"birthDate\",\r\n      key: \"birthDate\",\r\n      align: \"center\",\r\n    },\r\n    {\r\n      title: \"Domicilio\",\r\n      dataIndex: \"address\",\r\n      key: \"address\",\r\n      align: \"center\",\r\n    },\r\n    {\r\n      title: \"CMP\",\r\n      dataIndex: \"cmp\",\r\n      key: \"cmp\",\r\n      width: 70,\r\n      align: \"center\",\r\n    },\r\n    {\r\n      title: \"Correo\",\r\n      dataIndex: \"email\",\r\n      key: \"email\",\r\n      align: \"center\",\r\n    },\r\n    {\r\n      title: \"N° Celular\",\r\n      dataIndex: \"phone\",\r\n      key: \"phone\",\r\n      width: 100,\r\n      align: \"center\",\r\n    },\r\n    {\r\n      title: \"Estado\",\r\n      dataIndex: \"status\",\r\n      key: \"status\",\r\n      width: 90,\r\n      align: \"center\",\r\n      render: (val, record) =>\r\n        record.status ? (\r\n          <Tag color=\"green\">ACTIVO</Tag>\r\n        ) : (\r\n          <Tag color=\"red\">INACTIVO</Tag>\r\n        ),\r\n      filters: [\r\n        {\r\n          text: \"ACTIVO\",\r\n          value: true,\r\n        },\r\n        {\r\n          text: \"INACTIVO\",\r\n          value: false,\r\n        },\r\n      ],\r\n      filterMultiple: false,\r\n      onFilter: (value, record) => {\r\n        let status = String(record.status);\r\n        return status.indexOf(value) === 0;\r\n      },\r\n    },\r\n    {\r\n      title: \"Acciones\",\r\n      key: \"action\",\r\n      fixed: \"right\",\r\n      width: 100,\r\n      align: \"center\",\r\n      render: (record) => (\r\n        <Button\r\n          type=\"link\"\r\n          size=\"small\"\r\n          onClick={() => {\r\n            showUpdateForm(record);\r\n          }}\r\n        >\r\n          <EditOutlined />\r\n        </Button>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  const keyUpTable = (value) => {\r\n    setFilterTable(\r\n      dataSource.filter((o) =>\r\n        Object.keys(o).some((k) =>\r\n          String(o[k]).toLowerCase().includes(value.toLowerCase())\r\n        )\r\n      )\r\n    );\r\n  };\r\n\r\n  const handleCloseDrawerNewForm = (e) => {\r\n    setVisibleNewForm(false);\r\n    formik.resetForm();\r\n  };\r\n\r\n  const handleCloseDrawerUpdateForm = (e) => {\r\n    setVisibleUpdateForm(false);\r\n    formik.resetForm();\r\n  };\r\n\r\n  const showUpdateForm = (doctor) => {\r\n    setDataDoctorToForm(doctor);\r\n    setVisibleUpdateForm(true);\r\n  };\r\n\r\n  const dateFormatList = [\"DD/MM/YYYY\", \"YYYY/MM/DD\"];\r\n\r\n  function setDataDoctorToForm(doctor) {\r\n    formik.initialValues.action = \"update\";\r\n    formik.initialValues.id = doctor.id;\r\n    formik.initialValues.document =\r\n      doctor.document == null ? \"\" : doctor.document;\r\n    formik.initialValues.paternalSurname =\r\n      doctor.paternalSurname == null ? \"\" : doctor.paternalSurname;\r\n    formik.initialValues.maternalSurname =\r\n      doctor.maternalSurname == null ? \"\" : doctor.maternalSurname;\r\n    formik.initialValues.name = doctor.name == null ? \"\" : doctor.name;\r\n    formik.initialValues.schoolAgreement.id =\r\n      doctor.schoolAgreement == null ? 1 : doctor.schoolAgreement.id;\r\n    formik.initialValues.specialty.id =\r\n      doctor.specialty == null ? 1 : doctor.specialty.id;\r\n    formik.initialValues.plaza.id = doctor.plaza == null ? 1 : doctor.plaza.id;\r\n    formik.initialValues.campus.id =\r\n      doctor.campus == null ? 1 : doctor.campus.id;\r\n    formik.initialValues.plazaName =\r\n      doctor.campus == null ? \"\" : doctor.campus.plazaName;\r\n\r\n    formik.initialValues.nivel.id = doctor.nivel == null ? 1 : doctor.nivel.id;\r\n    formik.initialValues.birthDate =\r\n      doctor.birthDate == null\r\n        ? moment()\r\n        : moment(doctor.birthDate, dateFormatList);\r\n    formik.initialValues.registeredAt =\r\n      doctor.registeredAt == null\r\n        ? moment()\r\n        : moment(doctor.registeredAt, dateFormatList);\r\n    formik.initialValues.address = doctor.address == null ? \"\" : doctor.address;\r\n    formik.initialValues.cmp = doctor.cmp == null ? \"\" : doctor.cmp;\r\n    formik.initialValues.email = doctor.email == null ? \"\" : doctor.email;\r\n    formik.initialValues.phone = doctor.phone == null ? \"\" : doctor.phone;\r\n    formik.initialValues.status = doctor.status;\r\n\r\n    setEditar(true);\r\n    //console.log(moment(doctor.birthDate).format(\"DD/MM/YYYY\"));\r\n  }\r\n\r\n  function cleanDataDoctorToForm() {\r\n    formik.initialValues.action = \"new\";\r\n    formik.initialValues.id = null;\r\n    formik.initialValues.document = \"\";\r\n    formik.initialValues.paternalSurname = \"\";\r\n    formik.initialValues.maternalSurname = \"\";\r\n    formik.initialValues.name = \"\";\r\n    formik.initialValues.schoolAgreement.id = null;\r\n    formik.initialValues.specialty.id = null;\r\n    formik.initialValues.plaza.id = null;\r\n    formik.initialValues.campus.id = null;\r\n    formik.initialValues.plazaName = \"\";\r\n\r\n    formik.initialValues.nivel.id = 1;\r\n    formik.initialValues.birthDate = moment();\r\n    formik.initialValues.registeredAt = moment();\r\n    formik.initialValues.address = \"\";\r\n    formik.initialValues.cmp = \"\";\r\n    formik.initialValues.email = \"\";\r\n    formik.initialValues.phone = \"\";\r\n    formik.initialValues.status = true;\r\n\r\n    setEditar(false);\r\n    //console.log(moment(doctor.birthDate).format(\"DD/MM/YYYY\"));\r\n  }\r\n\r\n  function disabledDate(current) {\r\n    return current && current > moment().startOf(\"day\");\r\n  }\r\n\r\n  const showModalImport = () => {\r\n    console.log(\"Modal\", isImportDataModalVisible);\r\n    setIsModalImportDataVisible(true);\r\n  };\r\n\r\n  const handleModalImportOk = () => {\r\n    setIsModalImportDataVisible(false);\r\n  };\r\n\r\n  const handleCancelModalImport = () => {\r\n    setIsModalImportDataVisible(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const consultandoApi = () => {\r\n      \r\n      setLoading(false);\r\n      listar();\r\n      getSchoolsAgreements().then(setSchoolsAgreements);\r\n      getSpecialties().then(setSpecialties);\r\n      getPlazas().then(setPlazas);\r\n      getCampus().then(setCampus);\r\n      getNiveles().then(setNiveles);\r\n      getTeams().then(setTeams);\r\n      setconsultarApi(false);\r\n    };\r\n\r\n\r\n   \r\n\r\n    if (consultarApi) {\r\n      consultandoApi();\r\n      setconsultarApi(false);\r\n    }else{\r\n      consultandoApi();\r\n    }\r\n\r\n    // setLoading(false);\r\n    // listar();\r\n    // getSchoolsAgreements().then(setSchoolsAgreements);\r\n    // getSpecialties().then(setSpecialties);\r\n    // getPlazas().then(setPlazas);\r\n    // getCampus().then(setCampus);\r\n    // getNiveles().then(setNiveles);\r\n    // getTeams().then(setTeams);\r\n  }, [consultarApi]);\r\n\r\n  const props = {\r\n    name: \"file\",\r\n    action: \"https://www.mocky.io/v2/5cc8019d300000980a055e76\",\r\n    headers: {\r\n      authorization: \"authorization-text\",\r\n    },\r\n    onChange(info) {\r\n      if (info.file.status !== \"uploading\") {\r\n        console.log(info.file, info.fileList);\r\n      }\r\n      if (info.file.status === \"done\") {\r\n        message.success(`${info.file.name} file uploaded successfully`);\r\n      } else if (info.file.status === \"error\") {\r\n        message.error(`${info.file.name} file upload failed.`);\r\n      }\r\n    },\r\n  };\r\n\r\n  const renderFile = (fileObj) => {\r\n    //just pass the fileObj as parameter\r\n    ExcelRenderer(fileObj, (err, resp) => {\r\n      if (err) {\r\n        console.log(err);\r\n      } else {\r\n        setDataLoaded(true);\r\n        setCols(resp.cols);\r\n        setRows(resp.rows);\r\n        // this.setState({\r\n        //   dataLoaded: true,\r\n        //   cols: resp.cols,\r\n        //   rows: resp.rows\r\n        // });\r\n      }\r\n    });\r\n  };\r\n\r\n  const fileHandler = (event) => {\r\n    if (event.fileList.length) {\r\n      let fileObj = event.fileList[0];\r\n      let fileName = fileObj.name;\r\n\r\n      //check for file extension and pass only if it is .xlsx and display error message otherwise\r\n      if (fileName.slice(fileName.lastIndexOf(\".\") + 1) === \"xlsx\") {\r\n        setUploadedFileName(fileName);\r\n        setFormInvalid(false);\r\n        renderFile(fileObj);\r\n      } else {\r\n        setFormInvalid(true);\r\n        setUploadedFileName(\"\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const deleteDocturByDocument = (documento) => {\r\n    deleteDoctorByDocumento(documento)\r\n      .then((resp) => {\r\n        openNotification(\"Eliminado Correctamente \", \"\", \"topRight\");\r\n  \r\n        setconsultarApi(true);\r\n      })\r\n      .catch((error) => {\r\n        openErrorNotification(\r\n          \"Error al actualizar el nivel de los médicos.\",\r\n          \"\",\r\n          \"topRight\"\r\n        );\r\n      });\r\n    setVisibleUpdateForm(!visibleUpdateForm);\r\n  };\r\n\r\n  return (\r\n    <div className=\"mantenimiento\">\r\n      <header>\r\n        <h2 className=\"title\">\r\n          <Breadcrumb>\r\n            <Breadcrumb.Item>Mantenimiento</Breadcrumb.Item>\r\n            <Breadcrumb.Item>Médico</Breadcrumb.Item>\r\n          </Breadcrumb>\r\n        </h2>\r\n        <div>\r\n          <Button\r\n            type=\"primary\"\r\n            size=\"large\"\r\n            onClick={() => {\r\n              cleanDataDoctorToForm({});\r\n              setVisibleNewForm(true);\r\n            }}\r\n            style={{ marginRight: \"10px\" }}\r\n          >\r\n            <PlusOutlined /> Agregar\r\n          </Button>\r\n          {/* <Tooltip title=\"Actualizar nivel de Médicos\">\r\n            <Button type=\"primary\" size=\"large\" icon={<ClockCircleOutlined />} onClick={() => { upgradeDoctors() }}/>\r\n          </Tooltip> */}\r\n          <Button type=\"primary\" onClick={showModalImport} size=\"large\">\r\n            Importar Archivo\r\n          </Button>\r\n        </div>\r\n      </header>\r\n      <Modal\r\n        title=\"Importar Excel\"\r\n        visible={isImportDataModalVisible}\r\n        //onC={handleModalImportOk}\r\n        onCancel={handleCancelModalImport}\r\n        //okText=\"Guadar datos\"\r\n        cancelText=\"Cancelar\"\r\n        width={1300}\r\n        okButtonProps={{ style: { display: \"none\" } }}\r\n      >\r\n        <ImportFromExcel\r\n          onImportdata={saveImportedDoctor}\r\n          onListDoctors={listar}\r\n          onVisibleModal={handleCancelModalImport}\r\n          onOpenNotification={openNotification}\r\n        />\r\n      </Modal>\r\n      <div className=\"content\">\r\n        <Input.Search\r\n          className=\"searchInput\"\r\n          placeholder=\"Buscar por nombre...\"\r\n          onKeyUpCapture={(e) => keyUpTable(e.target.value)}\r\n        />\r\n        <Table\r\n          loading={!dataSource.length > 0}\r\n          dataSource={filterTable === null ? dataSource : filterTable}\r\n          columns={columns}\r\n          pagination={{ pageSize: 10 }}\r\n          scroll={{ x: 2000 }}\r\n        />\r\n        <Drawer\r\n          title=\"Agregar Médico\"\r\n          placement=\"right\"\r\n          closable={false}\r\n          width={500}\r\n          onClose={handleCloseDrawerNewForm}\r\n          visible={visibleNewForm}\r\n          id=\"newForm\"\r\n        >\r\n          <Form\r\n            title=\"Universidad\"\r\n            layout=\"vertical\"\r\n            onSubmitCapture={formik.handleSubmit}\r\n          >\r\n            <Row gutter={12} style={{ display: \"none\" }}>\r\n              <Col span={12}>\r\n                <Form.Item required>\r\n                  <Input\r\n                    name=\"action\"\r\n                    value={formik.values.action}\r\n                    onChange={formik.handleChange}\r\n                  />\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={12}>\r\n              <Col span={12}>\r\n                <Form.Item label=\"DNI:\" required>\r\n                  <Input\r\n                    name=\"document\"\r\n                    value={formik.values.document}\r\n                    onChange={formik.handleChange}\r\n                  />\r\n                  {formik.errors.document && formik.touched.document ? (\r\n                    <div className=\"error-field\">{formik.errors.document}</div>\r\n                  ) : null}\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={12}>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Apellido Paterno:\" required>\r\n                  <Input\r\n                    name=\"paternalSurname\"\r\n                    value={formik.values.paternalSurname}\r\n                    onChange={formik.handleChange}\r\n                  />\r\n                  {formik.errors.paternalSurname &&\r\n                  formik.touched.paternalSurname ? (\r\n                    <div className=\"error-field\">\r\n                      {formik.errors.paternalSurname}\r\n                    </div>\r\n                  ) : null}\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Apellido Materno:\" required>\r\n                  <Input\r\n                    name=\"maternalSurname\"\r\n                    value={formik.values.maternalSurname}\r\n                    onChange={formik.handleChange}\r\n                  />\r\n                  {formik.errors.maternalSurname &&\r\n                  formik.touched.maternalSurname ? (\r\n                    <div className=\"error-field\">\r\n                      {formik.errors.maternalSurname}\r\n                    </div>\r\n                  ) : null}\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Form.Item label=\"Nombre Completo:\" required>\r\n              <Input\r\n                name=\"name\"\r\n                value={formik.values.name}\r\n                onChange={formik.handleChange}\r\n              />\r\n              {formik.errors.name && formik.touched.name ? (\r\n                <div className=\"error-field\">{formik.errors.name}</div>\r\n              ) : null}\r\n            </Form.Item>\r\n            <Form.Item label=\"Universidad:\" required>\r\n              <Select\r\n                showSearch\r\n                name=\"schoolAgreement.id\"\r\n                placeholder=\"Seleccione una universidad\"\r\n                optionFilterProp=\"children\"\r\n                style={{ width: \"100%\" }}\r\n                value={formik.values.schoolAgreement.id}\r\n                onChange={(text) =>\r\n                  formik.setFieldValue(\"schoolAgreement.id\", text)\r\n                }\r\n                filterOption={(input, option) =>\r\n                  option.props.children\r\n                    .toLowerCase()\r\n                    .indexOf(input.toLowerCase()) >= 0\r\n                }\r\n              >\r\n                {schoolsAgreements.map(({ id, school }) => (\r\n                  <Select.Option key={id} value={id}>\r\n                    {school.name}\r\n                  </Select.Option>\r\n                ))}\r\n              </Select>\r\n              {formik.errors.schoolAgreement &&\r\n              formik.touched.schoolAgreement ? (\r\n                <div className=\"error-field\">\r\n                  {formik.errors.schoolAgreement.id}\r\n                </div>\r\n              ) : null}\r\n            </Form.Item>\r\n            <Form.Item label=\"Especialidad:\" required>\r\n              <Select\r\n                showSearch\r\n                name=\"specialty.id\"\r\n                placeholder=\"Seleccione una especialidad\"\r\n                optionFilterProp=\"children\"\r\n                style={{ width: \"100%\" }}\r\n                value={formik.values.specialty.id}\r\n                onChange={(text) => formik.setFieldValue(\"specialty.id\", text)}\r\n                filterOption={(input, option) =>\r\n                  option.props.children\r\n                    .toLowerCase()\r\n                    .indexOf(input.toLowerCase()) >= 0\r\n                }\r\n              >\r\n                {specialties.map((data) => (\r\n                  <Select.Option key={data.id} value={data.id}>\r\n                    {data.name}\r\n                  </Select.Option>\r\n                ))}\r\n              </Select>\r\n              {formik.errors.specialty && formik.touched.specialty ? (\r\n                <div className=\"error-field\">{formik.errors.specialty.id}</div>\r\n              ) : null}\r\n            </Form.Item>\r\n            <Row gutter={12}>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Plaza:\" required>\r\n                  <Select\r\n                    showSearch\r\n                    name=\"plaza.id\"\r\n                    placeholder=\"Seleccione una plaza\"\r\n                    optionFilterProp=\"children\"\r\n                    style={{ width: \"100%\" }}\r\n                    value={formik.values.plaza.id}\r\n                    onChange={(text) => formik.setFieldValue(\"plaza.id\", text)}\r\n                    filterOption={(input, option) =>\r\n                      option.props.children\r\n                        .toLowerCase()\r\n                        .indexOf(input.toLowerCase()) >= 0\r\n                    }\r\n                  >\r\n                    {plazas.map((data) => (\r\n                      <Select.Option key={data.id} value={data.id}>\r\n                        {data.name}\r\n                      </Select.Option>\r\n                    ))}\r\n                  </Select>\r\n                  {formik.errors.plaza && formik.touched.plaza ? (\r\n                    <div className=\"error-field\">{formik.errors.plaza.id}</div>\r\n                  ) : null}\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Sede:\" required>\r\n                  <Select\r\n                    showSearch\r\n                    name=\"campus.id\"\r\n                    placeholder=\"Seleccione una sede\"\r\n                    optionFilterProp=\"children\"\r\n                    style={{ width: \"100%\" }}\r\n                    value={formik.values.campus.id}\r\n                    onChange={(text) => formik.setFieldValue(\"campus.id\", text)}\r\n                    filterOption={(input, option) =>\r\n                      option.props.children\r\n                        .toLowerCase()\r\n                        .indexOf(input.toLowerCase()) >= 0\r\n                    }\r\n                  >\r\n                    {campus.map((data) => (\r\n                      <Select.Option key={data.id} value={data.id}>\r\n                        {data.name}\r\n                      </Select.Option>\r\n                    ))}\r\n                  </Select>\r\n                  {formik.errors.campus && formik.touched.campus ? (\r\n                    <div className=\"error-field\">{formik.errors.campus.id}</div>\r\n                  ) : null}\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n\r\n            {/* <Row gutter={12}>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Grupo:\" required>\r\n                  <Select\r\n                    showSearch\r\n                    name=\"grupo.id\"\r\n                    placeholder=\"Seleccione un grupo\"\r\n                    optionFilterProp=\"children\"\r\n                    style={{ width: \"100%\" }}\r\n                    value={formik.values.team.id}\r\n                    onChange={(text) => formik.setFieldValue(\"team.id\", text)}\r\n                    filterOption={(input, option) =>\r\n                      option.props.children\r\n                        .toLowerCase()\r\n                        .indexOf(input.toLowerCase()) >= 0\r\n                    }\r\n                  >\r\n                    {teams.map((data) => (\r\n                      <Select.Option key={data.id} value={data.id}>\r\n                        {data.name}\r\n                      </Select.Option>\r\n                    ))}\r\n                  </Select>\r\n                  {formik.errors.team && formik.touched.team ? (\r\n                    <div className=\"error-field\">{formik.errors.team.id}</div>\r\n                  ) : null}\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}> */}\r\n            <Form.Item label=\"Nivel:\">\r\n              <Select\r\n                disabled\r\n                showSearch\r\n                name=\"campus.id\"\r\n                placeholder=\"Seleccione un nivel\"\r\n                optionFilterProp=\"children\"\r\n                style={{ width: \"100%\" }}\r\n                value={formik.values.nivel.id}\r\n                onChange={(text) => formik.setFieldValue(\"nivel.id\", text)}\r\n                filterOption={(input, option) =>\r\n                  option.props.children\r\n                    .toLowerCase()\r\n                    .indexOf(input.toLowerCase()) >= 0\r\n                }\r\n              >\r\n                {niveles.map((data) => (\r\n                  <Select.Option key={data.id} value={data.id}>\r\n                    {data.name}\r\n                  </Select.Option>\r\n                ))}\r\n              </Select>\r\n            </Form.Item>\r\n            {/* </Col>\r\n            </Row> */}\r\n            <Form.Item label=\"Fecha de Ingreso:\">\r\n              <DatePicker\r\n                style={{ width: \"100%\" }}\r\n                name=\"birthDate\"\r\n                value={formik.values.registeredAt}\r\n                onChange={(value) =>\r\n                  formik.setFieldValue(\"registeredAt\", value)\r\n                }\r\n                disabledDate={disabledDate}\r\n                format={dateFormatList}\r\n              />\r\n              {formik.errors.registeredAt && formik.touched.registeredAt ? (\r\n                <div className=\"error-field\">{formik.errors.registeredAt}</div>\r\n              ) : null}\r\n            </Form.Item>\r\n            <Row gutter={12}>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Fecha de Nacimiento:\">\r\n                  <DatePicker\r\n                    style={{ width: \"100%\" }}\r\n                    name=\"birthDate\"\r\n                    value={formik.values.birthDate}\r\n                    onChange={(value) =>\r\n                      formik.setFieldValue(\"birthDate\", value)\r\n                    }\r\n                    disabledDate={disabledDate}\r\n                    format={dateFormatList}\r\n                  />\r\n                  {formik.errors.birthDate && formik.touched.birthDate ? (\r\n                    <div className=\"error-field\">{formik.errors.birthDate}</div>\r\n                  ) : null}\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Form.Item label=\"CMP:\" required>\r\n                  <Input\r\n                    name=\"cmp\"\r\n                    value={formik.values.cmp}\r\n                    onChange={formik.handleChange}\r\n                  />\r\n                  {formik.errors.cmp && formik.touched.cmp ? (\r\n                    <div className=\"error-field\">{formik.errors.cmp}</div>\r\n                  ) : null}\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Form.Item label=\"Domicilio:\">\r\n              <Input\r\n                name=\"address\"\r\n                value={formik.values.address}\r\n                onChange={formik.handleChange}\r\n              />\r\n              {formik.errors.address && formik.touched.address ? (\r\n                <div className=\"error-field\">{formik.errors.address}</div>\r\n              ) : null}\r\n            </Form.Item>\r\n            <Row gutter={12}>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Correo:\" required>\r\n                  <Input\r\n                    name=\"email\"\r\n                    value={formik.values.email}\r\n                    onChange={formik.handleChange}\r\n                  />\r\n                  {formik.errors.email && formik.touched.email ? (\r\n                    <div className=\"error-field\">{formik.errors.email}</div>\r\n                  ) : null}\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Form.Item label=\"N°Celular:\" required>\r\n                  <Input\r\n                    name=\"phone\"\r\n                    value={formik.values.phone}\r\n                    onChange={formik.handleChange}\r\n                  />\r\n                  {formik.errors.phone && formik.touched.phone ? (\r\n                    <div className=\"error-field\">{formik.errors.phone}</div>\r\n                  ) : null}\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Form.Item label=\"Estado:\">\r\n              <Radio.Group\r\n                name=\"status\"\r\n                value={formik.values.status}\r\n                onChange={formik.handleChange}\r\n              >\r\n                <Radio.Button value={true}>ACTIVO</Radio.Button>\r\n                <Radio.Button value={false}>INACTIVO</Radio.Button>\r\n              </Radio.Group>\r\n            </Form.Item>\r\n            <Button type=\"primary\" htmlType=\"submit\" block>\r\n              Registrar\r\n            </Button>\r\n          </Form>\r\n        </Drawer>\r\n\r\n        <Drawer\r\n          title=\"Actualizar Médico\"\r\n          placement=\"right\"\r\n          closable={false}\r\n          width={500}\r\n          onClose={handleCloseDrawerUpdateForm}\r\n          visible={visibleUpdateForm}\r\n          id=\"updateForm\"\r\n        >\r\n          <Form\r\n            title=\"Medico\"\r\n            layout=\"vertical\"\r\n            onSubmitCapture={formik.handleSubmit}\r\n          >\r\n            <Row gutter={12} style={{ display: \"none\" }}>\r\n              <Col span={12}>\r\n                <Form.Item required>\r\n                  <Input\r\n                    name=\"action\"\r\n                    value={formik.values.action}\r\n                    onChange={formik.handleChange}\r\n                  />\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={12}>\r\n              <Col span={12}>\r\n                <Form.Item label=\"ID:\" required>\r\n                  <Input\r\n                    disabled\r\n                    name=\"id\"\r\n                    value={formik.values.id}\r\n                    onChange={formik.handleChange}\r\n                  />\r\n                  {formik.errors.document && formik.touched.document ? (\r\n                    <div className=\"error-field\">{formik.errors.document}</div>\r\n                  ) : null}\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Form.Item label=\"DNI:\" required>\r\n                  <Input\r\n                    name=\"document\"\r\n                    value={formik.values.document}\r\n                    onChange={formik.handleChange}\r\n                  />\r\n                  {formik.errors.document && formik.touched.document ? (\r\n                    <div className=\"error-field\">{formik.errors.document}</div>\r\n                  ) : null}\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={12}>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Apellido Paterno:\" required>\r\n                  <Input\r\n                    name=\"paternalSurname\"\r\n                    value={formik.values.paternalSurname}\r\n                    onChange={formik.handleChange}\r\n                  />\r\n                  {formik.errors.paternalSurname &&\r\n                  formik.touched.paternalSurname ? (\r\n                    <div className=\"error-field\">\r\n                      {formik.errors.paternalSurname}\r\n                    </div>\r\n                  ) : null}\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Apellido Materno:\" required>\r\n                  <Input\r\n                    name=\"maternalSurname\"\r\n                    value={formik.values.maternalSurname}\r\n                    onChange={formik.handleChange}\r\n                  />\r\n                  {formik.errors.maternalSurname &&\r\n                  formik.touched.maternalSurname ? (\r\n                    <div className=\"error-field\">\r\n                      {formik.errors.maternalSurname}\r\n                    </div>\r\n                  ) : null}\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Form.Item label=\"Nombre Completo:\" required>\r\n              <Input\r\n                name=\"name\"\r\n                value={formik.values.name}\r\n                onChange={formik.handleChange}\r\n              />\r\n              {formik.errors.name && formik.touched.name ? (\r\n                <div className=\"error-field\">{formik.errors.name}</div>\r\n              ) : null}\r\n            </Form.Item>\r\n            <Form.Item label=\"Universidad:\" required>\r\n              <Select\r\n                showSearch\r\n                name=\"schoolAgreement.id\"\r\n                placeholder=\"Seleccione una universidad\"\r\n                optionFilterProp=\"children\"\r\n                style={{ width: \"100%\" }}\r\n                value={formik.values.schoolAgreement.id}\r\n                onChange={(text) =>\r\n                  formik.setFieldValue(\"schoolAgreement.id\", text)\r\n                }\r\n                filterOption={(input, option) =>\r\n                  option.props.children\r\n                    .toLowerCase()\r\n                    .indexOf(input.toLowerCase()) >= 0\r\n                }\r\n              >\r\n                {schoolsAgreements.map(({ id, school }) => (\r\n                  <Select.Option key={id} value={id}>\r\n                    {school.name}\r\n                  </Select.Option>\r\n                ))}\r\n              </Select>\r\n              {formik.errors.schoolAgreement &&\r\n              formik.touched.schoolAgreement ? (\r\n                <div className=\"error-field\">\r\n                  {formik.errors.schoolAgreement.id}\r\n                </div>\r\n              ) : null}\r\n            </Form.Item>\r\n            <Form.Item label=\"Especialidad:\" required>\r\n              <Select\r\n                showSearch\r\n                name=\"specialty.id\"\r\n                placeholder=\"Seleccione una especialidad\"\r\n                optionFilterProp=\"children\"\r\n                style={{ width: \"100%\" }}\r\n                value={formik.values.specialty.id}\r\n                onChange={(text) => formik.setFieldValue(\"specialty.id\", text)}\r\n                filterOption={(input, option) =>\r\n                  option.props.children\r\n                    .toLowerCase()\r\n                    .indexOf(input.toLowerCase()) >= 0\r\n                }\r\n              >\r\n                {specialties.map((data) => (\r\n                  <Select.Option key={data.id} value={data.id}>\r\n                    {data.name}\r\n                  </Select.Option>\r\n                ))}\r\n              </Select>\r\n              {formik.errors.specialty && formik.touched.specialty ? (\r\n                <div className=\"error-field\">{formik.errors.specialty.id}</div>\r\n              ) : null}\r\n            </Form.Item>\r\n            <Row gutter={12}>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Plaza:\" required>\r\n                  <Select\r\n                    showSearch\r\n                    name=\"plaza.id\"\r\n                    placeholder=\"Seleccione una plaza\"\r\n                    optionFilterProp=\"children\"\r\n                    style={{ width: \"100%\" }}\r\n                    value={formik.values.plaza.id}\r\n                    onChange={(text) => formik.setFieldValue(\"plaza.id\", text)}\r\n                    filterOption={(input, option) =>\r\n                      option.props.children\r\n                        .toLowerCase()\r\n                        .indexOf(input.toLowerCase()) >= 0\r\n                    }\r\n                  >\r\n                    {plazas.map((data) => (\r\n                      <Select.Option key={data.id} value={data.id}>\r\n                        {data.name}\r\n                      </Select.Option>\r\n                    ))}\r\n                  </Select>\r\n                  {formik.errors.plaza && formik.touched.plaza ? (\r\n                    <div className=\"error-field\">{formik.errors.plaza.id}</div>\r\n                  ) : null}\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Sede:\" required>\r\n                  <Select\r\n                    showSearch\r\n                    name=\"campus.id\"\r\n                    placeholder=\"Seleccione una sede\"\r\n                    optionFilterProp=\"children\"\r\n                    style={{ width: \"100%\" }}\r\n                    value={formik.values.campus.id}\r\n                    onChange={(text) => formik.setFieldValue(\"campus.id\", text)}\r\n                    filterOption={(input, option) =>\r\n                      option.props.children\r\n                        .toLowerCase()\r\n                        .indexOf(input.toLowerCase()) >= 0\r\n                    }\r\n                  >\r\n                    {campus.map((data) => (\r\n                      <Select.Option key={data.id} value={data.id}>\r\n                        {data.name}\r\n                      </Select.Option>\r\n                    ))}\r\n                  </Select>\r\n                  {formik.errors.campus && formik.touched.campus ? (\r\n                    <div className=\"error-field\">{formik.errors.campus.id}</div>\r\n                  ) : null}\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n\r\n            {/* <Row gutter={12}>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Grupo:\" required>\r\n                  <Select\r\n                    showSearch\r\n                    name=\"grupo.id\"\r\n                    placeholder=\"Seleccione un grupo\"\r\n                    optionFilterProp=\"children\"\r\n                    style={{ width: \"100%\" }}\r\n                    value={formik.values.team.id}\r\n                    onChange={(text) => formik.setFieldValue(\"team.id\", text)}\r\n                    filterOption={(input, option) =>\r\n                      option.props.children\r\n                        .toLowerCase()\r\n                        .indexOf(input.toLowerCase()) >= 0\r\n                    }\r\n                  >\r\n                    {teams.map((data) => (\r\n                      <Select.Option key={data.id} value={data.id}>\r\n                        {data.name}\r\n                      </Select.Option>\r\n                    ))}\r\n                  </Select>\r\n                  {formik.errors.team && formik.touched.team ? (\r\n                    <div className=\"error-field\">{formik.errors.team.id}</div>\r\n                  ) : null}\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}> */}\r\n            <Form.Item label=\"Nivel:\">\r\n              <Select\r\n                disabled\r\n                showSearch\r\n                name=\"campus.id\"\r\n                placeholder=\"Seleccione un nivel\"\r\n                optionFilterProp=\"children\"\r\n                style={{ width: \"100%\" }}\r\n                value={formik.values.nivel.id}\r\n                onChange={(text) => formik.setFieldValue(\"nivel.id\", text)}\r\n                filterOption={(input, option) =>\r\n                  option.props.children\r\n                    .toLowerCase()\r\n                    .indexOf(input.toLowerCase()) >= 0\r\n                }\r\n              >\r\n                {niveles.map((data) => (\r\n                  <Select.Option key={data.id} value={data.id}>\r\n                    {data.name}\r\n                  </Select.Option>\r\n                ))}\r\n              </Select>\r\n            </Form.Item>\r\n            {/* </Col>\r\n            </Row> */}\r\n            <Form.Item label=\"Fecha de Ingreso:\">\r\n              <DatePicker\r\n                style={{ width: \"100%\" }}\r\n                name=\"birthDate\"\r\n                value={formik.values.registeredAt}\r\n                onChange={(value) =>\r\n                  formik.setFieldValue(\"registeredAt\", value)\r\n                }\r\n                disabledDate={disabledDate}\r\n                format={dateFormatList}\r\n              />\r\n              {formik.errors.registeredAt && formik.touched.registeredAt ? (\r\n                <div className=\"error-field\">{formik.errors.registeredAt}</div>\r\n              ) : null}\r\n            </Form.Item>\r\n            <Row gutter={12}>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Fecha de Nacimiento:\">\r\n                  <DatePicker\r\n                    style={{ width: \"100%\" }}\r\n                    name=\"birthDate\"\r\n                    value={formik.values.birthDate}\r\n                    onChange={(value) =>\r\n                      formik.setFieldValue(\"birthDate\", value)\r\n                    }\r\n                    disabledDate={disabledDate}\r\n                    format={dateFormatList}\r\n                  />\r\n                  {formik.errors.birthDate && formik.touched.birthDate ? (\r\n                    <div className=\"error-field\">{formik.errors.birthDate}</div>\r\n                  ) : null}\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Form.Item label=\"CMP:\" required>\r\n                  <Input\r\n                    name=\"cmp\"\r\n                    value={formik.values.cmp}\r\n                    onChange={formik.handleChange}\r\n                  />\r\n                  {formik.errors.cmp && formik.touched.cmp ? (\r\n                    <div className=\"error-field\">{formik.errors.cmp}</div>\r\n                  ) : null}\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Form.Item label=\"Domicilio:\">\r\n              <Input\r\n                name=\"address\"\r\n                value={formik.values.address}\r\n                onChange={formik.handleChange}\r\n              />\r\n              {formik.errors.address && formik.touched.address ? (\r\n                <div className=\"error-field\">{formik.errors.address}</div>\r\n              ) : null}\r\n            </Form.Item>\r\n            <Row gutter={12}>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Correo:\" required>\r\n                  <Input\r\n                    name=\"email\"\r\n                    value={formik.values.email}\r\n                    onChange={formik.handleChange}\r\n                  />\r\n                  {formik.errors.email && formik.touched.email ? (\r\n                    <div className=\"error-field\">{formik.errors.email}</div>\r\n                  ) : null}\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Form.Item label=\"N°Celular:\" required>\r\n                  <Input\r\n                    name=\"phone\"\r\n                    value={formik.values.phone}\r\n                    onChange={formik.handleChange}\r\n                  />\r\n                  {formik.errors.phone && formik.touched.phone ? (\r\n                    <div className=\"error-field\">{formik.errors.phone}</div>\r\n                  ) : null}\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Form.Item label=\"Acciones:\">\r\n              {/* <Radio.Group\r\n                name=\"status\"\r\n                value={formik.values.status}\r\n                onChange={formik.handleChange}\r\n              >\r\n                <Radio.Button value={true}>ACTIVO</Radio.Button>\r\n                <Radio.Button value={false}>INACTIVO</Radio.Button>\r\n              </Radio.Group> */}\r\n              <Row gutter={[16, 16]}>\r\n                <Col span=\"12\">\r\n                  <Button type=\"primary\" htmlType=\"submit\" block>\r\n                    Actualizar\r\n                  </Button>\r\n                </Col>\r\n\r\n                <Col span=\"12\">\r\n                  <Button\r\n                    style={{\r\n                      backgroundColor: \"red\",\r\n                      color: \"white\",\r\n                      border: \"none\",\r\n                    }}\r\n                    htmlType=\"button\"\r\n                    onClick={() =>\r\n                      deleteDocturByDocument(formik.values.document.toString())\r\n                    }\r\n                    block\r\n                  >\r\n                    Eliminar\r\n                  </Button>\r\n                </Col>\r\n              </Row>\r\n            </Form.Item>\r\n          </Form>\r\n        </Drawer>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","F:\\Hospital Almenara\\Front\\almenara-reactapp\\src\\pages\\Reporte\\Medico\\index.js",["617","618"],"import React, { useEffect, useState } from \"react\";\r\nimport { Breadcrumb, Button, Table, Tag } from \"antd\";\r\nimport { EditOutlined, FilePdfTwoTone } from \"@ant-design/icons\";\r\nimport { getDoctors, viewPdfDoctor } from \"../../../services/DoctorService\";\r\n\r\nimport \"../../Mantenimiento/Mantenimiento.css\";\r\n\r\nexport const MedicoReporte = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [dataSource, setDataSource] = useState([]);\r\n\r\n  const listar = () => {\r\n    getDoctors().then((resp) => {\r\n      resp.forEach((data) => {\r\n        data.key = data.id;\r\n        data.schoolName = data.schoolAgreement.school.shortName;\r\n        data.specialtyName = data.specialty.name;\r\n        data.plazaName = data.plaza.name;\r\n        data.campusName = data.campus.name;\r\n        data.lastName = data.paternalSurname + \" \" + data.maternalSurname;\r\n      });\r\n      setDataSource(resp);\r\n      console.log(resp);\r\n    });\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: \"#\",\r\n      dataIndex: \"id\",\r\n      key: \"id\",\r\n      width: 50,\r\n      fixed: \"left\",\r\n      align: \"center\",\r\n    },\r\n    {\r\n      title: \"N° Documento\",\r\n      dataIndex: \"document\",\r\n      key: \"document\",\r\n      width: 110,\r\n      align: \"center\",\r\n    },\r\n    {\r\n      title: \"Apellidos\",\r\n      dataIndex: \"lastName\",\r\n      key: \"lastName\",\r\n      align: \"center\",\r\n    },\r\n    {\r\n      title: \"Nombres\",\r\n      dataIndex: \"name\",\r\n      key: \"name\",\r\n      align: \"center\",\r\n    },\r\n    {\r\n      title: \"Universidad\",\r\n      dataIndex: \"schoolName\",\r\n      key: \"schoolName\",\r\n      width: 108,\r\n      align: \"center\",\r\n    },\r\n    {\r\n      title: \"Especialidad\",\r\n      dataIndex: \"specialtyName\",\r\n      key: \"specialtyName\",\r\n      align: \"center\",\r\n    },\r\n    {\r\n      title: \"Plaza\",\r\n      dataIndex: \"plazaName\",\r\n      key: \"plazaName\",\r\n      width: 80,\r\n      align: \"center\",\r\n    },\r\n    {\r\n      title: \"Sede\",\r\n      dataIndex: \"campusName\",\r\n      key: \"campusName\",\r\n      width: 78,\r\n      align: \"center\",\r\n    },\r\n    {\r\n      title: \"Fecha de Nacimiento\",\r\n      dataIndex: \"birthDate\",\r\n      key: \"birthDate\",\r\n      align: \"center\",\r\n    },\r\n    {\r\n      title: \"Domicilio\",\r\n      dataIndex: \"address\",\r\n      key: \"address\",\r\n      align: \"center\",\r\n    },\r\n    {\r\n      title: \"CMP\",\r\n      dataIndex: \"cmp\",\r\n      key: \"cmp\",\r\n      width: 70,\r\n      align: \"center\",\r\n    },\r\n    {\r\n      title: \"Correo\",\r\n      dataIndex: \"email\",\r\n      key: \"email\",\r\n      align: \"center\",\r\n    },\r\n    {\r\n      title: \"N° Celular\",\r\n      dataIndex: \"phone\",\r\n      key: \"phone\",\r\n      width: 100,\r\n      align: \"center\",\r\n    },\r\n    {\r\n      title: \"Estado\",\r\n      dataIndex: \"status\",\r\n      key: \"status\",\r\n      width: 90,\r\n      align: \"center\",\r\n      render: (val, record) =>\r\n        record.status ? (\r\n          <Tag color=\"green\">ACTIVO</Tag>\r\n        ) : (\r\n          <Tag color=\"red\">INACTIVO</Tag>\r\n        ),\r\n      filters: [\r\n        {\r\n          text: \"ACTIVO\",\r\n          value: true,\r\n        },\r\n        {\r\n          text: \"INACTIVO\",\r\n          value: false,\r\n        },\r\n      ],\r\n      filterMultiple: false,\r\n      onFilter: (value, record) => {\r\n        let status = String(record.status);\r\n        return status.indexOf(value) === 0;\r\n      },\r\n    },\r\n    // {\r\n    //   title: \"Acciones\",\r\n    //   key: \"action\",\r\n    //   fixed: \"right\",\r\n    //   width: 100,\r\n    //   align: \"center\",\r\n    //   render: (record) => (\r\n    //     <Button type=\"link\" size=\"small\">\r\n    //       <EditOutlined />\r\n    //     </Button>\r\n    //   ),\r\n    // },\r\n  ];\r\n\r\n  const exportToPdf = () => {\r\n    console.log(\"hello pdf\");\r\n    viewPdfDoctor();\r\n  };\r\n\r\n  useEffect(() => {\r\n    setLoading(false);\r\n    listar();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"mantenimiento\">\r\n      <header>\r\n        <h2 className=\"title\">\r\n          <Breadcrumb>\r\n            <Breadcrumb.Item>Reporte</Breadcrumb.Item>\r\n            <Breadcrumb.Item>Médico</Breadcrumb.Item>\r\n          </Breadcrumb>\r\n        </h2>\r\n        <Button\r\n          type=\"dashed\"\r\n          color=\"red\"\r\n          size=\"large\"\r\n          danger\r\n          onClick={exportToPdf}\r\n        >\r\n          <FilePdfTwoTone twoToneColor=\"red\" /> Exportar a PDF\r\n        </Button>\r\n      </header>\r\n      <div className=\"content\">\r\n        <Table\r\n          loading={!dataSource.length>0}\r\n          dataSource={dataSource}\r\n          columns={columns}\r\n          pagination={{ pageSize: 10 }}\r\n          scroll={{ x: 2000 }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","F:\\Hospital Almenara\\Front\\almenara-reactapp\\src\\pages\\Mantenimiento\\EspecialidadServicio\\index.js",["619","620"],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Breadcrumb,\r\n  Button,\r\n  Drawer,\r\n  Input,\r\n  Table,\r\n  Tag,\r\n  Form,\r\n  notification,\r\n  Tooltip,\r\n  Select,\r\n} from \"antd\";\r\nimport {\r\n  EditOutlined,\r\n  PlusCircleOutlined,\r\n  DeleteOutlined,\r\n} from \"@ant-design/icons\";\r\nimport {\r\n  getServicesBySpeciality,\r\n  addServiceToSpeciality,\r\n  removeServiceToSpeciality,\r\n  getActiveServices,\r\n} from \"../../../services/ServicioService\";\r\nimport { getSpecialtiesDto } from \"../../../services/SpecialtyService\";\r\n\r\nimport * as Yup from \"yup\";\r\n\r\nimport \"../Mantenimiento.css\";\r\nimport { useFormik } from \"formik\";\r\n\r\nconst openNotification = (msg, description, placement) => {\r\n  notification.success({\r\n    message: msg,\r\n    description: description,\r\n    placement,\r\n  });\r\n};\r\n\r\nconst openErrorNotification = (msg, description, placement) => {\r\n  notification.error({\r\n    message: msg,\r\n    description: description,\r\n    placement,\r\n  });\r\n};\r\n\r\nexport const EspecialidadServicio = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [visible, setVisible] = useState(false);\r\n  const [editar, setEditar] = useState(false);\r\n  const [filterTable, setFilterTable] = useState(null);\r\n  const [dataSource, setDataSource] = useState([]);\r\n  const [filterServiceTable, setFilterServiceTable] = useState(null);\r\n  const [dataServiceSource, setDataServiceSource] = useState([]);\r\n  const [services, setServices] = useState([]);\r\n  const [addNewService, setAddNewService] = useState(false);\r\n  const [delSpeciliaty, setDelSpeciliaty] = useState(null);\r\n\r\n  const listar = () => {\r\n    getSpecialtiesDto().then((resp) => {\r\n      resp.forEach((data) => {\r\n        data.key = data.id;\r\n      });\r\n      console.log(resp);\r\n      setDataSource(resp);\r\n    });\r\n  };\r\n\r\n  const validationSchema = Yup.object().shape({\r\n    servicioId: Yup.string().required(\"Seleccione un Servicio\"),\r\n  });\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      servicioId: null,\r\n      specialityId: null,\r\n    },\r\n    validationSchema,\r\n    onSubmit: (value) => {\r\n      console.log(value);\r\n      addServiceToSpeciality(value).then((resp) => {\r\n        console.log(resp);\r\n        //listar();\r\n        //setVisible(false);\r\n        editSpeciality(value.specialityId);\r\n        openNotification(\"Servicio agregado correctamente\", \"\", \"topRight\");\r\n      });\r\n\r\n      formik.resetForm();\r\n      setAddNewService(false);\r\n    },\r\n  });\r\n\r\n  const editSpeciality = (specialityId) => {\r\n    setEditar(true);\r\n    setDelSpeciliaty(specialityId);\r\n    // console.log(specialityId);\r\n    getServicesBySpeciality(specialityId)\r\n      .then((resp) => {\r\n        getActiveServices(specialityId)\r\n          .then(setServices)\r\n          .catch((err) => console.log(err));\r\n        resp.forEach((data) => {\r\n          data.key = data.id;\r\n        });\r\n        console.log(resp);\r\n        setDataServiceSource(resp);\r\n        setVisible(true);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  const removeSpeciality = (serviceId) => {\r\n    console.log(serviceId);\r\n\r\n    removeServiceToSpeciality(delSpeciliaty, serviceId)\r\n      .then((data) => {\r\n        openNotification(\"Servicio eliminado correctamente\", \"\", \"topRight\");\r\n        editSpeciality(delSpeciliaty);\r\n      })\r\n      .catch((error) => {\r\n        openErrorNotification(\"Error al eliminar el servicio.\", \"\", \"topRight\");\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: \"#\",\r\n      dataIndex: \"id\",\r\n      key: \"id\",\r\n      width: 80,\r\n      fixed: \"left\",\r\n      align: \"center\",\r\n    },\r\n    {\r\n      title: \"Nombre\",\r\n      dataIndex: \"name\",\r\n      key: \"name\",\r\n      align: \"center\",\r\n    },\r\n    {\r\n      title: \"Estado\",\r\n      dataIndex: \"state\",\r\n      key: \"state\",\r\n      width: 120,\r\n      align: \"center\",\r\n      render: (val, record) =>\r\n        record.state ? (\r\n          <Tag color=\"green\">ACTIVO</Tag>\r\n        ) : (\r\n          <Tag color=\"red\">INACTIVO</Tag>\r\n        ),\r\n      filters: [\r\n        {\r\n          text: \"ACTIVO\",\r\n          value: true,\r\n        },\r\n        {\r\n          text: \"INACTIVO\",\r\n          value: false,\r\n        },\r\n      ],\r\n      filterMultiple: false,\r\n      onFilter: (value, record) => {\r\n        let status = String(record.state);\r\n        return status.indexOf(value) === 0;\r\n      },\r\n    },\r\n    {\r\n      title: \"Acciones\",\r\n      key: \"action\",\r\n      fixed: \"right\",\r\n      width: 100,\r\n      align: \"center\",\r\n      render: (record) => (\r\n        <Button\r\n          type=\"primary\"\r\n          size=\"large\"\r\n          onClick={() => {\r\n            formik.values.name = record.name;\r\n            formik.values.specialityId = record.id;\r\n            editSpeciality(record.id);\r\n          }}\r\n        >\r\n          <EditOutlined />\r\n        </Button>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  const servicesColumns = [\r\n    {\r\n      title: \"#\",\r\n      dataIndex: \"id\",\r\n      key: \"id\",\r\n      width: 80,\r\n      fixed: \"left\",\r\n      align: \"center\",\r\n    },\r\n    {\r\n      title: \"Nombre\",\r\n      dataIndex: \"name\",\r\n      key: \"name\",\r\n      align: \"center\",\r\n    },\r\n    {\r\n      title: \"Estado\",\r\n      dataIndex: \"state\",\r\n      key: \"state\",\r\n      width: 120,\r\n      align: \"center\",\r\n      render: (val, record) =>\r\n        record.state ? (\r\n          <Tag color=\"green\">ACTIVO</Tag>\r\n        ) : (\r\n          <Tag color=\"red\">INACTIVO</Tag>\r\n        ),\r\n      filters: [\r\n        {\r\n          text: \"ACTIVO\",\r\n          value: true,\r\n        },\r\n        {\r\n          text: \"INACTIVO\",\r\n          value: false,\r\n        },\r\n      ],\r\n      filterMultiple: false,\r\n      onFilter: (value, record) => {\r\n        let status = String(record.state);\r\n        return status.indexOf(value) === 0;\r\n      },\r\n    },\r\n    {\r\n      title: \"Acciones\",\r\n      key: \"action\",\r\n      fixed: \"right\",\r\n      width: 100,\r\n      align: \"center\",\r\n      render: (record) => (\r\n        <Button\r\n          type=\"danger\"\r\n          size=\"large\"\r\n          onClick={() => removeSpeciality(record.id)}\r\n        >\r\n          <Tooltip title=\"Quitar servicio\">\r\n            <DeleteOutlined />\r\n          </Tooltip>\r\n        </Button>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  const keyUpTable = (value) => {\r\n    setFilterTable(\r\n      dataSource.filter((o) =>\r\n        Object.keys(o).some((k) =>\r\n          String(o[k]).toLowerCase().includes(value.toLowerCase())\r\n        )\r\n      )\r\n    );\r\n  };\r\n\r\n  const handleCloseDrawer = () => {\r\n    setVisible(false);\r\n    formik.resetForm();\r\n  };\r\n\r\n  useEffect(() => {\r\n    setLoading(false);\r\n    listar();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"mantenimiento\">\r\n      <header>\r\n        <h2 className=\"title\">\r\n          <Breadcrumb>\r\n            <Breadcrumb.Item>Mantenimiento</Breadcrumb.Item>\r\n            <Breadcrumb.Item>Asignar Servicios a Especialidad</Breadcrumb.Item>\r\n          </Breadcrumb>\r\n        </h2>\r\n      </header>\r\n      <div className=\"content\">\r\n        <Input.Search\r\n          className=\"searchInput\"\r\n          placeholder=\"Buscar por ...\"\r\n          onKeyUpCapture={(e) => keyUpTable(e.target.value)}\r\n        />\r\n        <Table\r\n          loading={!dataSource.length > 0}\r\n          dataSource={filterTable === null ? dataSource : filterTable}\r\n          columns={columns}\r\n          pagination={{ pageSize: 5 }}\r\n          scroll={{ x: 800 }}\r\n        />\r\n        <Drawer\r\n          title={\"Listado de Servicios por Especialidad\"}\r\n          placement=\"right\"\r\n          closable={false}\r\n          width={900}\r\n          onClose={handleCloseDrawer}\r\n          visible={visible}\r\n        >\r\n          <Form\r\n            title=\"Servicio\"\r\n            layout=\"vertical\"\r\n            onSubmitCapture={formik.handleSubmit}\r\n          >\r\n            <Form.Item label=\"Nombre de Servicio:\">\r\n              <Input\r\n                value={formik.values.name}\r\n                disabled={true}\r\n                style={{ width: \"calc(100% - 32px)\" }}\r\n              />\r\n              <Tooltip placement=\"topLeft\" title=\"Añadir un servicio\">\r\n                <Button type=\"link\" size=\"small\">\r\n                  <PlusCircleOutlined\r\n                    onClick={() => setAddNewService(!addNewService)}\r\n                  />\r\n                </Button>\r\n              </Tooltip>\r\n              <Input\r\n                name=\"specialityId\"\r\n                value={formik.values.specialityId}\r\n                disabled={true}\r\n                style={{ display: \"none\" }}\r\n              />\r\n            </Form.Item>\r\n            {addNewService ? (\r\n              <div>\r\n                <Form.Item label=\"Servicio:\" required>\r\n                  <Select\r\n                    showSearch\r\n                    name=\"servicioId\"\r\n                    placeholder=\"Seleccione un Servicio\"\r\n                    optionFilterProp=\"children\"\r\n                    style={{ width: \"100%\" }}\r\n                    value={formik.values.servicioId}\r\n                    onChange={(text) =>\r\n                      formik.setFieldValue(\"servicioId\", text)\r\n                    }\r\n                    filterOption={(input, option) =>\r\n                      option.props.children\r\n                        .toLowerCase()\r\n                        .indexOf(input.toLowerCase()) >= 0\r\n                    }\r\n                  >\r\n                    {services.map((data) => (\r\n                      <Select.Option key={data.id} value={data.id}>\r\n                        {data.name}\r\n                      </Select.Option>\r\n                    ))}\r\n                  </Select>\r\n                  {formik.errors.servicioId && formik.touched.servicioId ? (\r\n                    <div className=\"error-field\">\r\n                      {formik.errors.servicioId}\r\n                    </div>\r\n                  ) : null}\r\n                </Form.Item>\r\n                <Button type=\"primary\" htmlType=\"submit\" block>\r\n                  Agregar Servicio\r\n                </Button>\r\n              </div>\r\n            ) : (\r\n              <br />\r\n            )}\r\n            <br />\r\n            <Form.Item>\r\n              <Table\r\n                loading={loading}\r\n                dataSource={\r\n                  filterServiceTable === null\r\n                    ? dataServiceSource\r\n                    : filterServiceTable\r\n                }\r\n                columns={servicesColumns}\r\n                pagination={{ pageSize: 5 }}\r\n                scroll={{ x: 800 }}\r\n              />\r\n            </Form.Item>\r\n          </Form>\r\n        </Drawer>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","F:\\Hospital Almenara\\Front\\almenara-reactapp\\src\\pages\\Reporte\\Especialidad\\index.js",["621","622","623"],"import { FilePdfTwoTone, PrinterOutlined } from \"@ant-design/icons\";\r\nimport { Breadcrumb, Button, Table } from \"antd\";\r\nimport React, { useRef } from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { getSpecialties,getSpecialtiesPdf } from \"../../../services/SpecialtyService\";\r\n\r\nconst colums = [\r\n  {\r\n    title: \"#\",\r\n    dataIndex: \"id\",\r\n    key: \"id\",\r\n    width: 50,\r\n    fixed: \"left\",\r\n    align: \"center\",\r\n  },\r\n  {\r\n    title: \"Nombre\",\r\n    dataIndex: \"name\",\r\n    key: \"name\",\r\n    align: \"center\",\r\n  },\r\n];\r\n\r\nconst TablaEspecialidades = () => {\r\n  const [dataSource, setDataSource] = useState([]);\r\n\r\n  const listar = () => {\r\n    getSpecialties().then((resp) => {\r\n      resp.forEach((data) => {\r\n        data.key = data.id;\r\n      });\r\n      console.log(resp);\r\n      setDataSource(resp);\r\n    });\r\n  };\r\n  useEffect(() => {\r\n    listar();\r\n  }, []);\r\n  return (\r\n    <div style={{ height: 500, position: \"relative\" }}>\r\n      <Table\r\n        id=\"tabla\"\r\n        loading={!dataSource.length > 0}\r\n        dataSource={dataSource}\r\n        columns={colums}\r\n        pagination={{ pageSize: dataSource.length }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const EspecialidadReporte = () => {\r\n\r\n\r\n  const ImprimirTabla = () => {\r\n  \r\n  };\r\n\r\n  const handlePrint = () => {\r\n    // var mywindow = window.open(\"\", \"PRINT\", \"\");\r\n    // mywindow.document.write(\"<html><head>\");\r\n    // mywindow.document.write(\"</head><body >\");\r\n    // // mywindow.document.write('<style> #tabla{width:100%;border-collapse:collapse;margin:16px 0 16px 0;}#tabla th{border:1px solid #ddd;padding:4px;background-color:#d4eefd;text-align:left;font-size:15px;}#tabla td{border:1px solid #ddd;text-align:left;padding:6px;}</style>');\r\n    // mywindow.document.write(document.getElementById(\"tabla\").innerHTML);\r\n    // mywindow.document.write(\"</body></html>\");\r\n    // mywindow.document.close(); // necesario para IE >= 10\r\n    // mywindow.focus(); // necesario para IE >= 10\r\n    // mywindow.print();\r\n    // mywindow.close();\r\n    // return true;\r\n    getSpecialtiesPdf();\r\n  \r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <header>\r\n        <h2 className=\"title\">\r\n          <Breadcrumb>\r\n            <Breadcrumb.Item>Reporte</Breadcrumb.Item>\r\n            <Breadcrumb.Item>Especialidad</Breadcrumb.Item>\r\n          </Breadcrumb>\r\n        </h2>\r\n\r\n        <Button type=\"ghost\" onClick={handlePrint}>\r\n          <PrinterOutlined /> Imprimir\r\n        </Button>\r\n      </header>\r\n\r\n      <TablaEspecialidades />\r\n    </div>\r\n  );\r\n};\r\n","F:\\Hospital Almenara\\Front\\almenara-reactapp\\src\\pages\\Reporte\\Servicio\\RotacionServiciosPorPeriodo\\index.js",["624","625","626","627","628","629","630"],"import { FilePdfTwoTone } from \"@ant-design/icons\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  getServiciosDoctor,\r\n  getServiciosDoctorByAnioAndServicio,\r\n  viewPdfServiciosDoctorByAnioAndServicio,\r\n  viewPdfServiciosDoctorFilterSpecialty,\r\n} from \"../../../../services/ServicioDoctorService\";\r\nimport { getServiciosWithSpecialityName } from \"../../../../services/ServicioService\";\r\nimport { getAniosAcademicos } from \"../../../../services/AnioAcademicoService\";\r\nimport { getMeses } from \"../../../../services/MesService\";\r\nimport { Form, Breadcrumb, Button, Select, Empty } from \"antd\";\r\nimport { getSpecialties } from \"../../../../services/SpecialtyService\";\r\n\r\nexport const ReporteRotationDoctorServiciosPorPeriodo = () => {\r\n  const [serviciosDoctor, setServiciosDoctor] = useState([]);\r\n  const [servicios, setServicios] = useState([]);\r\n  const [meses, setMeses] = useState([]);\r\n  const [aniosAcademico, setaniosAcademico] = useState([]);\r\n  const [filterServiceOn, setfilterServiceOn] = useState(false);\r\n  const [filterAnioAcademicoOn, setFilterAnioAcademicoOn] = useState(false);\r\n  const [filterMesOn, setFilterMesOn] = useState(false);\r\n  const [idService, setidService] = useState(null);\r\n  const [idAnioAcademico, setIdAnioAcademico] = useState(null);\r\n  const [idMes, setIdMes] = useState(null);\r\n\r\n  const listar = () => {\r\n    getServiciosDoctor().then(setServiciosDoctor);\r\n  };\r\n\r\n  const listarByidService = () => {\r\n    if (filterAnioAcademicoOn && filterServiceOn) {\r\n      // console.log(\"idMes :\"+idMes);\r\n      // console.log(\"idAnioAcademico :\"+idAnioAcademico);\r\n      // console.log(\"idService :\"+idService);\r\n      getServiciosDoctorByAnioAndServicio(idService, idAnioAcademico).then(\r\n        (data) => {\r\n          console.log(data);\r\n          setServiciosDoctor(data);\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  const hanldeSelectService = (e) => {\r\n    setidService(e);\r\n    setfilterServiceOn(true);\r\n    //listarByidService(e);\r\n  };\r\n\r\n  const hanldeSelectAnioAcademico = (e) => {\r\n    setIdAnioAcademico(e);\r\n    setFilterAnioAcademicoOn(true);\r\n    //listarByidService(e);\r\n  };\r\n\r\n  const exportToPdf = () => {\r\n    if (filterAnioAcademicoOn && filterServiceOn) {\r\n      viewPdfServiciosDoctorByAnioAndServicio(idAnioAcademico, idService);\r\n    } else {\r\n      alert(\"Seleccione los filtros primero\");\r\n    }\r\n  };\r\n\r\n  const clearFilter = () => {\r\n    setFilterMesOn(false);\r\n    setFilterAnioAcademicoOn(false);\r\n    setfilterServiceOn(false);\r\n    setidService(null);\r\n    setIdMes(null);\r\n    setIdAnioAcademico(null);\r\n    listar();\r\n  };\r\n\r\n  useEffect(() => {\r\n    // listar();\r\n    getServiciosWithSpecialityName().then((data) => {\r\n      setServicios(data);\r\n      console.log(data);\r\n    });\r\n\r\n    getMeses().then((data) => {\r\n      setMeses(data);\r\n      console.log(data);\r\n    });\r\n\r\n    getAniosAcademicos().then((data) => {\r\n      setaniosAcademico(data);\r\n      console.log(data);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"mantenimiento\">\r\n      <header>\r\n        <h2 className=\"title\">\r\n          <Breadcrumb>\r\n            <Breadcrumb.Item>Reporte</Breadcrumb.Item>\r\n            <Breadcrumb.Item>\r\n              Medicos Residentes de otras Especialidades por Periodo\r\n            </Breadcrumb.Item>\r\n          </Breadcrumb>\r\n        </h2>\r\n        <Button\r\n          type=\"dashed\"\r\n          color=\"red\"\r\n          size=\"large\"\r\n          danger\r\n          onClick={exportToPdf}\r\n        >\r\n          <FilePdfTwoTone twoToneColor=\"red\" /> Exportar a PDF\r\n        </Button>\r\n      </header>\r\n      <div className=\"content\">\r\n        <Form layout=\"inline\" style={{ marginBottom: \"20px\" }}>\r\n          <Form.Item label=\"Servicio\">\r\n            <Select\r\n              showSearch\r\n              name=\"service\"\r\n              placeholder=\"Seleccione una Servicio\"\r\n              optionFilterProp=\"children\"\r\n              style={{ width: \"470px\" }}\r\n              value={idService}\r\n              onChange={hanldeSelectService}\r\n              filterOption={(input, option) =>\r\n                option.props.children\r\n                  .toLowerCase()\r\n                  .indexOf(input.toLowerCase()) >= 0\r\n              }\r\n            >\r\n              {servicios.map((data) => (\r\n                <Select.Option key={data.id} value={data.id}>\r\n                  {data.name}\r\n                </Select.Option>\r\n              ))}\r\n            </Select>\r\n          </Form.Item>\r\n          <Form.Item label=\"Periodo\">\r\n            <Select\r\n              showSearch\r\n              name=\"anioAcademico\"\r\n              placeholder=\"Seleccione una Año\"\r\n              optionFilterProp=\"children\"\r\n              value={idAnioAcademico}\r\n              onChange={hanldeSelectAnioAcademico}\r\n              style={{ width: \"150px\" }}\r\n              filterOption={(input, option) => {\r\n                console.log(input);\r\n                console.log(option);\r\n                return (\r\n                  option.props.children[0]\r\n                    .toLowerCase()\r\n                    .indexOf(input.toLowerCase()) >= 0\r\n                );\r\n              }}\r\n            >\r\n              {aniosAcademico.map((data) => (\r\n                <Select.Option key={data.id} value={data.id}>\r\n                  {data.anioInicio} - {data.anioFinal}\r\n                </Select.Option>\r\n              ))}\r\n            </Select>\r\n          </Form.Item>\r\n          <Form.Item>\r\n            <Button type=\"ghost\" onClick={listarByidService}>\r\n              Consultar\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n        <div className=\"table-responsive\">\r\n          {serviciosDoctor.length === 0 ? (\r\n            <Empty />\r\n          ) : (\r\n            <table\r\n              className=\"table table-hover table-striped\"\r\n              border=\"1\"\r\n              style={{ textAlign: \"center\" }}\r\n            >\r\n              <thead>\r\n                <tr>\r\n                  <th style={{ width: \"300px\" }}>Residente</th>\r\n                  <th>Especialidad</th>\r\n                  <th>NIV.</th>\r\n                  <th>AÑO</th>\r\n                  <th>JUL</th>\r\n                  <th>AGO</th>\r\n                  <th>SET</th>\r\n                  <th>OCT</th>\r\n                  <th>NOV</th>\r\n                  <th>DIC</th>\r\n                  <th>ENE</th>\r\n                  <th>FEB</th>\r\n                  <th>MAR</th>\r\n                  <th>ABR</th>\r\n                  <th>MAY</th>\r\n                  <th>JUN</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {serviciosDoctor.map((data, key1) => (\r\n                  <React.Fragment key={data.id}>\r\n                    <tr>\r\n                      <td style={{ width: \"300px\" }}>\r\n                        {data.doctor.name} -{\" \"}\r\n                        {data.doctor.schoolAgreement.school.shortName}\r\n                      </td>\r\n                      <td>{data.doctor.specialty.name}</td>\r\n                      {data.anioAcademicoDelegados.map((data2, key2) => (\r\n                        <React.Fragment key={data2.id}>\r\n                          <td>{data2.anioAcademico.codigo}</td>\r\n                          <td>\r\n                            {data2.anioAcademico.anioInicio} -{\" \"}\r\n                            {data2.anioAcademico.anioFinal}\r\n                          </td>\r\n\r\n                          {data2.servicioDelegados.map((data3, key3) => (\r\n                            <td\r\n                              key={String(\r\n                                data != null && data.id != null ? key1 : data.id\r\n                              )\r\n                                .concat(\r\n                                  String(\r\n                                    data2 != null && data2.id != null\r\n                                      ? key2\r\n                                      : data2.id\r\n                                  )\r\n                                )\r\n                                .concat(\r\n                                  String(\r\n                                    data3 != null && data3.id != null\r\n                                      ? key3\r\n                                      : data3.id\r\n                                  )\r\n                                )}\r\n                            >\r\n                              {data3.servicio != null\r\n                                ? data3.servicio.id == idService &&\r\n                                  data3.servicio != null\r\n                                  ? 1\r\n                                  : null\r\n                                : null}\r\n                              {/* {data3.servicio.id == idService && data3.servicio != null ?  1 : \"\"} */}\r\n                            </td>\r\n                          ))}\r\n                        </React.Fragment>\r\n                      ))}\r\n                    </tr>\r\n                  </React.Fragment>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","F:\\Hospital Almenara\\Front\\almenara-reactapp\\src\\pages\\Reporte\\Servicio\\index.js",["631"],"import { FilePdfTwoTone } from \"@ant-design/icons\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  getServiciosDoctor,\r\n  getServiciosDoctorBySpecialtyId,\r\n  viewPdfServiciosDoctor,\r\n  viewPdfServiciosDoctorFilterSpecialty,\r\n} from \"../../../services/ServicioDoctorService\";\r\nimport { Form, Breadcrumb, Button, Select, Empty } from \"antd\";\r\nimport { getSpecialties } from \"../../../services/SpecialtyService\";\r\n\r\nimport \"../ServicioTableCss.css\";\r\n\r\nexport const ServicioRerporte = () => {\r\n  const [serviciosDoctor, setServiciosDoctor] = useState([]);\r\n  const [specialties, setSpecialties] = useState([]);\r\n  const [filterSpecialtyOn, setfilterSpecialtyOn] = useState(false);\r\n  const [idSpecialty, setIdSpecialty] = useState(null);\r\n\r\n  const listar = () => {\r\n    getServiciosDoctor().then(setServiciosDoctor);\r\n  };\r\n\r\n  const listarByIdSpecialty = (id) => {\r\n    getServiciosDoctorBySpecialtyId(id).then(setServiciosDoctor);\r\n  };\r\n\r\n  const hanldeSelectSpecialty = (e) => {\r\n    setIdSpecialty(e);\r\n    setfilterSpecialtyOn(true);\r\n    listarByIdSpecialty(e);\r\n  };\r\n\r\n  const exportToPdf = () => {\r\n    if (filterSpecialtyOn) {\r\n      viewPdfServiciosDoctorFilterSpecialty(idSpecialty);\r\n    } else {\r\n      viewPdfServiciosDoctor();\r\n    }\r\n  };\r\n\r\n  const clearFilter = () => {\r\n    setfilterSpecialtyOn(false);\r\n    setIdSpecialty(null);\r\n    listar();\r\n  };\r\n\r\n  useEffect(() => {\r\n    listar();\r\n    getSpecialties().then(setSpecialties);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"mantenimiento\">\r\n      <header>\r\n        <h2 className=\"title\">\r\n          <Breadcrumb>\r\n            <Breadcrumb.Item>Reporte</Breadcrumb.Item>\r\n            <Breadcrumb.Item>Servicio Médico</Breadcrumb.Item>\r\n          </Breadcrumb>\r\n        </h2>\r\n        <Button\r\n          type=\"dashed\"\r\n          color=\"red\"\r\n          size=\"large\"\r\n          danger\r\n          onClick={exportToPdf}\r\n        >\r\n          <FilePdfTwoTone twoToneColor=\"red\" /> Exportar a PDF\r\n        </Button>\r\n      </header>\r\n      <div className=\"content\">\r\n        <Form layout=\"inline\" style={{ marginBottom: \"20px\" }}>\r\n          <Form.Item label=\"Filtrar por Especialidad\">\r\n            <Select\r\n              showSearch\r\n              name=\"specialty\"\r\n              placeholder=\"Seleccione una especialidad\"\r\n              optionFilterProp=\"children\"\r\n              style={{ width: \"300px\" }}\r\n              value={idSpecialty}\r\n              onChange={hanldeSelectSpecialty}\r\n              filterOption={(input, option) =>\r\n                option.props.children\r\n                  .toLowerCase()\r\n                  .indexOf(input.toLowerCase()) >= 0\r\n              }\r\n            >\r\n              {specialties.map((data) => (\r\n                <Select.Option key={data.id} value={data.id}>\r\n                  {data.name}\r\n                </Select.Option>\r\n              ))}\r\n            </Select>\r\n          </Form.Item>\r\n          <Form.Item>\r\n            <Button type=\"ghost\" onClick={clearFilter}>\r\n              Limpiar\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n        <div\r\n          className=\"table-responsive\"\r\n          style={{ maxHeight: \"60vh\", overflow: \"auto\" }}\r\n        >\r\n          {serviciosDoctor.length === 0 ? (\r\n            <Empty />\r\n          ) : (\r\n            <table\r\n              className=\"table table-hover table-striped\"\r\n              border=\"1\"\r\n              style={{ textAlign: \"center\" }}\r\n            >\r\n              <thead className=\"tableStick\">\r\n                <tr>\r\n                  <th className=\"stickResidente\" style={{ width: \"300px\" }}>\r\n                    Residente\r\n                  </th>\r\n                  <th className=\"stickEspecialidad\">Especialidad</th>\r\n                  <th>NIV.</th>\r\n                  <th>AÑO</th>\r\n                  <th>JUL</th>\r\n                  <th>AGO</th>\r\n                  <th>SET</th>\r\n                  <th>OCT</th>\r\n                  <th>NOV</th>\r\n                  <th>DIC</th>\r\n                  <th>ENE</th>\r\n                  <th>FEB</th>\r\n                  <th>MAR</th>\r\n                  <th>ABR</th>\r\n                  <th>MAY</th>\r\n                  <th>JUN</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {serviciosDoctor.map((data) => (\r\n                  <React.Fragment key={data.id}>\r\n                    <tr>\r\n                      <td\r\n                        className=\"stickResidente\"\r\n                        rowSpan=\"4\"\r\n                        style={{ width: \"300px\" }}\r\n                      >\r\n                        {data.doctor.name} -{\" \"}\r\n                        {data.doctor.schoolAgreement.school.shortName}\r\n                      </td>\r\n                      <td className=\"stickEspecialidad\" rowSpan=\"4\">\r\n                        {data.doctor.specialty.name}\r\n                      </td>\r\n                    </tr>\r\n                    {data.anioAcademicoDelegados.map((data2) => (\r\n                      <tr key={String(data.id).concat(String(data2.id))}>\r\n                        <td>{data2.anioAcademico.codigo}</td>\r\n                        <td>\r\n                          {data2.anioAcademico.anioInicio} -{\" \"}\r\n                          {data2.anioAcademico.anioFinal}\r\n                        </td>\r\n                        {data2.servicioDelegados.map((data3) => (\r\n                          <td\r\n                            key={String(data.id)\r\n                              .concat(String(data2.id))\r\n                              .concat(String(data3.id))}\r\n                            style={\r\n                              data3.servicio == null\r\n                                ? { background: \"#cca6a1\" }\r\n                                : data3.servicio.id == 1\r\n                                ? { background: \"#abe1ff\" }\r\n                                : {}\r\n                            }\r\n                          >\r\n                            {data3.servicio == null\r\n                              ? \"No definido\"\r\n                              : data3.servicio.name}{\" \"}\r\n                          </td>\r\n                        ))}\r\n                      </tr>\r\n                    ))}\r\n                  </React.Fragment>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","F:\\Hospital Almenara\\Front\\almenara-reactapp\\src\\services\\UserService.js",[],"F:\\Hospital Almenara\\Front\\almenara-reactapp\\src\\services\\ServicioDoctorService.js",["632"],"import clienteAxios from \"../config/clienteAxios\";\r\n\r\nconst getServiciosDoctor = async () => {\r\n  const resp = await clienteAxios.get(\"/servicio-doctor\");\r\n  return resp.data;\r\n};\r\n\r\nconst getServiciosDoctor2 = async () => {\r\n  const resp = await clienteAxios.get(\"/servicio-doctor/vr2\");\r\n  return resp.data;\r\n};\r\n\r\nconst getServiciosDoctorBySpecialtyId = async (id) => {\r\n  const resp = await clienteAxios.get(`/servicio-doctor/${id}`);\r\n  return resp.data;\r\n};\r\n\r\nconst getServiciosDoctorByServiceId = async (id) => {\r\n  const resp = await clienteAxios.get(`/servicio-doctor/${id}`);\r\n  return resp.data;\r\n};\r\n\r\nconst viewPdfServiciosDoctor = async () => {\r\n  await clienteAxios\r\n    .get(\"/servicio-doctor/pdf\", { responseType: \"blob\" })\r\n    .then((resp) => {\r\n      const file = new Blob([resp.data], { type: \"application/pdf\" });\r\n      const fileURL = URL.createObjectURL(file);\r\n      window.open(fileURL);\r\n    });\r\n};\r\n\r\nconst viewPdfServiciosDoctorFilterSpecialty = async (id) => {\r\n  await clienteAxios\r\n    .get(`/servicio-doctor/pdf/${id}`, { responseType: \"blob\" })\r\n    .then((resp) => {\r\n      const file = new Blob([resp.data], { type: \"application/pdf\" });\r\n      const fileURL = URL.createObjectURL(file);\r\n      window.open(fileURL);\r\n    });\r\n};\r\n\r\n\r\n\r\n\r\n\r\nconst viewPdfServiciosDoctor2 = async () => {\r\n  await clienteAxios\r\n    .get(\"/servicio-doctor/vr2/pdf\", { responseType: \"blob\" })\r\n    .then((resp) => {\r\n      const file = new Blob([resp.data], { type: \"application/pdf\" });\r\n      const fileURL = URL.createObjectURL(file);\r\n      window.open(fileURL);\r\n    });\r\n};\r\n\r\nconst viewPdfServiciosDoctorFilterSpecialty2 = async (id) => {\r\n  await clienteAxios\r\n    .get(`/servicio-doctor/vr2/pdf/${id}`, { responseType: \"blob\" })\r\n    .then((resp) => {\r\n      const file = new Blob([resp.data], { type: \"application/pdf\" });\r\n      const fileURL = URL.createObjectURL(file);\r\n      window.open(fileURL);\r\n    });\r\n};\r\n\r\n\r\n\r\n\r\n\r\nconst getServiciosDoctorByAnioAndServicio = async (idServicio, idAnio) => {\r\n  console.log(idServicio, idAnio);\r\n  const resp = await clienteAxios.get(\r\n    `/servicio-doctor/report/${idServicio}/${idAnio}`\r\n  );\r\n  return resp.data;\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst getServiciosDoctorByAnioAndServicio2 = async (idServicio, idAnio) => {\r\n  console.log(idServicio, idAnio);\r\n  const resp = await clienteAxios.get(\r\n    `/servicio-doctor/report2/${idServicio}/${idAnio}`\r\n  );\r\n  return resp.data;\r\n};\r\n\r\nconst viewPdfServiciosDoctorByAnioAndServicio = async (idAnio, idServicio) => {\r\n  await clienteAxios\r\n    .get(\r\n      `/servicio-doctor/pdf/medicos-residentes-otras-especialidades-por-periodo/${idServicio}/${idAnio}`,\r\n      { responseType: \"blob\" }\r\n    )\r\n    .then((resp) => {\r\n      const file = new Blob([resp.data], { type: \"application/pdf\" });\r\n      const fileURL = URL.createObjectURL(file);\r\n      window.open(fileURL);\r\n    });\r\n};\r\n\r\nexport {\r\n  getServiciosDoctor,\r\n  getServiciosDoctor2,\r\n  getServiciosDoctorBySpecialtyId,\r\n  viewPdfServiciosDoctor,\r\n  viewPdfServiciosDoctorFilterSpecialty,\r\n  getServiciosDoctorByAnioAndServicio,\r\n  getServiciosDoctorByAnioAndServicio2,\r\n  viewPdfServiciosDoctorByAnioAndServicio,\r\n  viewPdfServiciosDoctor2,\r\n  viewPdfServiciosDoctorFilterSpecialty2\r\n};\r\n","F:\\Hospital Almenara\\Front\\almenara-reactapp\\src\\services\\SchoolService.js",[],"F:\\Hospital Almenara\\Front\\almenara-reactapp\\src\\services\\SpecialtyService.js",[],"F:\\Hospital Almenara\\Front\\almenara-reactapp\\src\\services\\ServicioDelegadoService.js",[],"F:\\Hospital Almenara\\Front\\almenara-reactapp\\src\\services\\DoctorService.js",[],"F:\\Hospital Almenara\\Front\\almenara-reactapp\\src\\services\\ServicioService.js",[],"F:\\Hospital Almenara\\Front\\almenara-reactapp\\src\\services\\RoleService.js",[],"F:\\Hospital Almenara\\Front\\almenara-reactapp\\src\\services\\AnioAcademicoService.js",[],"F:\\Hospital Almenara\\Front\\almenara-reactapp\\src\\services\\MesService.js",[],"F:\\Hospital Almenara\\Front\\almenara-reactapp\\src\\services\\NivelService.js",[],"F:\\Hospital Almenara\\Front\\almenara-reactapp\\src\\services\\CampusService.js",[],"F:\\Hospital Almenara\\Front\\almenara-reactapp\\src\\services\\TeamService.js",[],"F:\\Hospital Almenara\\Front\\almenara-reactapp\\src\\pages\\Mantenimiento\\Medico\\ImportFromExcel.js",["633","634","635","636","637","638","639","640","641","642","643","644","645","646","647","648","649","650"],"import React, { Component } from \"react\";\r\nimport { Modal, Button } from \"antd\";\r\nimport { OutTable, ExcelRenderer } from \"react-excel-renderer\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Input,\r\n  InputGroup,\r\n  InputGroupAddon,\r\n  FormGroup,\r\n  Label,\r\n  Fade,\r\n  FormFeedback,\r\n  Card,\r\n} from \"reactstrap\";\r\nimport * as Yup from \"yup\";\r\nimport moment from \"moment\";\r\nimport \"./ImportFromExcel.css\";\r\n\r\nconst validationDoctorData = Yup.object().shape({\r\n  document: Yup.string()\r\n    .trim()\r\n    .matches(/^[0-9]*$/, \"Solo se admiten números.\")\r\n    .length(8, \"Se requiere 8 dígitos.\")\r\n    .required(\"DNI requerido.\"),\r\n  paternalSurname: Yup.string()\r\n    .trim()\r\n    .matches(/^[ñÑa-zA-ZáéíóúÁÉÍÓÚ ]*$/, \"Solo se admiten letras.\")\r\n    .required(\"Apellido Paterno requerido.\"),\r\n  maternalSurname: Yup.string()\r\n    .trim()\r\n    .matches(/^[ñÑa-zA-ZáéíóúÁÉÍÓÚ ]*$/, \"Solo se admiten letras.\")\r\n    .required(\"Apellido Materno requerido.\"),\r\n  name: Yup.string()\r\n    .trim()\r\n    .matches(/^[ñÑa-zA-ZáéíóúÁÉÍÓÚ ]*$/, \"Solo se admiten letras.\")\r\n    .required(\"Nombre requerido.\"),\r\n  schoolAgreement: Yup.object().shape({\r\n    id: Yup.number().nullable().required(\"Universidad requerida\"),\r\n  }),\r\n  specialty: Yup.object().shape({\r\n    id: Yup.number().nullable().required(\"Especialidad requerida\"),\r\n  }),\r\n  plaza: Yup.object().shape({\r\n    id: Yup.number().nullable().required(\"Plaza requerida.\"),\r\n  }),\r\n  campus: Yup.object().shape({\r\n    id: Yup.number().nullable().required(\"Sede requerida.\"),\r\n  }),\r\n  // team: Yup.object().shape({\r\n  //   id: Yup.number().nullable().required(\"Grupo requerido.\"),\r\n  // }),\r\n  address: Yup.string()\r\n    .trim()\r\n    // .matches(\r\n    //   /^[a-zA-Z\\s](\\d)?$/,\r\n    //   \"No se admiten caracteres especiales.\"\r\n    // ),\r\n    .min(5, \"El campo debe tener al menos 5 caracteres.\")\r\n    .required(\"Dirección es un campo requerido\"),\r\n  cmp: Yup.string()\r\n    .trim()\r\n    .matches(/^[0-9]*$/, \"Solo se admiten números.\")\r\n    .min(5, \"Solo se admite min. 5 dígitos.\")\r\n    .max(6, \"Solo se admite máx. 6 dígitos.\")\r\n    .required(\"CMP requerido\"),\r\n  email: Yup.string()\r\n    .trim()\r\n    .email(\"Formato no válido. (ej. correo@example.com)\")\r\n    .required(\"Correo requerido.\"),\r\n  phone: Yup.string()\r\n    .length(9, \"Se requiere 9 dígitos.\")\r\n    .required(\"N° Celular requerido.\"),\r\n});\r\n\r\nclass ImportFromExcel extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isOpen: false,\r\n      dataLoaded: false,\r\n      isFormInvalid: false,\r\n      rows: null,\r\n      cols: null,\r\n    };\r\n    this.fileHandler = this.fileHandler.bind(this);\r\n    this.toggle = this.toggle.bind(this);\r\n    this.openFileBrowser = this.openFileBrowser.bind(this);\r\n    this.renderFile = this.renderFile.bind(this);\r\n    this.fileInput = React.createRef();\r\n    this.saveImportedData = this.saveImportedData.bind(this);\r\n    this.converToDoctor = this.converToDoctor.bind(this);\r\n    this.excelDateToJSDate = this.excelDateToJSDate.bind(this);\r\n    this.cleanState = this.cleanState.bind(this);\r\n  }\r\n\r\n  renderFile = (fileObj) => {\r\n    //just pass the fileObj as parameter\r\n    ExcelRenderer(fileObj, (err, resp) => {\r\n      if (err) {\r\n        console.log(err);\r\n      } else {\r\n        this.setState({\r\n          dataLoaded: true,\r\n          cols: resp.cols,\r\n          rows: resp.rows,\r\n        });\r\n\r\n        // console.log(resp.rows);\r\n      }\r\n    });\r\n  };\r\n\r\n  fileHandler = (event) => {\r\n    if (event.target.files.length) {\r\n      let fileObj = event.target.files[0];\r\n      let fileName = fileObj.name;\r\n\r\n      //check for file extension and pass only if it is .xlsx and display error message otherwise\r\n      if (fileName.slice(fileName.lastIndexOf(\".\") + 1) === \"xlsx\") {\r\n        this.setState({\r\n          uploadedFileName: fileName,\r\n          isFormInvalid: false,\r\n        });\r\n        this.renderFile(fileObj);\r\n      } else {\r\n        this.setState({\r\n          isFormInvalid: true,\r\n          uploadedFileName: \"\",\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  toggle() {\r\n    this.setState({\r\n      isOpen: !this.state.isOpen,\r\n    });\r\n  }\r\n\r\n  openFileBrowser = () => {\r\n    this.fileInput.current.click();\r\n  };\r\n\r\n  cleanState() {\r\n    this.setState({\r\n      dataLoaded: false,\r\n      cols: null,\r\n      rows: null,\r\n      uploadedFileName: null,\r\n    });\r\n  }\r\n\r\n  converToDoctor(row) {\r\n    return {\r\n      id: null,\r\n      document: row[1] == \"\" || row[1] == null ? \"\" : row[1].toString(),\r\n      name: row[4] == \"\" || row[4] == null ? \"\" : row[4],\r\n      paternalSurname: row[2] == \"\" || row[2] == null ? \"\" : row[2],\r\n      maternalSurname: row[3] == \"\" || row[3] == null ? \"\" : row[3],\r\n      plaza: {\r\n        id: row[7].trim().toLowerCase() == \"libre\" ? 1 : 2,\r\n      },\r\n      campus: {\r\n        id: row[8],\r\n      },\r\n      birthDate:\r\n        row[9] == \"\" || row[9] == null ? null : this.excelDateToJSDate(row[9]),\r\n      //\"birthDate\" : null,\r\n      address: row[10] == \"\" || row[10] == null ? null : row[10],\r\n      cmp: row[11] == \"\" || row[11] == null ? null : row[11].toString(),\r\n      email: row[12] == \"\" || row[12] == null ? \"\" : row[12],\r\n      phone: row[13] == \"\" || row[13] == null ? \"\" : row[13].toString(),\r\n      schoolAgreement: {\r\n        school: {\r\n          shortName: row[5] == \"\" || row[5] == null ? null : row[5].toString(),\r\n        },\r\n      },\r\n      specialty: {\r\n        id: row[6],\r\n      },\r\n      status: true,\r\n      team: null,\r\n      nivel: {\r\n        id: 1,\r\n      },\r\n      registeredAt:\r\n        row[14] == \"\" || row[14] == null\r\n          ? null\r\n          : this.excelDateToJSDate(row[14]),\r\n    };\r\n  }\r\n\r\n  excelDateToJSDate(serial) {\r\n    var utc_days = Math.floor(serial - 25569);\r\n    var utc_value = utc_days * 86400;\r\n    var date_info = new Date(utc_value * 1000);\r\n\r\n    var fractional_day = serial - Math.floor(serial) + 0.0000001;\r\n\r\n    var total_seconds = Math.floor(86400 * fractional_day);\r\n\r\n    var seconds = total_seconds % 60;\r\n\r\n    total_seconds -= seconds;\r\n\r\n    var hours = Math.floor(total_seconds / (60 * 60));\r\n    var minutes = Math.floor(total_seconds / 60) % 60;\r\n\r\n    return new Date(\r\n      date_info.getFullYear(),\r\n      date_info.getMonth(),\r\n      date_info.getDate() + 1,\r\n      hours,\r\n      minutes,\r\n      seconds\r\n    );\r\n  }\r\n\r\n  saveImportedData = () => {\r\n    let lstDoctors = this.state.rows;\r\n    lstDoctors = lstDoctors.filter((doctor, key) => key > 0);\r\n    let transformedArr = lstDoctors.map(this.converToDoctor);\r\n    console.log(transformedArr);\r\n    this.props\r\n      .onImportdata(transformedArr)\r\n      .then((resp) => {\r\n        console.log(resp);\r\n        this.cleanState();\r\n        this.props.onListDoctors();\r\n        this.props.onOpenNotification(\r\n          \"Datos importados correctamente\",\r\n          \"\",\r\n          \"topRight\"\r\n        );\r\n        this.props.onVisibleModal();\r\n      })\r\n      .catch(function (err) {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Row>\r\n          <Col sm=\"4\">\r\n            {this.state.uploadedFileName ? (\r\n              <h3>Cargando archivo \"{this.state.uploadedFileName}\"</h3>\r\n            ) : (\r\n              <h3>Cargar Archivo Excel</h3>\r\n            )}\r\n          </Col>\r\n          <Col sm=\"4\">\r\n            <InputGroup>\r\n              <InputGroupAddon addonType=\"prepend\">\r\n                <Button\r\n                  onClick={this.openFileBrowser.bind(this)}\r\n                  type=\"primary\"\r\n                  size=\"large\"\r\n                >\r\n                  <i></i> Buscar...\r\n                </Button>\r\n                {this.state.dataLoaded && (\r\n                  <Button\r\n                    onClick={this.saveImportedData.bind(this)}\r\n                    type=\"primary\"\r\n                    size=\"large\"\r\n                    style={{ marginLeft: \"20px\" }}\r\n                  >\r\n                    <i></i>Guardar datos\r\n                  </Button>\r\n                )}\r\n                <input\r\n                  type=\"file\"\r\n                  hidden\r\n                  onChange={this.fileHandler.bind(this)}\r\n                  ref={this.fileInput}\r\n                  onClick={(event) => {\r\n                    event.target.value = null;\r\n                  }}\r\n                />\r\n              </InputGroupAddon>\r\n              <Input\r\n                type=\"text\"\r\n                value={this.state.uploadedFileName}\r\n                readOnly\r\n                invalid={this.state.isFormInvalid}\r\n                style={{ display: \"none\" }}\r\n              />\r\n              <FormFeedback>\r\n                <Fade\r\n                  in={this.state.isFormInvalid}\r\n                  tag=\"h6\"\r\n                  style={{ fontStyle: \"italic\" }}\r\n                >\r\n                  ! Selecciona solo un archivo .xlsx !\r\n                </Fade>\r\n              </FormFeedback>\r\n            </InputGroup>\r\n          </Col>\r\n        </Row>\r\n        {this.state.dataLoaded && (\r\n          <div>\r\n            <Card body outline color=\"secondary\" className=\"restrict-card\">\r\n              <OutTable\r\n                data={this.state.rows}\r\n                columns={this.state.cols}\r\n                tableClassName=\"ExcelTable2007\"\r\n                tableHeaderRowClass=\"heading\"\r\n              />\r\n            </Card>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ImportFromExcel;\r\n","F:\\Hospital Almenara\\Front\\almenara-reactapp\\src\\services\\SchoolAgreementService.js",[],"F:\\Hospital Almenara\\Front\\almenara-reactapp\\src\\services\\PlazaService.js",[],"F:\\Hospital Almenara\\Front\\almenara-reactapp\\src\\components\\Grupos\\TableMesList.js",["651","652","653","654","655","656","657","658","659","660","661","662","663","664","665","666","667","668","669","670","671","672","673"],"import React, { useEffect, useState } from \"react\";\r\nimport { FilePdfTwoTone, EditOutlined } from \"@ant-design/icons\";\r\nimport { Button, Form, Select } from \"antd\";\r\nimport { TableMes } from \"./TableMes\";\r\nimport { findAllTipos } from \"../../services/DoctorService\";\r\nimport { getAllAnioAcademico } from \"../../services/AnioAcademicoService\";\r\nimport { getAllMesDiaFiltrar, viewPdfServicioMesDia } from \"../../services/MesDiaService\";\r\nimport { getTeams, obtenerGruposPorTipo } from \"../../services/TeamService\";\r\n\r\nlet aniosAcademicos = [];\r\nlet teams = [];\r\n\r\nlet periodoData = [\r\n  {\r\n    numMes: 7,\r\n    nameMes: \"Julio\",\r\n    year: 2019,\r\n  },\r\n  {\r\n    numMes: 8,\r\n    nameMes: \"Agosto\",\r\n    year: 2019,\r\n  },\r\n  {\r\n    numMes: 9,\r\n    nameMes: \"Septiembre\",\r\n    year: 2019,\r\n  },\r\n  {\r\n    numMes: 10,\r\n    nameMes: \"Octubre\",\r\n    year: 2019,\r\n  },\r\n  {\r\n    numMes: 11,\r\n    nameMes: \"Noviembre\",\r\n    year: 2019,\r\n  },\r\n  {\r\n    numMes: 12,\r\n    nameMes: \"Diciembre\",\r\n    year: 2019,\r\n  },\r\n  {\r\n    numMes: 1,\r\n    nameMes: \"Enero\",\r\n    year: 2020,\r\n  },\r\n  {\r\n    numMes: 2,\r\n    nameMes: \"Febrero\",\r\n    year: 2020,\r\n  },\r\n  {\r\n    numMes: 3,\r\n    nameMes: \"Marzo\",\r\n    year: 2020,\r\n  },\r\n  {\r\n    numMes: 4,\r\n    nameMes: \"Abril\",\r\n    year: 2020,\r\n  },\r\n  {\r\n    numMes: 5,\r\n    nameMes: \"Mayo\",\r\n    year: 2020,\r\n  },\r\n  {\r\n    numMes: 6,\r\n    nameMes: \"Junio\",\r\n    year: 2020,\r\n  },\r\n];\r\n\r\nexport const TableMesList = () => {\r\n  const [numMes, setNumMes] = useState(null);\r\n  const [periodo, setPeriodo] = useState([]);\r\n\r\n  const [lstPeriodo, setLstPeriodo] = useState([]);\r\n  \r\n  const [idAnio, setIdAnio] = useState(null);   \r\n\r\n\r\n  const [placeCategoria, setPlaceCategoria] = useState('Seleccione una Categoría');\r\n  const [idTeam, setIdTeam] = useState(null);\r\n  const [categoriaId, setCategoria] = useState(null);  \r\n  const [categoriaslst, setCategoriaslst] = useState([]);\r\n  \r\n  const [anioAcademicolst, setAnioAcademicolst] = useState([]);\r\n  const [anioAcademicoCombo, setAnioAcademicoCombo] = useState([]);\r\n\r\n  const [mes, setMes] = useState(-5);\r\n  const [anio, setAnio] = useState(-5);\r\n  const [cate, setCate] = useState(-5);  \r\n\r\n  // const [filter, setFilter] = useState([]);\r\n\r\n  const clearFilter = () => { \r\n    setMes(-5);\r\n    var lstMain = [];\r\n    // setLstPeriodo(lstMain);    \r\n  };\r\n\r\n  function clear() {\r\n    var lstMain = [];\r\n    // setLstPeriodo(lstMain);    \r\n  }\r\n  \r\n  const exportarPeriodo = () => { \r\n    viewPdfServicioMesDia(lstPeriodo);    \r\n  };  \r\n\r\n  const handleSelectMes = (e) => {\r\n\r\n    setNumMes(e);\r\n    setPeriodo(periodoData.filter((data) => (data.numMes === e)));\r\n    setMes(e);\r\n    var lst = [];\r\n    \r\n    if(anio != -5 && anio != null  && e != null && cate != -5 && cate != null)\r\n    {\r\n      getAllMesDiaFiltrar(anio, e, cate).then( x => \r\n        {            \r\n        console.log(x);\r\n          lst.push(x[0]);\r\n        setLstPeriodo(lst);\r\n      }).catch(err => setLstPeriodo([]));\r\n    }    \r\n    setLstPeriodo(lst);\r\n  };\r\n\r\n  const handleSelectAnioAcademico = (e) => {\r\n   \r\n    setIdAnio(e);\r\n    setAnioAcademicoCombo(anioAcademicolst.filter((data) => (data.id === e)));\r\n    setAnio(e);\r\n\r\n\r\n    if(cate != -5 && anio != -5 ){\r\n\r\n      if(mes == -5){\r\n        var lst = [];\r\n        var itemsProcessed = 0;\r\n        periodoData.forEach( per => {\r\n          getAllMesDiaFiltrar(e, per.numMes, cate).then( x => {\r\n            lst.push(x[0]);\r\n            itemsProcessed++;\r\n            if(itemsProcessed === periodoData.length) {\r\n              lst.sort(function(a, b) {\r\n                var keyA = a.anio,\r\n                  keyB = b.anio;\r\n                if (keyA < keyB) return -1;\r\n                if (keyA > keyB) return 1;\r\n                return 0;\r\n              });\r\n\r\n              \r\n              setLstPeriodo(lst);\r\n            }\r\n        \r\n          }).catch(err => setLstPeriodo([]));\r\n        })\r\n      }else{\r\n        if(cate != -5 && anio != -5 && anio != null && e != null && cate != null)\r\n        {\r\n          getAllMesDiaFiltrar(e, mes, cate).then( x => {\r\n            lst = [];\r\n            lst.push(x[0]);\r\n              setLstPeriodo(lst);   \r\n            \r\n          }).catch(err => setLstPeriodo([]));     ;\r\n        }\r\n      }\r\n    };\r\n    }\r\n\r\n\r\n  const hanldeSelectCategoria = (e) => {\r\n    \r\n      teams = [];\r\n      setCategoria(e);\r\n      cargarListado(e);         \r\n      setCate(e);  \r\n      if(anio != null && e != null && mes != null && cate != -5 && anio != -5 && mes != -5)\r\n      {\r\n        obtenerGruposPorTipo(e).then((resp) => {\r\n          resp.forEach((data) => {\r\n            teams.push(data.id);\r\n          });\r\n        });\r\n\r\n         \r\n        if(mes == -5){\r\n          var lst = [];\r\n          var itemsProcessed = 0;\r\n          periodoData.forEach( per => {\r\n            getAllMesDiaFiltrar(anio, per.numMes, e).then( x => {\r\n              lst.push(x[0]);\r\n              itemsProcessed++;\r\n              if(itemsProcessed === periodoData.length) {\r\n        \r\n\r\n                lst.sort(function(a, b) {\r\n                  var keyA = a.anio,\r\n                    keyB = b.anio;\r\n                  if (keyA < keyB) return -1;\r\n                  if (keyA > keyB) return 1;\r\n                  return 0;\r\n                });\r\n\r\n                setLstPeriodo(lst);\r\n              }\r\n            }).catch(err => setLstPeriodo([]));     ;\r\n            \r\n          });        \r\n\r\n        }else{          \r\n            getAllMesDiaFiltrar(anio, mes, e).then( x => {\r\n              lst = [];\r\n              lst.push(x[0]);\r\n              setLstPeriodo(lst);\r\n            }).catch(err => setLstPeriodo([]));      \r\n        }\r\n      }\r\n};\r\n\r\nconst cargarListado = (cate) => {\r\n\r\n\r\n\r\n};\r\n\r\n  useEffect(() => {\r\n\r\n\r\n  \r\n  \r\n\r\n    getAllAnioAcademico().then( x => {\r\n      setAnioAcademicolst(x);      \r\n    }); \r\n\r\n    setPeriodo([]);\r\n\r\n    findAllTipos().then( x =>\r\n      {  \r\n        setCategoriaslst(x);\r\n      }\r\n    );\r\n\r\n    obtenerGruposPorTipo(1).then((resp) => {\r\n      resp.forEach((data) => {\r\n        teams.push(data.id);\r\n      });      \r\n    });\r\n\r\n\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Form\r\n        layout=\"vertical\"\r\n        style={{\r\n          marginBottom: \"20px\",\r\n          display: \"flex\",\r\n          alignItems: \"flex-end\",\r\n        }}\r\n      >\r\n        <Form.Item label=\"Año Académico\">\r\n        <Select\r\n            showSearch\r\n            name=\"idAnio\"\r\n            placeholder=\"Seleccione un año\"\r\n            optionFilterProp=\"children\"\r\n            style={{ width: \"300px\",  marginRight: '10px' }}\r\n            value={idAnio}\r\n            \r\n            onChange={handleSelectAnioAcademico}\r\n            filterOption={(input, option) =>\r\n              option.props.children\r\n                .toLowerCase()\r\n                .indexOf(input.toLowerCase()) >= 0\r\n            }\r\n          >\r\n            {anioAcademicolst.map((data) => (\r\n              <Select.Option key={data.id} value={data.id}>\r\n                {data.anioInicio + \" - \" + data.anioFinal} \r\n              </Select.Option>\r\n            ))}\r\n          </Select>\r\n        </Form.Item>\r\n\r\n        <Form.Item label=\"Categoría\">\r\n            <Select\r\n              showSearch\r\n              name=\"cateogria\"\r\n              placeholder= {placeCategoria}\r\n              optionFilterProp=\"children\"\r\n              style={{ width: \"300px\"}}\r\n              value={categoriaId}\r\n              onChange={hanldeSelectCategoria}\r\n             \r\n              filterOption={(input, option) =>\r\n                option.props.children\r\n                  .toLowerCase()\r\n                  .indexOf(input.toLowerCase()) >= 0\r\n              }\r\n            >\r\n                {categoriaslst.map((data) => (\r\n                <Select.Option key={data.name} value={data.id} >\r\n                {data.name}\r\n                </Select.Option>\r\n                ))}\r\n            </Select>\r\n          </Form.Item>\r\n\r\n        <Form.Item label=\"Mes\">\r\n          <Select\r\n            showSearch\r\n            name=\"numMes\"\r\n            placeholder=\"Seleccione una mes\"\r\n            optionFilterProp=\"children\"\r\n            style={{ width: \"300px\",  marginRight: '10px' }}\r\n            value={numMes}\r\n            \r\n            onChange={handleSelectMes}\r\n            filterOption={(input, option) =>\r\n              option.props.children\r\n                .toLowerCase()\r\n                .indexOf(input.toLowerCase()) >= 0\r\n            }\r\n          >\r\n            {periodoData.map((data) => (\r\n              <Select.Option key={data.numMes} value={data.numMes}>\r\n                {data.nameMes}\r\n              </Select.Option>\r\n            ))}\r\n          </Select>\r\n        </Form.Item>\r\n\r\n        <Form.Item style={{ marginLeft: \"10px\" }}>\r\n\r\n        <Button\r\n          type=\"dashed\"\r\n          color=\"red\"\r\n          size=\"large\"\r\n          danger\r\n          onClick={exportarPeriodo}\r\n        >\r\n          <FilePdfTwoTone twoToneColor=\"red\" /> Exportar a PDF\r\n        </Button>\r\n\r\n        </Form.Item>\r\n      </Form>\r\n      <div>      \r\n\r\n       {lstPeriodo.map((data) => (         \r\n            <TableMes key={data.key} dataTabla={data} listaGrupos={teams}>\r\n            </TableMes>\r\n        ))} \r\n\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n\r\n  \r\n\r\n};\r\n","F:\\Hospital Almenara\\Front\\almenara-reactapp\\src\\components\\Sidebar\\index.js",["674","675"],"import React, { useContext, useState } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { FileTextFilled, ToolFilled, DashboardFilled } from \"@ant-design/icons\";\r\nimport { AuthContext } from \"../../auth/AuthContext\";\r\nimport LogoHospital from \"../../images/logo_essalud.jpg\";\r\nimport \"./Sidebar.css\";\r\n\r\nexport const Sidebar = () => {\r\n  const [isAdmin, setIsAdmin] = useState(false);\r\n  const { user } = useContext(AuthContext);\r\n\r\n  const adminMenu = () => {\r\n    if (user.roles.includes(\"ROLE_ADMIN\")) {\r\n      return (\r\n        <React.Fragment>\r\n          <ul>\r\n            <li>\r\n              <NavLink to=\"/inicio\" activeClassName=\"active\">\r\n                • Inicio\r\n              </NavLink>\r\n            </li>\r\n            <li>\r\n              <span className=\"title\">\r\n                <DashboardFilled /> PROCESOS\r\n              </span>\r\n            </li>\r\n            <li>\r\n              <NavLink to=\"/proceso/asignar-servicio\" activeClassName=\"active\">\r\n                • Asignar Servicio\r\n              </NavLink>\r\n            </li>\r\n\r\n            <li>\r\n              <NavLink\r\n                to=\"/proceso/asignar-servicio-2\"\r\n                activeClassName=\"active\"\r\n              >\r\n                • Asignar Servicio 2\r\n              </NavLink>\r\n            </li>\r\n\r\n            <li>\r\n              <NavLink to=\"/proceso/asignar-convenio\" activeClassName=\"active\">\r\n                • Asignar Convenio\r\n              </NavLink>\r\n            </li>\r\n            <li>\r\n              <NavLink to=\"/mantenimiento/grupo\" activeClassName=\"active\">\r\n                • Asignar Médicos a Grupos\r\n              </NavLink>\r\n            </li>\r\n            <li>\r\n              <NavLink to=\"/proceso/asignar-grupo\" activeClassName=\"active\">\r\n                • Grupo de guardia en emergencia\r\n              </NavLink>\r\n            </li>\r\n            <li>\r\n              <span className=\"title\">\r\n                <ToolFilled /> MANTENIMIENTOS\r\n              </span>\r\n            </li>\r\n            <li>\r\n              <NavLink to=\"/mantenimiento/universidad\" activeClassName=\"active\">\r\n                • Universidad\r\n              </NavLink>\r\n            </li>\r\n            <li>\r\n              <NavLink\r\n                to=\"/mantenimiento/especialidad\"\r\n                activeClassName=\"active\"\r\n              >\r\n                • Especialidad\r\n              </NavLink>\r\n            </li>\r\n            <li>\r\n              <NavLink to=\"/mantenimiento/medico\" activeClassName=\"active\">\r\n                • Médico\r\n              </NavLink>\r\n            </li>\r\n            <li>\r\n              <NavLink to=\"/mantenimiento/medico2\" activeClassName=\"active\">\r\n                • Médico2\r\n              </NavLink>\r\n            </li>\r\n\r\n         \r\n            <li>\r\n              <NavLink to=\"/mantenimiento/servicio\" activeClassName=\"active\">\r\n                • Servicio\r\n              </NavLink>\r\n            </li>\r\n            <li>\r\n              <NavLink\r\n                to=\"/mantenimiento/especialidad-servicio\"\r\n                activeClassName=\"active\"\r\n              >\r\n                • Asignar Servicios a Especialidad\r\n              </NavLink>\r\n            </li>\r\n            <li>\r\n              <NavLink to=\"/mantenimiento/grupomant\" activeClassName=\"active\">\r\n                • Grupos\r\n              </NavLink>\r\n            </li>\r\n\r\n            <li>\r\n              <NavLink to=\"/mantenimiento/usuario\">• Usuarios</NavLink>\r\n            </li>\r\n          </ul>\r\n        </React.Fragment>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"left\" style={{ overflowY: \"scroll\" }}>\r\n      <div className=\"logo\">\r\n        <img src={LogoHospital} alt=\"Logo Harrison\" />\r\n        <h2>Hospital Almenara</h2>\r\n      </div>\r\n      {adminMenu()}\r\n      <ul>\r\n        <li>\r\n          <span className=\"title\">\r\n            <FileTextFilled /> REPORTES\r\n          </span>\r\n        </li>\r\n        <li>\r\n          <NavLink to=\"/reporte/medico\" activeClassName=\"active\">\r\n            • Médico\r\n          </NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink to=\"/reporte/especialidad\" activeClassName=\"active\">\r\n            • Especialidad\r\n          </NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink to=\"/reporte/servicio\" activeClassName=\"active\">\r\n            • Servicio\r\n          </NavLink>\r\n        </li>\r\n\r\n        <li>\r\n          <NavLink to=\"/reporte/servicio2\" activeClassName=\"active\">\r\n            • Servicio 2\r\n          </NavLink>\r\n        </li>\r\n\r\n\r\n        <li>\r\n          <NavLink\r\n            to=\"/reporte/servicio/relacion-medicos-residentes-otras-especialidades-por-periodo\"\r\n            activeClassName=\"active\"\r\n          >\r\n            • Medicos Residentes de otras Especialidades por Periodo\r\n          </NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink\r\n            to=\"/reporte/servicio/relacion-medicos-residentes-otras-especialidades-por-periodo/vr2\"\r\n            activeClassName=\"active\"\r\n          >\r\n            • Medicos Residentes de otras Especialidades por Periodo 2\r\n          </NavLink>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n","F:\\Hospital Almenara\\Front\\almenara-reactapp\\src\\components\\Header\\index.js",[],"F:\\Hospital Almenara\\Front\\almenara-reactapp\\src\\services\\MesDiaService.js",[],"F:\\Hospital Almenara\\Front\\almenara-reactapp\\src\\components\\Grupos\\TableMes.js",["676","677","678","679","680","681","682"],"import { Divider } from \"antd\";\r\nimport React from \"react\";\r\nimport { SelectTd } from \"./SelectTd\";\r\n\r\n\r\n\r\n\r\n\r\nlet diasSemana = [\r\n  \"Domingo\",\r\n  \"Lunes\",\r\n  \"Martes\",\r\n  \"Miércoles\",\r\n  \"Jueves\",\r\n  \"Viernes\",\r\n  \"Sabado\",\r\n];\r\n\r\n\r\nexport const TableMes = ({ dataTabla, listaGrupos}) => {\r\n  console.log(listaGrupos);\r\n  let days = [];\r\n  let daysName = []; \r\n  let agrupado = [];\r\n  let mes = [];\r\n  let turno = [];\r\n  let dia = {};\r\n\r\n  var mesName = '';\r\n  var year = null;\r\n  var llave = 1;\r\n\r\n  var turnosDiurno = [];\r\n  var turnosNocturno = [];\r\n  \r\n  \r\n\r\n  // dataTabla.sort(compare);\r\n\r\n    mesName = dataTabla.mes;\r\n    year = dataTabla.anio;\r\n    turnosDiurno = dataTabla.turnosDiurno.dias;\r\n    turnosNocturno = dataTabla.turnosNocturno.dias;\r\n    llave = dataTabla.key;\r\n\r\n\r\n  return (\r\n    <div>\r\n    \r\n      <Divider orientation=\"left\">\r\n        <h3>\r\n          <b>\r\n            {mesName} - {year}\r\n          </b>\r\n        </h3>\r\n      </Divider> \r\n       <div className=\"table-responsive\">\r\n        <table className=\"table table-hover\" style={{ textAlign: \"center\" }}>\r\n          <thead>\r\n            <tr key={llave}>\r\n              <th key={llave + mesName } rowSpan=\"2\">{mesName}</th>\r\n              {turnosDiurno.map((data) => (\r\n                data.diaNombre === \"D\" || data === \"S\" ?\r\n                <th key={llave + data.idReg + ''} style={{color: \"red\"}}>{String(data.diaNombre)}</th> :\r\n                <th key={llave + data.idReg + ''}>{String(data.diaNombre)}</th> \r\n              ))}\r\n            </tr>\r\n            <tr>\r\n              {turnosDiurno.map((data) => (\r\n                <th key={llave + data.idReg + ''}>{data.idDia}</th>\r\n              ))}\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr key={llave + 99}>\r\n              <td>GUARDIA DIURNA</td>\r\n              {turnosDiurno.map((data) =>\r\n                data.diaNombre === \"D\" || data.diaNombre === \"S\" ? (\r\n                  <SelectTd key={llave + data.idReg + ''} isBgGray={true} dia={data} teamslist={listaGrupos} />\r\n                  ) : (\r\n                    <SelectTd  key={llave + data.idReg + ''} isBgGray={false} dia={data} teamslist={listaGrupos} />\r\n                )\r\n              )}\r\n            </tr>\r\n            <tr>\r\n              <td>GUARDIA NOCTURNA</td>\r\n              {turnosNocturno.map((data) =>\r\n                data.diaNombre === \"D\" || data.diaNombre === \"S\" ? (\r\n                  <SelectTd key={llave + data.idReg + ''} isBgGray={true} dia={data} teamslist={listaGrupos} />\r\n                ) : (\r\n                  <SelectTd key={llave + data.idReg + ''} isBgGray={false} dia={data} teamslist={listaGrupos} />\r\n                )\r\n              )}\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div> \r\n    </div>\r\n  );\r\n};\r\n\r\n","F:\\Hospital Almenara\\Front\\almenara-reactapp\\src\\components\\Grupos\\SelectTd.js",["683","684","685","686"],"import React, { useEffect, useState } from \"react\";\r\nimport {  actualuzarMesDia } from \"../../services/MesDiaService\";\r\n\r\nimport {\r\n  notification\r\n} from \"antd\";\r\n\r\nlet teams = [];\r\n\r\nexport const SelectTd = ({ isBgGray, dia, teamslist}) => {\r\n  const [teamId, setTeamId] = useState();\r\n  const [styleTd, setStyleTd] = useState({});\r\n  const [teamslst, setTeamslst] = useState([]);\r\n  \r\n\r\n  \r\nconst openNotification = (msg, description, placement) => {\r\n  notification.success({\r\n    message: msg,\r\n    description: description,\r\n    placement,\r\n  });\r\n};\r\n\r\nconst openErrorNotification = (msg, description, placement) => {\r\n  notification.error({\r\n    message: msg,\r\n    description: description,\r\n    placement,\r\n  });\r\n};\r\n\r\n  const handleSelect = (e) => {\r\n    var aux = teamId;\r\n    console.log(dia.idReg);\r\n    console.log(e.target.value);\r\n    setTeamId(e.target.value);\r\n\r\n    \r\n\r\n    actualuzarMesDia(dia.idReg, e.target.value).then((resp) => {\r\n      console.log(resp);\r\n      if(resp.nombreDia.length > 5){\r\n        setTeamId(aux);\r\n        openErrorNotification(resp.nombreDia, \"\", \"topRight\");            \r\n      }else{        \r\n        openNotification(\"Guardado Correctamente\", \"\", \"topRight\");      \r\n      }      \r\n    }).catch(function (error) {\r\n      if (error.response) \r\n      {\r\n        \r\n      }\r\n    });   \r\n\r\n\r\n  };\r\n\r\n  useEffect(() => {\r\n   \r\n    setTeamId(dia.grupo);\r\n\r\n    if (isBgGray === true) {\r\n      setStyleTd({\r\n        padding: \"5px\",\r\n        background: \"#aaa\",\r\n      });\r\n    } else {\r\n      setStyleTd({\r\n        padding: \"5px\",\r\n        background: \"#fff\",\r\n      });\r\n    }\r\n  }, [isBgGray]);\r\n\r\n  return (\r\n    <td style={styleTd}>\r\n      <select\r\n        name=\"teamId\"\r\n        style={{ width: \"40px\" }}\r\n        value={teamId}\r\n        onChange={handleSelect}\r\n      >\r\n        {teamslist.map((data) => (\r\n          <option key={data} value={data}>\r\n            {data}\r\n          </option>\r\n        ))}\r\n      </select>\r\n    </td>\r\n  );\r\n};\r\n",["687","688"],"F:\\Hospital Almenara\\Front\\almenara-reactapp\\src\\pages\\Proceso\\AsignarServicio2\\index.js",["689","690","691","692","693","694","695","696","697"],"import { Breadcrumb, Button, notification, Select } from \"antd\";\r\nimport { FilePdfTwoTone, EditOutlined } from \"@ant-design/icons\";\r\nimport Form from \"antd/lib/form/Form\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport {\r\n  getServiciosDoctor2,\r\n  getServiciosDoctorBySpecialtyId,\r\n  viewPdfServiciosDoctor,\r\n  viewPdfServiciosDoctorFilterSpecialty,\r\n} from \"../../../services/ServicioDoctorService\";\r\n// } from \"../../../services/ServicioDoctorService\";\r\nimport { getSpecialties } from \"../../../services/SpecialtyService\";\r\nimport { updateServicioDelegado } from \"../../../services/ServicioDelegadoService\";\r\nimport Formulario from \"./Formulario\";\r\nimport TablaServicio2 from \"./TablaServicio2\";\r\nimport * as Yup from \"yup\";\r\nimport { useFormik } from \"formik\";\r\nimport FormularioAsignarServicio from \"./FormularioAsignarServicio\";\r\n\r\nconst AsignarServicio2 = () => {\r\n  const [serviciosDoctor, setServiciosDoctor] = useState([]);\r\n  const [specialties, setSpecialties] = useState([]);\r\n  const [filterSpecialtyOn, setfilterSpecialtyOn] = useState(false);\r\n  const [idSpecialty, setIdSpecialty] = useState(null);\r\n  const [isImportDataModalVisible, setIsModalImportDataVisible] = useState(\r\n    false\r\n  );\r\n  const [serviceSpecialities, setServiceSpecialities] = useState([]);\r\n  const [selectedMonth, setSelectedMonth] = useState(null);\r\n\r\n  const editService = (data, data3) => {\r\n    setIsModalImportDataVisible(true);\r\n    console.log(data3);\r\n    console.log(data.doctor.specialty.servicios);\r\n\r\n    let monthID = data3.mes.id;\r\n    let monthName = getMonthName(monthID);\r\n    let serviceSpecialities = data.doctor.specialty.servicios;\r\n\r\n    formik.values.id = data3.id;\r\n    formik.values.mes = { id: monthID, nombre: monthName };\r\n    formik.values.servicio = {\r\n      id: data3.servicio != null ? data3.servicio.id : null,\r\n      nombre: data3.servicio != null ? data3.servicio.nombre : \"\",\r\n    };\r\n    setSelectedMonth(monthName);\r\n    setServiceSpecialities(\r\n      serviceSpecialities.length > 0\r\n        ? data.doctor.specialty.servicios.filter(\r\n            (servicio) => servicio.state == true\r\n          )\r\n        : []\r\n    );\r\n  };\r\n\r\n  const getMonthName = (monthNumber) => {\r\n    let monthNames = [\r\n      \"Julio\",\r\n      \"Agosto\",\r\n      \"Setiembre\",\r\n      \"Octubre\",\r\n      \"Noviembre\",\r\n      \"Diciembre\",\r\n      \"Enero\",\r\n      \"Febrero\",\r\n      \"Marzo\",\r\n      \"Abril\",\r\n      \"Mayo\",\r\n      \"Junio\",\r\n      \"Diciembre\",\r\n      \"Enero\",\r\n      \"Febrero\",\r\n      \"Marzo\",\r\n      \"Abril\",\r\n      \"Mayo\",\r\n      \"Junio\",\r\n      \"Julio\",\r\n      \"Agosto\",\r\n      \"Setiembre\",\r\n      \"Octubre\",\r\n      \"Noviembre\",\r\n    ];\r\n    return monthNames[monthNumber - 1];\r\n  };\r\n\r\n  const validationSchema = Yup.object().shape({\r\n    servicio: Yup.object().shape({\r\n      id: Yup.number().nullable().required(\"Servicio requerida\"),\r\n    }),\r\n  });\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      id: null,\r\n      mes: {\r\n        id: null,\r\n        nombre: null,\r\n      },\r\n      servicio: {\r\n        id: null,\r\n        nombre: null,\r\n      },\r\n    },\r\n    validationSchema,\r\n    onSubmit: (value) => {\r\n      updateServicioDelegado(value)\r\n        .then((resp) => {\r\n          listar();\r\n          setIsModalImportDataVisible(false);\r\n          openNotification(\"Actualizado Correctamente\", \"\", \"topRight\");\r\n          formik.resetForm();\r\n        })\r\n        .catch(function (error) {\r\n          openErrorNotification(\r\n            \"Hubo un error mientras se actualizaba\",\r\n            \"\",\r\n            \"topRight\"\r\n          );\r\n        });\r\n    },\r\n  });\r\n\r\n  const openNotification = (msg, description, placement) => {\r\n    notification.success({\r\n      message: msg,\r\n      description: description,\r\n      placement,\r\n    });\r\n  };\r\n\r\n  const openErrorNotification = (msg, description, placement) => {\r\n    notification.error({\r\n      message: msg,\r\n      description: description,\r\n      placement,\r\n    });\r\n  };\r\n\r\n  const handleCancelModalImport = () => {\r\n    setIsModalImportDataVisible(false);\r\n  };\r\n\r\n  const listar = () => {\r\n    getServiciosDoctor2()\r\n      .then(setServiciosDoctor)\r\n      .catch((err) => console.log(err.response));\r\n  };\r\n\r\n  const listarByIdSpecialty = (id) => {\r\n    getServiciosDoctorBySpecialtyId(id).then(setServiciosDoctor);\r\n  };\r\n\r\n  const hanldeSelectSpecialty = (e) => {\r\n    setIdSpecialty(e);\r\n    setfilterSpecialtyOn(true);\r\n    listarByIdSpecialty(e);\r\n  };\r\n\r\n  const exportToPdf = () => {\r\n    if (filterSpecialtyOn) {\r\n      viewPdfServiciosDoctorFilterSpecialty(idSpecialty);\r\n    } else {\r\n      viewPdfServiciosDoctor();\r\n    }\r\n  };\r\n\r\n  const clearFilter = () => {\r\n    setfilterSpecialtyOn(false);\r\n    setIdSpecialty(null);\r\n    listar();\r\n  };\r\n\r\n  useEffect(() => {\r\n    listar();\r\n    getSpecialties().then(setSpecialties);\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <header>\r\n        <h2 className=\"title\">\r\n          <Breadcrumb>\r\n            <Breadcrumb.Item>Proceso</Breadcrumb.Item>\r\n            <Breadcrumb.Item>Servicio Médico 2</Breadcrumb.Item>\r\n          </Breadcrumb>\r\n        </h2>\r\n      </header>\r\n\r\n      <div className=\"content\">\r\n        <Formulario\r\n          setfilterSpecialtyOn={setfilterSpecialtyOn}\r\n          setIdSpecialty={setIdSpecialty}\r\n          specialties={specialties}\r\n          listar={listar}\r\n          idSpecialty={idSpecialty}\r\n          listarByIdSpecialty={listarByIdSpecialty}\r\n        />\r\n\r\n        <div className=\"table-responsive\">\r\n          <TablaServicio2\r\n            serviciosDoctor={serviciosDoctor}\r\n            editService={editService}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <FormularioAsignarServicio\r\n        isImportDataModalVisible={isImportDataModalVisible}\r\n        selectedMonth={selectedMonth}\r\n        serviceSpecialities={serviceSpecialities}\r\n        formik={formik}\r\n        handleCancelModalImport={handleCancelModalImport}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AsignarServicio2;\r\n","F:\\Hospital Almenara\\Front\\almenara-reactapp\\src\\pages\\Proceso\\AsignarServicio2\\Formulario.jsx",["698","699","700","701","702","703","704","705"],"import {\r\n  Form,\r\n  Breadcrumb,\r\n  Button,\r\n  Select,\r\n  Empty,\r\n  Modal,\r\n  Input,\r\n  Row,\r\n  Col,\r\n  Drawer,\r\n  notification,\r\n} from \"antd\";\r\n\r\nimport React from \"react\";\r\n\r\nconst Formulario = ({\r\n  specialties,\r\n  idSpecialty,\r\n  setfilterSpecialtyOn,\r\n  setIdSpecialty,\r\n  listar,\r\n  listarByIdSpecialty,\r\n}) => {\r\n  console.log(specialties);\r\n\r\n  const clearFilter = () => {\r\n    setfilterSpecialtyOn(false);\r\n    setIdSpecialty(null);\r\n    listar();\r\n  };\r\n\r\n  const hanldeSelectSpecialty = (e) => {\r\n    setIdSpecialty(e);\r\n    setfilterSpecialtyOn(true);\r\n    listarByIdSpecialty(e);\r\n  };\r\n  return (\r\n    <Form layout=\"inline\" style={{ marginBottom: \"20px\" }}>\r\n      <Form.Item label=\"Filtrar por Especialidad\">\r\n        <Select\r\n          loading={!specialties.length > 0}\r\n          showSearch\r\n          name=\"specialty\"\r\n          placeholder=\"Seleccione una especialidad\"\r\n          optionFilterProp=\"children\"\r\n          style={{ width: \"300px\" }}\r\n          value={idSpecialty}\r\n          onChange={hanldeSelectSpecialty}\r\n          filterOption={(input, option) =>\r\n            option.props.children.toLowerCase().indexOf(input.toLowerCase()) >=\r\n            0\r\n          }\r\n        >\r\n          {specialties.map((data) => (\r\n            <Select.Option key={data.id} value={data.id}>\r\n              {data.name}\r\n            </Select.Option>\r\n          ))}\r\n        </Select>\r\n      </Form.Item>\r\n      <Form.Item>\r\n        <Button type=\"ghost\" onClick={clearFilter}>\r\n          Limpiar\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default Formulario;\r\n","F:\\Hospital Almenara\\Front\\almenara-reactapp\\src\\pages\\Proceso\\AsignarServicio2\\TablaServicio2.jsx",["706","707"],"import { EditOutlined } from \"@ant-design/icons\";\r\nimport { Button, Empty, Spin } from \"antd\";\r\nimport React from \"react\";\r\n\r\nconst TablaServicio2 = ({ serviciosDoctor, editService }) => {\r\n  return (\r\n    <table\r\n      className=\"table table-hover table-striped\"\r\n      border=\"1\"\r\n      style={{ textAlign: \"center\" }}\r\n    >\r\n      <thead className=\"StyckyHeader\">\r\n        <tr>\r\n          <th style={{ width: \"300px\" }}>Residente</th>\r\n          <th>Especialidad</th>\r\n          <th>NIV.</th>\r\n          <th>AÑO</th>\r\n          <th>DIC</th>\r\n          <th>ENE</th>\r\n          <th>FEB</th>\r\n          <th>MAR</th>\r\n          <th>ABR</th>\r\n          <th>MAY</th>\r\n          <th>JUN</th>\r\n          <th>JUL</th>\r\n          <th>AGO</th>\r\n          <th>SEP</th>\r\n          <th>OCT</th>\r\n          <th>NOV</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {serviciosDoctor.length === 0 ? (\r\n          <>\r\n            <Empty\r\n              style={{\r\n                position: \"absolute\",\r\n                left: \"0\",\r\n                top: \"45%\",\r\n                right: \"0\",\r\n                bottom: \"auto\",\r\n              }}\r\n            />\r\n          </>\r\n        ) : (\r\n          serviciosDoctor.map((data) => (\r\n            <React.Fragment key={data.id}>\r\n              <tr>\r\n                <td\r\n                  className=\"stickyResidente\"\r\n                  rowSpan=\"4\"\r\n                  style={{ width: \"300px\" }}\r\n                >\r\n                  {data.doctor.name} -{\" \"}\r\n                  {data.doctor.schoolAgreement.school.shortName}\r\n                </td>\r\n                <td className=\"stickyEspecialidad\" rowSpan=\"4\">\r\n                  {data.doctor.specialty.name}\r\n                </td>\r\n              </tr>\r\n              {data.anioAcademicoDelegados.map((data2) => (\r\n                <tr\r\n                  key={String(data.id).concat(\r\n                    String(data2 == null ? 0 : data2.id)\r\n                  )}\r\n                >\r\n                  <td>\r\n                    {data2.anioAcademico != null\r\n                      ? data2.anioAcademico.codigo\r\n                      : \"No definido\"}\r\n                  </td>\r\n                  <td>\r\n                    {data2.anioAcademico != null\r\n                      ? data2.anioAcademico.anioInicio\r\n                      : \"No definido\"}{\" \"}\r\n                    -{\" \"}\r\n                    {data2.anioAcademico != null\r\n                      ? data2.anioAcademico.anioFinal\r\n                      : \"No definido\"}\r\n                  </td>\r\n                  {data2.servicioDelegados.map((data3) => (\r\n                    <td\r\n                      key={String(data.id)\r\n                        .concat(String(data2.id == null ? 0 : data2.id))\r\n                        .concat(\r\n                          String(\r\n                            data3.id != null\r\n                              ? data3.id\r\n                              : data2.id == null\r\n                              ? 0\r\n                              : data2.id\r\n                          )\r\n                        )}\r\n                      style={\r\n                        data3.servicio == null\r\n                          ? { background: \"#cca6a1\" }\r\n                          : data3.servicio.id == 1\r\n                          ? { background: \"#abe1ff\" }\r\n                          : {}\r\n                      }\r\n                    >\r\n                      {data3.servicio == null\r\n                        ? \"No definido\"\r\n                        : data3.servicio.name}{\" \"}\r\n                      <br />\r\n                      <Button\r\n                        color=\"blue-1\"\r\n                        size=\"small\"\r\n                        onClick={() => {\r\n                          editService(data, data3);\r\n                        }}\r\n                        style={{ marginTop: \"5px\" }}\r\n                      >\r\n                        <EditOutlined />\r\n                      </Button>\r\n                      {/* respaw */}\r\n                    </td>\r\n                  ))}\r\n                </tr>\r\n              ))}\r\n            </React.Fragment>\r\n          ))\r\n        )}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default TablaServicio2;\r\n","F:\\Hospital Almenara\\Front\\almenara-reactapp\\src\\pages\\Mantenimiento\\Medico2\\index.js",["708","709","710","711","712","713","714","715","716","717","718","719","720","721","722","723","724","725","726","727","728","729","730","731","732","733","734"],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Breadcrumb,\r\n  Button,\r\n  Drawer,\r\n  Input,\r\n  Table,\r\n  Tag,\r\n  Form,\r\n  Radio,\r\n  Select,\r\n  DatePicker,\r\n  Row,\r\n  Col,\r\n  notification,\r\n  Tooltip,\r\n  Modal,\r\n  Upload,\r\n  message,\r\n} from \"antd\";\r\nimport {\r\n  EditOutlined,\r\n  PlusOutlined,\r\n  ClockCircleOutlined,\r\n  UploadOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { useFormik } from \"formik\";\r\nimport { OutTable, ExcelRenderer } from \"react-excel-renderer\";\r\nimport {\r\n  updateDoctor,\r\n  createDoctor2,\r\n  getDoctors2,\r\n  upgradeDoctorLevel,\r\n  saveImportedDoctor2,\r\n  deleteDoctorByDocumento,\r\n} from \"../../../services/DoctorService\";\r\nimport { getSchoolsAgreements } from \"../../../services/SchoolAgreementService\";\r\nimport { getSpecialties } from \"../../../services/SpecialtyService\";\r\nimport { getPlazas } from \"../../../services/PlazaService\";\r\nimport { getCampus } from \"../../../services/CampusService\";\r\n\r\nimport * as Yup from \"yup\";\r\nimport moment from \"moment\";\r\n\r\nimport \"../Mantenimiento.css\";\r\nimport { getNiveles } from \"../../../services/NivelService\";\r\nimport { getTeams } from \"../../../services/TeamService\";\r\nimport ImportFromExcel from \"./ImportFromExcel\";\r\n\r\nconst openNotification = (msg, description, placement) => {\r\n  notification.success({\r\n    message: msg,\r\n    description: description,\r\n    placement,\r\n  });\r\n};\r\n\r\nconst openErrorNotification = (msg, description, placement) => {\r\n  notification.error({\r\n    message: msg,\r\n    description: description,\r\n    placement,\r\n  });\r\n};\r\n\r\nexport const Medico2 = () => {\r\n  const [consultarApi, setconsultarApi] = useState(false);\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [visibleNewForm, setVisibleNewForm] = useState(false);\r\n  const [visibleUpdateForm, setVisibleUpdateForm] = useState(false);\r\n  const [filterTable, setFilterTable] = useState(null);\r\n  const [dataSource, setDataSource] = useState(null);\r\n  const [editar, setEditar] = useState(false);\r\n  const [isImportDataModalVisible, setIsModalImportDataVisible] = useState(\r\n    false\r\n  );\r\n\r\n  const [schoolsAgreements, setSchoolsAgreements] = useState([]);\r\n  const [specialties, setSpecialties] = useState([]);\r\n  const [plazas, setPlazas] = useState([]);\r\n  const [campus, setCampus] = useState([]);\r\n  const [teams, setTeams] = useState([]);\r\n  const [niveles, setNiveles] = useState([]);\r\n\r\n  const [isOpen, setOpen] = useState(false);\r\n  const [dataLoaded, setDataLoaded] = useState(false);\r\n  const [isFormInvalid, setFormInvalid] = useState(false);\r\n  const [rows, setRows] = useState([]);\r\n  const [cols, setCols] = useState(false);\r\n  const [uploadedFileName, setUploadedFileName] = useState(null);\r\n\r\n  const listar = () => {\r\n    getDoctors2().then((resp) => {\r\n      resp.forEach((data) => {\r\n        data.key = data.id;\r\n        data.schoolName =\r\n          data.schoolAgreement == null\r\n            ? \"Sin definir\"\r\n            : data.schoolAgreement.school.shortName;\r\n        data.specialtyName =\r\n          data.specialty == null ? \"Sin definir\" : data.specialty.name;\r\n        data.plazaName = data.plaza == null ? \"Sin definir\" : data.plaza.name;\r\n        data.campusName =\r\n          data.campus == null ? \"Sin definir\" : data.campus.name;\r\n        data.lastName =\r\n          data.paternalSurname == null\r\n            ? \"Sin definir\"\r\n            : data.paternalSurname + \" \" + data.maternalSurname;\r\n        // data.teamName = \"Grupo \" + data.team.name;\r\n        data.nivelName = data.nivel == null ? \"Sin definir\" : data.nivel.name;\r\n        data.phone =\r\n          data.phone == null || data.phone.trim() == \"\"\r\n            ? \"Sin definir\"\r\n            : data.phone;\r\n        data.email =\r\n          data.email == null || data.email.trim() == \"\"\r\n            ? \"Sin definir\"\r\n            : data.email;\r\n        data.birthDate =\r\n          data.birthDate == null || data.birthDate.trim() == \"\"\r\n            ? \"Sin definir\"\r\n            : data.birthDate;\r\n        data.address =\r\n          data.address == null || data.address.trim() == \"\"\r\n            ? \"Sin definir\"\r\n            : data.address;\r\n      });\r\n      setDataSource(resp);\r\n      console.log(resp);\r\n    });\r\n  };\r\n\r\n  const validationSchema = Yup.object().shape({\r\n    document: Yup.string()\r\n      .trim()\r\n      .matches(/^[0-9]*$/, \"Solo se admiten números.\")\r\n      .length(8, \"Se requiere 8 dígitos.\")\r\n      .required(\"DNI requerido.\"),\r\n    paternalSurname: Yup.string()\r\n      .trim()\r\n      .matches(/^[ñÑa-zA-ZáéíóúÁÉÍÓÚ ]*$/, \"Solo se admiten letras.\")\r\n      .required(\"Apellido Paterno requerido.\"),\r\n    maternalSurname: Yup.string()\r\n      .trim()\r\n      .matches(/^[ñÑa-zA-ZáéíóúÁÉÍÓÚ ]*$/, \"Solo se admiten letras.\")\r\n      .required(\"Apellido Materno requerido.\"),\r\n    name: Yup.string()\r\n      .trim()\r\n      .matches(/^[ñÑa-zA-ZáéíóúÁÉÍÓÚ ]*$/, \"Solo se admiten letras.\")\r\n      .required(\"Nombre requerido.\"),\r\n    schoolAgreement: Yup.object().shape({\r\n      id: Yup.number().nullable().required(\"Universidad requerida\"),\r\n    }),\r\n    specialty: Yup.object().shape({\r\n      id: Yup.number().nullable().required(\"Especialidad requerida\"),\r\n    }),\r\n    plaza: Yup.object().shape({\r\n      id: Yup.number().nullable().required(\"Plaza requerida.\"),\r\n    }),\r\n    campus: Yup.object().shape({\r\n      id: Yup.number().nullable().required(\"Sede requerida.\"),\r\n    }),\r\n    // team: Yup.object().shape({\r\n    //   id: Yup.number().nullable().required(\"Grupo requerido.\"),\r\n    // }),\r\n    address: Yup.string()\r\n      .trim()\r\n      // .matches(\r\n      //   /^[a-zA-Z\\s](\\d)?$/,\r\n      //   \"No se admiten caracteres especiales.\"\r\n      // ),\r\n      .min(5, \"El campo debe tener al menos 5 caracteres.\")\r\n      .required(\"Dirección es un campo requerido\"),\r\n    cmp: Yup.string()\r\n      .trim()\r\n      .matches(/^[0-9]*$/, \"Solo se admiten números.\")\r\n      .min(5, \"Solo se admite min. 5 dígitos.\")\r\n      .max(6, \"Solo se admite máx. 6 dígitos.\")\r\n      .required(\"CMP requerido\"),\r\n    email: Yup.string()\r\n      .trim()\r\n      .email(\"Formato no válido. (ej. correo@example.com)\")\r\n      .required(\"Correo requerido.\"),\r\n    phone: Yup.string()\r\n      .length(9, \"Se requiere 9 dígitos.\")\r\n      .required(\"N° Celular requerido.\"),\r\n  });\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      action: \"new\",\r\n      document: \"\",\r\n      paternalSurname: \"\",\r\n      maternalSurname: \"\",\r\n      name: \"\",\r\n      schoolAgreement: {\r\n        id: null,\r\n      },\r\n      specialty: {\r\n        id: null,\r\n      },\r\n      plaza: {\r\n        id: null,\r\n      },\r\n      campus: {\r\n        id: null,\r\n      },\r\n      team: {\r\n        id: null,\r\n      },\r\n      nivel: {\r\n        id: 1,\r\n      },\r\n      birthDate: null,\r\n      registeredAt: null,\r\n      address: \"\",\r\n      cmp: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      status: true,\r\n    },\r\n    validationSchema,\r\n    // onOpen :() => {\r\n    //   console.log(\"Opening...\")\r\n    // },\r\n    onSubmit: (value) => {\r\n      console.log(value);\r\n\r\n      if (value.action == \"new\" || editar == false) {\r\n        createDoctor2(value)\r\n          .then((resp) => {\r\n            // console.log(resp);\r\n            listar();\r\n            setVisibleNewForm(false);\r\n            openNotification(\"Guardado Correctamente\", \"\", \"topRight\");\r\n            formik.resetForm();\r\n          })\r\n          .catch(function (error) {\r\n            if (error.response) {\r\n              openErrorNotification(\r\n                error.response.data.message,\r\n                \"\",\r\n                \"topRight\"\r\n              );\r\n            }\r\n          });\r\n      } else if (value.action == \"update\" || editar == true) {\r\n        delete value.action;\r\n        // console.log(value);\r\n        updateDoctor(value)\r\n          .then((resp) => {\r\n            console.log(resp);\r\n            listar();\r\n            setVisibleUpdateForm(false);\r\n            openNotification(\"Actualizado Correctamente\", \"\", \"topRight\");\r\n            formik.resetForm();\r\n          })\r\n          .catch(function (error) {\r\n            if (error.response) {\r\n              openErrorNotification(\r\n                error.response.data.message,\r\n                \"\",\r\n                \"topRight\"\r\n              );\r\n            }\r\n          });\r\n      } else if (value.action == \"delete\") {\r\n        console.log(\"eliminando \" + value);\r\n      }\r\n    },\r\n  });\r\n\r\n  function upgradeDoctors() {\r\n    upgradeDoctorLevel()\r\n      .then((resp) => {\r\n        console.log(resp);\r\n        listar();\r\n      })\r\n      .catch((error) => {\r\n        openErrorNotification(\r\n          \"Error al actualizar el nivel de los médicos.\",\r\n          \"\",\r\n          \"topRight\"\r\n        );\r\n      });\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n      title: \"#\",\r\n      dataIndex: \"id\",\r\n      key: \"id\",\r\n      width: 50,\r\n      fixed: \"left\",\r\n      align: \"center\",\r\n    },\r\n    {\r\n      title: \"N° Documento\",\r\n      dataIndex: \"document\",\r\n      key: \"document\",\r\n      width: 110,\r\n      align: \"center\",\r\n    },\r\n    {\r\n      title: \"Apellidos\",\r\n      dataIndex: \"lastName\",\r\n      key: \"lastName\",\r\n      align: \"center\",\r\n    },\r\n    {\r\n      title: \"Nombres\",\r\n      dataIndex: \"name\",\r\n      key: \"name\",\r\n      align: \"center\",\r\n    },\r\n    {\r\n      title: \"Universidad\",\r\n      dataIndex: \"schoolName\",\r\n      key: \"schoolName\",\r\n      width: 108,\r\n      align: \"center\",\r\n    },\r\n    {\r\n      title: \"Especialidad\",\r\n      dataIndex: \"specialtyName\",\r\n      key: \"specialtyName\",\r\n      align: \"center\",\r\n    },\r\n    {\r\n      title: \"Plaza\",\r\n      dataIndex: \"plazaName\",\r\n      key: \"plazaName\",\r\n      width: 80,\r\n      align: \"center\",\r\n    },\r\n    // {\r\n    //   title: \"Grupo\",\r\n    //   dataIndex: \"teamName\",\r\n    //   key: \"teamName\",\r\n    //   width: 80,\r\n    //   align: \"center\",\r\n    // },\r\n    {\r\n      title: \"Nivel\",\r\n      dataIndex: \"nivelName\",\r\n      key: \"nivelName\",\r\n      width: 70,\r\n      align: \"center\",\r\n    },\r\n    {\r\n      title: \"Sede\",\r\n      dataIndex: \"campusName\",\r\n      key: \"campusName\",\r\n      width: 78,\r\n      align: \"center\",\r\n    },\r\n    {\r\n      title: \"Fecha de Nacimiento\",\r\n      dataIndex: \"birthDate\",\r\n      key: \"birthDate\",\r\n      align: \"center\",\r\n    },\r\n    {\r\n      title: \"Domicilio\",\r\n      dataIndex: \"address\",\r\n      key: \"address\",\r\n      align: \"center\",\r\n    },\r\n    {\r\n      title: \"CMP\",\r\n      dataIndex: \"cmp\",\r\n      key: \"cmp\",\r\n      width: 70,\r\n      align: \"center\",\r\n    },\r\n    {\r\n      title: \"Correo\",\r\n      dataIndex: \"email\",\r\n      key: \"email\",\r\n      align: \"center\",\r\n    },\r\n    {\r\n      title: \"N° Celular\",\r\n      dataIndex: \"phone\",\r\n      key: \"phone\",\r\n      width: 100,\r\n      align: \"center\",\r\n    },\r\n    {\r\n      title: \"Estado\",\r\n      dataIndex: \"status\",\r\n      key: \"status\",\r\n      width: 90,\r\n      align: \"center\",\r\n      render: (val, record) =>\r\n        record.status ? (\r\n          <Tag color=\"green\">ACTIVO</Tag>\r\n        ) : (\r\n          <Tag color=\"red\">INACTIVO</Tag>\r\n        ),\r\n      filters: [\r\n        {\r\n          text: \"ACTIVO\",\r\n          value: true,\r\n        },\r\n        {\r\n          text: \"INACTIVO\",\r\n          value: false,\r\n        },\r\n      ],\r\n      filterMultiple: false,\r\n      onFilter: (value, record) => {\r\n        let status = String(record.status);\r\n        return status.indexOf(value) === 0;\r\n      },\r\n    },\r\n    {\r\n      title: \"Acciones\",\r\n      key: \"action\",\r\n      fixed: \"right\",\r\n      width: 100,\r\n      align: \"center\",\r\n      render: (record) => (\r\n        <Button\r\n          type=\"link\"\r\n          size=\"small\"\r\n          onClick={() => {\r\n            showUpdateForm(record);\r\n          }}\r\n        >\r\n          <EditOutlined />\r\n        </Button>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  const keyUpTable = (value) => {\r\n    setFilterTable(\r\n      dataSource.filter((o) =>\r\n        Object.keys(o).some((k) =>\r\n          String(o[k]).toLowerCase().includes(value.toLowerCase())\r\n        )\r\n      )\r\n    );\r\n  };\r\n\r\n  const handleCloseDrawerNewForm = (e) => {\r\n    setVisibleNewForm(false);\r\n    formik.resetForm();\r\n  };\r\n\r\n  const handleCloseDrawerUpdateForm = (e) => {\r\n    setVisibleUpdateForm(false);\r\n    formik.resetForm();\r\n  };\r\n\r\n  const showUpdateForm = (doctor) => {\r\n    setDataDoctorToForm(doctor);\r\n    setVisibleUpdateForm(true);\r\n  };\r\n\r\n  const dateFormatList = [\"DD/MM/YYYY\", \"YYYY/MM/DD\"];\r\n\r\n  function setDataDoctorToForm(doctor) {\r\n    formik.initialValues.action = \"update\";\r\n    formik.initialValues.id = doctor.id;\r\n    formik.initialValues.document =\r\n      doctor.document == null ? \"\" : doctor.document;\r\n    formik.initialValues.paternalSurname =\r\n      doctor.paternalSurname == null ? \"\" : doctor.paternalSurname;\r\n    formik.initialValues.maternalSurname =\r\n      doctor.maternalSurname == null ? \"\" : doctor.maternalSurname;\r\n    formik.initialValues.name = doctor.name == null ? \"\" : doctor.name;\r\n    formik.initialValues.schoolAgreement.id =\r\n      doctor.schoolAgreement == null ? 1 : doctor.schoolAgreement.id;\r\n    formik.initialValues.specialty.id =\r\n      doctor.specialty == null ? 1 : doctor.specialty.id;\r\n    formik.initialValues.plaza.id = doctor.plaza == null ? 1 : doctor.plaza.id;\r\n    formik.initialValues.campus.id =\r\n      doctor.campus == null ? 1 : doctor.campus.id;\r\n    formik.initialValues.plazaName =\r\n      doctor.campus == null ? \"\" : doctor.campus.plazaName;\r\n\r\n    formik.initialValues.nivel.id = doctor.nivel == null ? 1 : doctor.nivel.id;\r\n    formik.initialValues.birthDate =\r\n      doctor.birthDate == null\r\n        ? moment()\r\n        : moment(doctor.birthDate, dateFormatList);\r\n    formik.initialValues.registeredAt =\r\n      doctor.registeredAt == null\r\n        ? moment()\r\n        : moment(doctor.registeredAt, dateFormatList);\r\n    formik.initialValues.address = doctor.address == null ? \"\" : doctor.address;\r\n    formik.initialValues.cmp = doctor.cmp == null ? \"\" : doctor.cmp;\r\n    formik.initialValues.email = doctor.email == null ? \"\" : doctor.email;\r\n    formik.initialValues.phone = doctor.phone == null ? \"\" : doctor.phone;\r\n    formik.initialValues.status = doctor.status;\r\n\r\n    setEditar(true);\r\n    //console.log(moment(doctor.birthDate).format(\"DD/MM/YYYY\"));\r\n  }\r\n\r\n  function cleanDataDoctorToForm() {\r\n    formik.initialValues.action = \"new\";\r\n    formik.initialValues.id = null;\r\n    formik.initialValues.document = \"\";\r\n    formik.initialValues.paternalSurname = \"\";\r\n    formik.initialValues.maternalSurname = \"\";\r\n    formik.initialValues.name = \"\";\r\n    formik.initialValues.schoolAgreement.id = null;\r\n    formik.initialValues.specialty.id = null;\r\n    formik.initialValues.plaza.id = null;\r\n    formik.initialValues.campus.id = null;\r\n    formik.initialValues.plazaName = \"\";\r\n\r\n    formik.initialValues.nivel.id = 1;\r\n    formik.initialValues.birthDate = moment();\r\n    formik.initialValues.registeredAt = moment();\r\n    formik.initialValues.address = \"\";\r\n    formik.initialValues.cmp = \"\";\r\n    formik.initialValues.email = \"\";\r\n    formik.initialValues.phone = \"\";\r\n    formik.initialValues.status = true;\r\n\r\n    setEditar(false);\r\n    //console.log(moment(doctor.birthDate).format(\"DD/MM/YYYY\"));\r\n  }\r\n\r\n  function disabledDate(current) {\r\n    return current && current > moment().startOf(\"day\");\r\n  }\r\n\r\n  const showModalImport = () => {\r\n    console.log(\"Modal\", isImportDataModalVisible);\r\n    setIsModalImportDataVisible(true);\r\n  };\r\n\r\n  const handleModalImportOk = () => {\r\n    setIsModalImportDataVisible(false);\r\n  };\r\n\r\n  const handleCancelModalImport = () => {\r\n    setIsModalImportDataVisible(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const consultandoApi = () => {\r\n      setLoading(false);\r\n      listar();\r\n      getSchoolsAgreements().then(setSchoolsAgreements);\r\n      getSpecialties().then(setSpecialties);\r\n      getPlazas().then(setPlazas);\r\n      getCampus().then(setCampus);\r\n      getNiveles().then(setNiveles);\r\n      getTeams().then(setTeams);\r\n      setconsultarApi(false);\r\n    };\r\n\r\n    if (consultarApi) {\r\n      consultandoApi();\r\n      setconsultarApi(false);\r\n    } else {\r\n      consultandoApi();\r\n    }\r\n  }, [consultarApi]);\r\n\r\n  const props = {\r\n    name: \"file\",\r\n    action: \"https://www.mocky.io/v2/5cc8019d300000980a055e76\",\r\n    headers: {\r\n      authorization: \"authorization-text\",\r\n    },\r\n    onChange(info) {\r\n      if (info.file.status !== \"uploading\") {\r\n        console.log(info.file, info.fileList);\r\n      }\r\n      if (info.file.status === \"done\") {\r\n        message.success(`${info.file.name} file uploaded successfully`);\r\n      } else if (info.file.status === \"error\") {\r\n        message.error(`${info.file.name} file upload failed.`);\r\n      }\r\n    },\r\n  };\r\n\r\n  const renderFile = (fileObj) => {\r\n    //just pass the fileObj as parameter\r\n    ExcelRenderer(fileObj, (err, resp) => {\r\n      if (err) {\r\n        console.log(err);\r\n      } else {\r\n        setDataLoaded(true);\r\n        setCols(resp.cols);\r\n        setRows(resp.rows);\r\n      }\r\n    });\r\n  };\r\n\r\n  const fileHandler = (event) => {\r\n    if (event.fileList.length) {\r\n      let fileObj = event.fileList[0];\r\n      let fileName = fileObj.name;\r\n\r\n      //check for file extension and pass only if it is .xlsx and display error message otherwise\r\n      if (fileName.slice(fileName.lastIndexOf(\".\") + 1) === \"xlsx\") {\r\n        setUploadedFileName(fileName);\r\n        setFormInvalid(false);\r\n        renderFile(fileObj);\r\n      } else {\r\n        setFormInvalid(true);\r\n        setUploadedFileName(\"\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const deleteDocturByDocument = (documento) => {\r\n    deleteDoctorByDocumento(documento)\r\n      .then((resp) => {\r\n        openNotification(\"Eliminado Correctamente \", \"\", \"topRight\");\r\n\r\n        setconsultarApi(true);\r\n      })\r\n      .catch((error) => {\r\n        openErrorNotification(\r\n          \"Error al actualizar el nivel de los médicos.\",\r\n          \"\",\r\n          \"topRight\"\r\n        );\r\n      });\r\n    setVisibleUpdateForm(!visibleUpdateForm);\r\n  };\r\n\r\n  return (\r\n    <div className=\"mantenimiento\">\r\n      <header>\r\n        <h2 className=\"title\">\r\n          <Breadcrumb>\r\n            <Breadcrumb.Item>Mantenimiento</Breadcrumb.Item>\r\n            <Breadcrumb.Item>Médico 2</Breadcrumb.Item>\r\n          </Breadcrumb>\r\n        </h2>\r\n        <div>\r\n          <Button\r\n            type=\"primary\"\r\n            size=\"large\"\r\n            onClick={() => {\r\n              cleanDataDoctorToForm({});\r\n              setVisibleNewForm(true);\r\n            }}\r\n            style={{ marginRight: \"10px\" }}\r\n          >\r\n            <PlusOutlined /> Agregar\r\n          </Button>\r\n\r\n          <Button type=\"primary\" onClick={showModalImport} size=\"large\">\r\n            Importar Archivo\r\n          </Button>\r\n        </div>\r\n      </header>\r\n      <Modal\r\n        title=\"Importar Excel\"\r\n        visible={isImportDataModalVisible}\r\n        //onC={handleModalImportOk}\r\n        onCancel={handleCancelModalImport}\r\n        //okText=\"Guadar datos\"\r\n        cancelText=\"Cancelar\"\r\n        width={1300}\r\n        okButtonProps={{ style: { display: \"none\" } }}\r\n      >\r\n        <ImportFromExcel\r\n          onImportdata={saveImportedDoctor2}\r\n          onListDoctors={listar}\r\n          onVisibleModal={handleCancelModalImport}\r\n          onOpenNotification={openNotification}\r\n        />\r\n      </Modal>\r\n      <div className=\"content\">\r\n        <Input.Search\r\n          className=\"searchInput\"\r\n          placeholder=\"Buscar por nombre...\"\r\n          onKeyUpCapture={(e) => keyUpTable(e.target.value)}\r\n        />\r\n        <Table\r\n          loading={dataSource ? false : true}\r\n          dataSource={filterTable === null ? dataSource : filterTable}\r\n          columns={columns}\r\n          pagination={{ pageSize: 10 }}\r\n          scroll={{ x: 2000 }}\r\n        />\r\n        <Drawer\r\n          title=\"Agregar Médico\"\r\n          placement=\"right\"\r\n          closable={false}\r\n          width={500}\r\n          onClose={handleCloseDrawerNewForm}\r\n          visible={visibleNewForm}\r\n          id=\"newForm\"\r\n        >\r\n          <Form\r\n            title=\"Universidad\"\r\n            layout=\"vertical\"\r\n            onSubmitCapture={formik.handleSubmit}\r\n          >\r\n            <Row gutter={12} style={{ display: \"none\" }}>\r\n              <Col span={12}>\r\n                <Form.Item required>\r\n                  <Input\r\n                    name=\"action\"\r\n                    value={formik.values.action}\r\n                    onChange={formik.handleChange}\r\n                  />\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={12}>\r\n              <Col span={12}>\r\n                <Form.Item label=\"DNI:\" required>\r\n                  <Input\r\n                    name=\"document\"\r\n                    value={formik.values.document}\r\n                    onChange={formik.handleChange}\r\n                  />\r\n                  {formik.errors.document && formik.touched.document ? (\r\n                    <div className=\"error-field\">{formik.errors.document}</div>\r\n                  ) : null}\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={12}>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Apellido Paterno:\" required>\r\n                  <Input\r\n                    name=\"paternalSurname\"\r\n                    value={formik.values.paternalSurname}\r\n                    onChange={formik.handleChange}\r\n                  />\r\n                  {formik.errors.paternalSurname &&\r\n                  formik.touched.paternalSurname ? (\r\n                    <div className=\"error-field\">\r\n                      {formik.errors.paternalSurname}\r\n                    </div>\r\n                  ) : null}\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Apellido Materno:\" required>\r\n                  <Input\r\n                    name=\"maternalSurname\"\r\n                    value={formik.values.maternalSurname}\r\n                    onChange={formik.handleChange}\r\n                  />\r\n                  {formik.errors.maternalSurname &&\r\n                  formik.touched.maternalSurname ? (\r\n                    <div className=\"error-field\">\r\n                      {formik.errors.maternalSurname}\r\n                    </div>\r\n                  ) : null}\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Form.Item label=\"Nombre Completo:\" required>\r\n              <Input\r\n                name=\"name\"\r\n                value={formik.values.name}\r\n                onChange={formik.handleChange}\r\n              />\r\n              {formik.errors.name && formik.touched.name ? (\r\n                <div className=\"error-field\">{formik.errors.name}</div>\r\n              ) : null}\r\n            </Form.Item>\r\n            <Form.Item label=\"Universidad:\" required>\r\n              <Select\r\n                showSearch\r\n                name=\"schoolAgreement.id\"\r\n                placeholder=\"Seleccione una universidad\"\r\n                optionFilterProp=\"children\"\r\n                style={{ width: \"100%\" }}\r\n                value={formik.values.schoolAgreement.id}\r\n                onChange={(text) =>\r\n                  formik.setFieldValue(\"schoolAgreement.id\", text)\r\n                }\r\n                filterOption={(input, option) =>\r\n                  option.props.children\r\n                    .toLowerCase()\r\n                    .indexOf(input.toLowerCase()) >= 0\r\n                }\r\n              >\r\n                {schoolsAgreements.map(({ id, school }) => (\r\n                  <Select.Option key={id} value={id}>\r\n                    {school.name}\r\n                  </Select.Option>\r\n                ))}\r\n              </Select>\r\n              {formik.errors.schoolAgreement &&\r\n              formik.touched.schoolAgreement ? (\r\n                <div className=\"error-field\">\r\n                  {formik.errors.schoolAgreement.id}\r\n                </div>\r\n              ) : null}\r\n            </Form.Item>\r\n            <Form.Item label=\"Especialidad:\" required>\r\n              <Select\r\n                showSearch\r\n                name=\"specialty.id\"\r\n                placeholder=\"Seleccione una especialidad\"\r\n                optionFilterProp=\"children\"\r\n                style={{ width: \"100%\" }}\r\n                value={formik.values.specialty.id}\r\n                onChange={(text) => formik.setFieldValue(\"specialty.id\", text)}\r\n                filterOption={(input, option) =>\r\n                  option.props.children\r\n                    .toLowerCase()\r\n                    .indexOf(input.toLowerCase()) >= 0\r\n                }\r\n              >\r\n                {specialties.map((data) => (\r\n                  <Select.Option key={data.id} value={data.id}>\r\n                    {data.name}\r\n                  </Select.Option>\r\n                ))}\r\n              </Select>\r\n              {formik.errors.specialty && formik.touched.specialty ? (\r\n                <div className=\"error-field\">{formik.errors.specialty.id}</div>\r\n              ) : null}\r\n            </Form.Item>\r\n            <Row gutter={12}>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Plaza:\" required>\r\n                  <Select\r\n                    showSearch\r\n                    name=\"plaza.id\"\r\n                    placeholder=\"Seleccione una plaza\"\r\n                    optionFilterProp=\"children\"\r\n                    style={{ width: \"100%\" }}\r\n                    value={formik.values.plaza.id}\r\n                    onChange={(text) => formik.setFieldValue(\"plaza.id\", text)}\r\n                    filterOption={(input, option) =>\r\n                      option.props.children\r\n                        .toLowerCase()\r\n                        .indexOf(input.toLowerCase()) >= 0\r\n                    }\r\n                  >\r\n                    {plazas.map((data) => (\r\n                      <Select.Option key={data.id} value={data.id}>\r\n                        {data.name}\r\n                      </Select.Option>\r\n                    ))}\r\n                  </Select>\r\n                  {formik.errors.plaza && formik.touched.plaza ? (\r\n                    <div className=\"error-field\">{formik.errors.plaza.id}</div>\r\n                  ) : null}\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Sede:\" required>\r\n                  <Select\r\n                    showSearch\r\n                    name=\"campus.id\"\r\n                    placeholder=\"Seleccione una sede\"\r\n                    optionFilterProp=\"children\"\r\n                    style={{ width: \"100%\" }}\r\n                    value={formik.values.campus.id}\r\n                    onChange={(text) => formik.setFieldValue(\"campus.id\", text)}\r\n                    filterOption={(input, option) =>\r\n                      option.props.children\r\n                        .toLowerCase()\r\n                        .indexOf(input.toLowerCase()) >= 0\r\n                    }\r\n                  >\r\n                    {campus.map((data) => (\r\n                      <Select.Option key={data.id} value={data.id}>\r\n                        {data.name}\r\n                      </Select.Option>\r\n                    ))}\r\n                  </Select>\r\n                  {formik.errors.campus && formik.touched.campus ? (\r\n                    <div className=\"error-field\">{formik.errors.campus.id}</div>\r\n                  ) : null}\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n\r\n            <Form.Item label=\"Nivel:\">\r\n              <Select\r\n                disabled\r\n                showSearch\r\n                name=\"campus.id\"\r\n                placeholder=\"Seleccione un nivel\"\r\n                optionFilterProp=\"children\"\r\n                style={{ width: \"100%\" }}\r\n                value={formik.values.nivel.id}\r\n                onChange={(text) => formik.setFieldValue(\"nivel.id\", text)}\r\n                filterOption={(input, option) =>\r\n                  option.props.children\r\n                    .toLowerCase()\r\n                    .indexOf(input.toLowerCase()) >= 0\r\n                }\r\n              >\r\n                {niveles.map((data) => (\r\n                  <Select.Option key={data.id} value={data.id}>\r\n                    {data.name}\r\n                  </Select.Option>\r\n                ))}\r\n              </Select>\r\n            </Form.Item>\r\n\r\n            <Form.Item label=\"Fecha de Ingreso:\">\r\n              <DatePicker\r\n                style={{ width: \"100%\" }}\r\n                name=\"birthDate\"\r\n                value={formik.values.registeredAt}\r\n                onChange={(value) =>\r\n                  formik.setFieldValue(\"registeredAt\", value)\r\n                }\r\n                disabledDate={disabledDate}\r\n                format={dateFormatList}\r\n              />\r\n              {formik.errors.registeredAt && formik.touched.registeredAt ? (\r\n                <div className=\"error-field\">{formik.errors.registeredAt}</div>\r\n              ) : null}\r\n            </Form.Item>\r\n            <Row gutter={12}>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Fecha de Nacimiento:\">\r\n                  <DatePicker\r\n                    style={{ width: \"100%\" }}\r\n                    name=\"birthDate\"\r\n                    value={formik.values.birthDate}\r\n                    onChange={(value) =>\r\n                      formik.setFieldValue(\"birthDate\", value)\r\n                    }\r\n                    disabledDate={disabledDate}\r\n                    format={dateFormatList}\r\n                  />\r\n                  {formik.errors.birthDate && formik.touched.birthDate ? (\r\n                    <div className=\"error-field\">{formik.errors.birthDate}</div>\r\n                  ) : null}\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Form.Item label=\"CMP:\" required>\r\n                  <Input\r\n                    name=\"cmp\"\r\n                    value={formik.values.cmp}\r\n                    onChange={formik.handleChange}\r\n                  />\r\n                  {formik.errors.cmp && formik.touched.cmp ? (\r\n                    <div className=\"error-field\">{formik.errors.cmp}</div>\r\n                  ) : null}\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Form.Item label=\"Domicilio:\">\r\n              <Input\r\n                name=\"address\"\r\n                value={formik.values.address}\r\n                onChange={formik.handleChange}\r\n              />\r\n              {formik.errors.address && formik.touched.address ? (\r\n                <div className=\"error-field\">{formik.errors.address}</div>\r\n              ) : null}\r\n            </Form.Item>\r\n            <Row gutter={12}>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Correo:\" required>\r\n                  <Input\r\n                    name=\"email\"\r\n                    value={formik.values.email}\r\n                    onChange={formik.handleChange}\r\n                  />\r\n                  {formik.errors.email && formik.touched.email ? (\r\n                    <div className=\"error-field\">{formik.errors.email}</div>\r\n                  ) : null}\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Form.Item label=\"N°Celular:\" required>\r\n                  <Input\r\n                    name=\"phone\"\r\n                    value={formik.values.phone}\r\n                    onChange={formik.handleChange}\r\n                  />\r\n                  {formik.errors.phone && formik.touched.phone ? (\r\n                    <div className=\"error-field\">{formik.errors.phone}</div>\r\n                  ) : null}\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Form.Item label=\"Estado:\">\r\n              <Radio.Group\r\n                name=\"status\"\r\n                value={formik.values.status}\r\n                onChange={formik.handleChange}\r\n              >\r\n                <Radio.Button value={true}>ACTIVO</Radio.Button>\r\n                <Radio.Button value={false}>INACTIVO</Radio.Button>\r\n              </Radio.Group>\r\n            </Form.Item>\r\n            <Button type=\"primary\" htmlType=\"submit\" block>\r\n              Registrar\r\n            </Button>\r\n          </Form>\r\n        </Drawer>\r\n\r\n        <Drawer\r\n          title=\"Actualizar Médico\"\r\n          placement=\"right\"\r\n          closable={false}\r\n          width={500}\r\n          onClose={handleCloseDrawerUpdateForm}\r\n          visible={visibleUpdateForm}\r\n          id=\"updateForm\"\r\n        >\r\n          <Form\r\n            title=\"Medico\"\r\n            layout=\"vertical\"\r\n            onSubmitCapture={formik.handleSubmit}\r\n          >\r\n            <Row gutter={12} style={{ display: \"none\" }}>\r\n              <Col span={12}>\r\n                <Form.Item required>\r\n                  <Input\r\n                    name=\"action\"\r\n                    value={formik.values.action}\r\n                    onChange={formik.handleChange}\r\n                  />\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={12}>\r\n              <Col span={12}>\r\n                <Form.Item label=\"ID:\" required>\r\n                  <Input\r\n                    disabled\r\n                    name=\"id\"\r\n                    value={formik.values.id}\r\n                    onChange={formik.handleChange}\r\n                  />\r\n                  {formik.errors.document && formik.touched.document ? (\r\n                    <div className=\"error-field\">{formik.errors.document}</div>\r\n                  ) : null}\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Form.Item label=\"DNI:\" required>\r\n                  <Input\r\n                    name=\"document\"\r\n                    value={formik.values.document}\r\n                    onChange={formik.handleChange}\r\n                  />\r\n                  {formik.errors.document && formik.touched.document ? (\r\n                    <div className=\"error-field\">{formik.errors.document}</div>\r\n                  ) : null}\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={12}>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Apellido Paterno:\" required>\r\n                  <Input\r\n                    name=\"paternalSurname\"\r\n                    value={formik.values.paternalSurname}\r\n                    onChange={formik.handleChange}\r\n                  />\r\n                  {formik.errors.paternalSurname &&\r\n                  formik.touched.paternalSurname ? (\r\n                    <div className=\"error-field\">\r\n                      {formik.errors.paternalSurname}\r\n                    </div>\r\n                  ) : null}\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Apellido Materno:\" required>\r\n                  <Input\r\n                    name=\"maternalSurname\"\r\n                    value={formik.values.maternalSurname}\r\n                    onChange={formik.handleChange}\r\n                  />\r\n                  {formik.errors.maternalSurname &&\r\n                  formik.touched.maternalSurname ? (\r\n                    <div className=\"error-field\">\r\n                      {formik.errors.maternalSurname}\r\n                    </div>\r\n                  ) : null}\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Form.Item label=\"Nombre Completo:\" required>\r\n              <Input\r\n                name=\"name\"\r\n                value={formik.values.name}\r\n                onChange={formik.handleChange}\r\n              />\r\n              {formik.errors.name && formik.touched.name ? (\r\n                <div className=\"error-field\">{formik.errors.name}</div>\r\n              ) : null}\r\n            </Form.Item>\r\n            <Form.Item label=\"Universidad:\" required>\r\n              <Select\r\n                showSearch\r\n                name=\"schoolAgreement.id\"\r\n                placeholder=\"Seleccione una universidad\"\r\n                optionFilterProp=\"children\"\r\n                style={{ width: \"100%\" }}\r\n                value={formik.values.schoolAgreement.id}\r\n                onChange={(text) =>\r\n                  formik.setFieldValue(\"schoolAgreement.id\", text)\r\n                }\r\n                filterOption={(input, option) =>\r\n                  option.props.children\r\n                    .toLowerCase()\r\n                    .indexOf(input.toLowerCase()) >= 0\r\n                }\r\n              >\r\n                {schoolsAgreements.map(({ id, school }) => (\r\n                  <Select.Option key={id} value={id}>\r\n                    {school.name}\r\n                  </Select.Option>\r\n                ))}\r\n              </Select>\r\n              {formik.errors.schoolAgreement &&\r\n              formik.touched.schoolAgreement ? (\r\n                <div className=\"error-field\">\r\n                  {formik.errors.schoolAgreement.id}\r\n                </div>\r\n              ) : null}\r\n            </Form.Item>\r\n            <Form.Item label=\"Especialidad:\" required>\r\n              <Select\r\n                showSearch\r\n                name=\"specialty.id\"\r\n                placeholder=\"Seleccione una especialidad\"\r\n                optionFilterProp=\"children\"\r\n                style={{ width: \"100%\" }}\r\n                value={formik.values.specialty.id}\r\n                onChange={(text) => formik.setFieldValue(\"specialty.id\", text)}\r\n                filterOption={(input, option) =>\r\n                  option.props.children\r\n                    .toLowerCase()\r\n                    .indexOf(input.toLowerCase()) >= 0\r\n                }\r\n              >\r\n                {specialties.map((data) => (\r\n                  <Select.Option key={data.id} value={data.id}>\r\n                    {data.name}\r\n                  </Select.Option>\r\n                ))}\r\n              </Select>\r\n              {formik.errors.specialty && formik.touched.specialty ? (\r\n                <div className=\"error-field\">{formik.errors.specialty.id}</div>\r\n              ) : null}\r\n            </Form.Item>\r\n            <Row gutter={12}>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Plaza:\" required>\r\n                  <Select\r\n                    showSearch\r\n                    name=\"plaza.id\"\r\n                    placeholder=\"Seleccione una plaza\"\r\n                    optionFilterProp=\"children\"\r\n                    style={{ width: \"100%\" }}\r\n                    value={formik.values.plaza.id}\r\n                    onChange={(text) => formik.setFieldValue(\"plaza.id\", text)}\r\n                    filterOption={(input, option) =>\r\n                      option.props.children\r\n                        .toLowerCase()\r\n                        .indexOf(input.toLowerCase()) >= 0\r\n                    }\r\n                  >\r\n                    {plazas.map((data) => (\r\n                      <Select.Option key={data.id} value={data.id}>\r\n                        {data.name}\r\n                      </Select.Option>\r\n                    ))}\r\n                  </Select>\r\n                  {formik.errors.plaza && formik.touched.plaza ? (\r\n                    <div className=\"error-field\">{formik.errors.plaza.id}</div>\r\n                  ) : null}\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Sede:\" required>\r\n                  <Select\r\n                    showSearch\r\n                    name=\"campus.id\"\r\n                    placeholder=\"Seleccione una sede\"\r\n                    optionFilterProp=\"children\"\r\n                    style={{ width: \"100%\" }}\r\n                    value={formik.values.campus.id}\r\n                    onChange={(text) => formik.setFieldValue(\"campus.id\", text)}\r\n                    filterOption={(input, option) =>\r\n                      option.props.children\r\n                        .toLowerCase()\r\n                        .indexOf(input.toLowerCase()) >= 0\r\n                    }\r\n                  >\r\n                    {campus.map((data) => (\r\n                      <Select.Option key={data.id} value={data.id}>\r\n                        {data.name}\r\n                      </Select.Option>\r\n                    ))}\r\n                  </Select>\r\n                  {formik.errors.campus && formik.touched.campus ? (\r\n                    <div className=\"error-field\">{formik.errors.campus.id}</div>\r\n                  ) : null}\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n\r\n            <Form.Item label=\"Nivel:\">\r\n              <Select\r\n                disabled\r\n                showSearch\r\n                name=\"campus.id\"\r\n                placeholder=\"Seleccione un nivel\"\r\n                optionFilterProp=\"children\"\r\n                style={{ width: \"100%\" }}\r\n                value={formik.values.nivel.id}\r\n                onChange={(text) => formik.setFieldValue(\"nivel.id\", text)}\r\n                filterOption={(input, option) =>\r\n                  option.props.children\r\n                    .toLowerCase()\r\n                    .indexOf(input.toLowerCase()) >= 0\r\n                }\r\n              >\r\n                {niveles.map((data) => (\r\n                  <Select.Option key={data.id} value={data.id}>\r\n                    {data.name}\r\n                  </Select.Option>\r\n                ))}\r\n              </Select>\r\n            </Form.Item>\r\n            {/* </Col>\r\n            </Row> */}\r\n            <Form.Item label=\"Fecha de Ingreso:\">\r\n              <DatePicker\r\n                style={{ width: \"100%\" }}\r\n                name=\"birthDate\"\r\n                value={formik.values.registeredAt}\r\n                onChange={(value) =>\r\n                  formik.setFieldValue(\"registeredAt\", value)\r\n                }\r\n                disabledDate={disabledDate}\r\n                format={dateFormatList}\r\n              />\r\n              {formik.errors.registeredAt && formik.touched.registeredAt ? (\r\n                <div className=\"error-field\">{formik.errors.registeredAt}</div>\r\n              ) : null}\r\n            </Form.Item>\r\n            <Row gutter={12}>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Fecha de Nacimiento:\">\r\n                  <DatePicker\r\n                    style={{ width: \"100%\" }}\r\n                    name=\"birthDate\"\r\n                    value={formik.values.birthDate}\r\n                    onChange={(value) =>\r\n                      formik.setFieldValue(\"birthDate\", value)\r\n                    }\r\n                    disabledDate={disabledDate}\r\n                    format={dateFormatList}\r\n                  />\r\n                  {formik.errors.birthDate && formik.touched.birthDate ? (\r\n                    <div className=\"error-field\">{formik.errors.birthDate}</div>\r\n                  ) : null}\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Form.Item label=\"CMP:\" required>\r\n                  <Input\r\n                    name=\"cmp\"\r\n                    value={formik.values.cmp}\r\n                    onChange={formik.handleChange}\r\n                  />\r\n                  {formik.errors.cmp && formik.touched.cmp ? (\r\n                    <div className=\"error-field\">{formik.errors.cmp}</div>\r\n                  ) : null}\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Form.Item label=\"Domicilio:\">\r\n              <Input\r\n                name=\"address\"\r\n                value={formik.values.address}\r\n                onChange={formik.handleChange}\r\n              />\r\n              {formik.errors.address && formik.touched.address ? (\r\n                <div className=\"error-field\">{formik.errors.address}</div>\r\n              ) : null}\r\n            </Form.Item>\r\n            <Row gutter={12}>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Correo:\" required>\r\n                  <Input\r\n                    name=\"email\"\r\n                    value={formik.values.email}\r\n                    onChange={formik.handleChange}\r\n                  />\r\n                  {formik.errors.email && formik.touched.email ? (\r\n                    <div className=\"error-field\">{formik.errors.email}</div>\r\n                  ) : null}\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Form.Item label=\"N°Celular:\" required>\r\n                  <Input\r\n                    name=\"phone\"\r\n                    value={formik.values.phone}\r\n                    onChange={formik.handleChange}\r\n                  />\r\n                  {formik.errors.phone && formik.touched.phone ? (\r\n                    <div className=\"error-field\">{formik.errors.phone}</div>\r\n                  ) : null}\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Form.Item label=\"Acciones:\">\r\n              {/* <Radio.Group\r\n                name=\"status\"\r\n                value={formik.values.status}\r\n                onChange={formik.handleChange}\r\n              >\r\n                <Radio.Button value={true}>ACTIVO</Radio.Button>\r\n                <Radio.Button value={false}>INACTIVO</Radio.Button>\r\n              </Radio.Group> */}\r\n              <Row gutter={[16, 16]}>\r\n                <Col span=\"12\">\r\n                  <Button type=\"primary\" htmlType=\"submit\" block>\r\n                    Actualizar\r\n                  </Button>\r\n                </Col>\r\n\r\n                <Col span=\"12\">\r\n                  <Button\r\n                    style={{\r\n                      backgroundColor: \"red\",\r\n                      color: \"white\",\r\n                      border: \"none\",\r\n                    }}\r\n                    htmlType=\"button\"\r\n                    onClick={() =>\r\n                      deleteDocturByDocument(formik.values.document.toString())\r\n                    }\r\n                    block\r\n                  >\r\n                    Eliminar\r\n                  </Button>\r\n                </Col>\r\n              </Row>\r\n            </Form.Item>\r\n          </Form>\r\n        </Drawer>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","F:\\Hospital Almenara\\Front\\almenara-reactapp\\src\\pages\\Mantenimiento\\Medico2\\ImportFromExcel.js",["735","736","737","738","739","740","741","742","743","744","745","746","747","748","749","750","751","752"],"import React, { Component } from \"react\";\r\nimport { Modal, Button } from \"antd\";\r\nimport { OutTable, ExcelRenderer } from \"react-excel-renderer\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Input,\r\n  InputGroup,\r\n  InputGroupAddon,\r\n  FormGroup,\r\n  Label,\r\n  Fade,\r\n  FormFeedback,\r\n  Card,\r\n} from \"reactstrap\";\r\nimport * as Yup from \"yup\";\r\nimport moment from \"moment\";\r\nimport \"./ImportFromExcel.css\";\r\n\r\nconst validationDoctorData = Yup.object().shape({\r\n  document: Yup.string()\r\n    .trim()\r\n    .matches(/^[0-9]*$/, \"Solo se admiten números.\")\r\n    .length(8, \"Se requiere 8 dígitos.\")\r\n    .required(\"DNI requerido.\"),\r\n  paternalSurname: Yup.string()\r\n    .trim()\r\n    .matches(/^[ñÑa-zA-ZáéíóúÁÉÍÓÚ ]*$/, \"Solo se admiten letras.\")\r\n    .required(\"Apellido Paterno requerido.\"),\r\n  maternalSurname: Yup.string()\r\n    .trim()\r\n    .matches(/^[ñÑa-zA-ZáéíóúÁÉÍÓÚ ]*$/, \"Solo se admiten letras.\")\r\n    .required(\"Apellido Materno requerido.\"),\r\n  name: Yup.string()\r\n    .trim()\r\n    .matches(/^[ñÑa-zA-ZáéíóúÁÉÍÓÚ ]*$/, \"Solo se admiten letras.\")\r\n    .required(\"Nombre requerido.\"),\r\n  schoolAgreement: Yup.object().shape({\r\n    id: Yup.number().nullable().required(\"Universidad requerida\"),\r\n  }),\r\n  specialty: Yup.object().shape({\r\n    id: Yup.number().nullable().required(\"Especialidad requerida\"),\r\n  }),\r\n  plaza: Yup.object().shape({\r\n    id: Yup.number().nullable().required(\"Plaza requerida.\"),\r\n  }),\r\n  campus: Yup.object().shape({\r\n    id: Yup.number().nullable().required(\"Sede requerida.\"),\r\n  }),\r\n  // team: Yup.object().shape({\r\n  //   id: Yup.number().nullable().required(\"Grupo requerido.\"),\r\n  // }),\r\n  address: Yup.string()\r\n    .trim()\r\n    // .matches(\r\n    //   /^[a-zA-Z\\s](\\d)?$/,\r\n    //   \"No se admiten caracteres especiales.\"\r\n    // ),\r\n    .min(5, \"El campo debe tener al menos 5 caracteres.\")\r\n    .required(\"Dirección es un campo requerido\"),\r\n  cmp: Yup.string()\r\n    .trim()\r\n    .matches(/^[0-9]*$/, \"Solo se admiten números.\")\r\n    .min(5, \"Solo se admite min. 5 dígitos.\")\r\n    .max(6, \"Solo se admite máx. 6 dígitos.\")\r\n    .required(\"CMP requerido\"),\r\n  email: Yup.string()\r\n    .trim()\r\n    .email(\"Formato no válido. (ej. correo@example.com)\")\r\n    .required(\"Correo requerido.\"),\r\n  phone: Yup.string()\r\n    .length(9, \"Se requiere 9 dígitos.\")\r\n    .required(\"N° Celular requerido.\"),\r\n});\r\n\r\nclass ImportFromExcel extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isOpen: false,\r\n      dataLoaded: false,\r\n      isFormInvalid: false,\r\n      rows: null,\r\n      cols: null,\r\n    };\r\n    this.fileHandler = this.fileHandler.bind(this);\r\n    this.toggle = this.toggle.bind(this);\r\n    this.openFileBrowser = this.openFileBrowser.bind(this);\r\n    this.renderFile = this.renderFile.bind(this);\r\n    this.fileInput = React.createRef();\r\n    this.saveImportedData = this.saveImportedData.bind(this);\r\n    this.converToDoctor = this.converToDoctor.bind(this);\r\n    this.excelDateToJSDate = this.excelDateToJSDate.bind(this);\r\n    this.cleanState = this.cleanState.bind(this);\r\n  }\r\n\r\n  cleanState() {\r\n    this.setState({\r\n      dataLoaded: false,\r\n      cols: null,\r\n      rows: null,\r\n      uploadedFileName: null,\r\n    });\r\n  }\r\n\r\n\r\n\r\n  \r\n\r\n  renderFile = (fileObj) => {\r\n    //just pass the fileObj as parameter\r\n    ExcelRenderer(fileObj, (err, resp) => {\r\n      if (err) {\r\n        console.log(err);\r\n      } else {\r\n        this.setState({\r\n          dataLoaded: true,\r\n          cols: resp.cols,\r\n          rows: resp.rows,\r\n        });\r\n\r\n        // console.log(resp.rows);\r\n      }\r\n    });\r\n  };\r\n\r\n  fileHandler = (event) => {\r\n    if (event.target.files.length) {\r\n      let fileObj = event.target.files[0];\r\n      let fileName = fileObj.name;\r\n\r\n      //check for file extension and pass only if it is .xlsx and display error message otherwise\r\n      if (fileName.slice(fileName.lastIndexOf(\".\") + 1) === \"xlsx\") {\r\n        this.setState({\r\n          uploadedFileName: fileName,\r\n          isFormInvalid: false,\r\n        });\r\n        this.renderFile(fileObj);\r\n      } else {\r\n        this.setState({\r\n          isFormInvalid: true,\r\n          uploadedFileName: \"\",\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  toggle() {\r\n    this.setState({\r\n      isOpen: !this.state.isOpen,\r\n    });\r\n\r\n  \r\n  }\r\n\r\n  openFileBrowser = () => {\r\n    this.fileInput.current.click();\r\n  };\r\n\r\n  converToDoctor(row) {\r\n    return {\r\n      id: null,\r\n      document: row[1] == \"\" || row[1] == null ? \"\" : row[1].toString(),\r\n      name: row[4] == \"\" || row[4] == null ? \"\" : row[4],\r\n      paternalSurname: row[2] == \"\" || row[2] == null ? \"\" : row[2],\r\n      maternalSurname: row[3] == \"\" || row[3] == null ? \"\" : row[3],\r\n      plaza: {\r\n        id: row[7].trim().toLowerCase() == \"libre\" ? 1 : 2,\r\n      },\r\n      campus: {\r\n        id: row[8],\r\n      },\r\n      birthDate:\r\n        row[9] == \"\" || row[9] == null ? null : this.excelDateToJSDate(row[9]),\r\n      //\"birthDate\" : null,\r\n      address: row[10] == \"\" || row[10] == null ? null : row[10],\r\n      cmp: row[11] == \"\" || row[11] == null ? null : row[11].toString(),\r\n      email: row[12] == \"\" || row[12] == null ? \"\" : row[12],\r\n      phone: row[13] == \"\" || row[13] == null ? \"\" : row[13].toString(),\r\n      schoolAgreement: {\r\n        school: {\r\n          shortName: row[5] == \"\" || row[5] == null ? null : row[5].toString(),\r\n        },\r\n      },\r\n      specialty: {\r\n        id: row[6],\r\n      },\r\n      status: true,\r\n      team: null,\r\n      nivel: {\r\n        id: 1,\r\n      },\r\n      registeredAt:\r\n        row[14] == \"\" || row[14] == null\r\n          ? null\r\n          : this.excelDateToJSDate(row[14]),\r\n    };\r\n  }\r\n\r\n  excelDateToJSDate(serial) {\r\n    var utc_days = Math.floor(serial - 25569);\r\n    var utc_value = utc_days * 86400;\r\n    var date_info = new Date(utc_value * 1000);\r\n\r\n    var fractional_day = serial - Math.floor(serial) + 0.0000001;\r\n\r\n    var total_seconds = Math.floor(86400 * fractional_day);\r\n\r\n    var seconds = total_seconds % 60;\r\n\r\n    total_seconds -= seconds;\r\n\r\n    var hours = Math.floor(total_seconds / (60 * 60));\r\n    var minutes = Math.floor(total_seconds / 60) % 60;\r\n\r\n    return new Date(\r\n      date_info.getFullYear(),\r\n      date_info.getMonth(),\r\n      date_info.getDate() + 1,\r\n      hours,\r\n      minutes,\r\n      seconds\r\n    );\r\n  }\r\n\r\n  saveImportedData = () => {\r\n    let lstDoctors = this.state.rows;\r\n    lstDoctors = lstDoctors.filter((doctor, key) => key > 0);\r\n    let transformedArr = lstDoctors.map(this.converToDoctor);\r\n    console.log(transformedArr);\r\n    this.props\r\n      .onImportdata(transformedArr)\r\n      .then((resp) => {\r\n        console.log(resp);\r\n        this.cleanState();\r\n        this.props.onListDoctors();\r\n        this.props.onOpenNotification(\r\n          \"Datos importados correctamente\",\r\n          \"\",\r\n          \"topRight\"\r\n        );\r\n        this.props.onVisibleModal();\r\n      })\r\n      .catch(function (err) {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Row>\r\n          <Col sm=\"4\">\r\n            {this.state.uploadedFileName ? (\r\n              <h3>Cargando archivo \"{this.state.uploadedFileName}\"</h3>\r\n            ) : (\r\n              <h3>Cargar Archivo Excel</h3>\r\n            )}\r\n          </Col>\r\n          <Col sm=\"4\">\r\n            <InputGroup>\r\n              <InputGroupAddon addonType=\"prepend\">\r\n                <Button\r\n                  onClick={this.openFileBrowser.bind(this)}\r\n                  type=\"primary\"\r\n                  size=\"large\"\r\n                >\r\n                  <i></i> Buscar...\r\n                </Button>\r\n                {this.state.dataLoaded && (\r\n                  <Button\r\n                    onClick={this.saveImportedData.bind(this)}\r\n                    type=\"primary\"\r\n                    size=\"large\"\r\n                    style={{ marginLeft: \"20px\" }}\r\n                  >\r\n                    <i></i>Guardar datos\r\n                  </Button>\r\n                )}\r\n                <input\r\n                  type=\"file\"\r\n                  hidden\r\n                  onChange={this.fileHandler.bind(this)}\r\n                  ref={this.fileInput}\r\n                  onClick={(event) => {\r\n                    event.target.value = null;\r\n                  }}\r\n                />\r\n              </InputGroupAddon>\r\n              <Input\r\n                type=\"text\"\r\n                value={this.state.uploadedFileName}\r\n                readOnly\r\n                invalid={this.state.isFormInvalid}\r\n                style={{ display: \"none\" }}\r\n              />\r\n              <FormFeedback>\r\n                <Fade\r\n                  in={this.state.isFormInvalid}\r\n                  tag=\"h6\"\r\n                  style={{ fontStyle: \"italic\" }}\r\n                >\r\n                  ! Selecciona solo un archivo .xlsx !\r\n                </Fade>\r\n              </FormFeedback>\r\n            </InputGroup>\r\n          </Col>\r\n        </Row>\r\n        {this.state.dataLoaded && (\r\n          <div>\r\n            <Card body outline color=\"secondary\" className=\"restrict-card\">\r\n              <OutTable\r\n                data={this.state.rows}\r\n                columns={this.state.cols}\r\n                tableClassName=\"ExcelTable2007\"\r\n                tableHeaderRowClass=\"heading\"\r\n              />\r\n            </Card>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ImportFromExcel;\r\n","F:\\Hospital Almenara\\Front\\almenara-reactapp\\src\\pages\\Proceso\\AsignarServicio2\\FormularioAsignarServicio.jsx",[],"F:\\Hospital Almenara\\Front\\almenara-reactapp\\src\\pages\\Reporte\\MedicoResidenteGrupo2\\index.jsx",["753","754","755","756","757","758","759","760","761","762","763","764","765","766","767","768","769","770","771","772"],"import { FilePdfTwoTone } from \"@ant-design/icons\";\r\nimport { Alert, Breadcrumb, Button, Empty, notification, Table } from \"antd\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport FormularioGrupo2 from \"./FormularioGrupo2\";\r\nimport TableGrupo2 from \"./TableGrupo2\";\r\nimport { getSpecialties } from \"../../../services/SpecialtyService\";\r\nimport { getAniosAcademicos } from \"../../../services/AnioAcademicoService\";\r\nimport { getServiciosWithSpecialityName } from \"../../../services/ServicioService\";\r\n\r\nimport {\r\n  getServiciosDoctor2,\r\n  getServiciosDoctorByAnioAndServicio2,\r\n  viewPdfServiciosDoctorByAnioAndServicio,\r\n  viewPdfServiciosDoctorFilterSpecialty,\r\n} from \"../../../services/ServicioDoctorService\";\r\n\r\nconst MedicoResidenteGrupo2 = () => {\r\n  const [serviciosDoctor, setServiciosDoctor] = useState([]);\r\n  const [idSpecialty, setIdSpecialty] = useState(null);\r\n  const [meses, setMeses] = useState([]);\r\n  const [specialties, setSpecialties] = useState([]);\r\n  const [aniosAcademico, setaniosAcademico] = useState(null);\r\n  const [doctoresFiltrados, setDoctoresFiltrados] = useState([]);\r\n  const [servicios, setServicios] = useState([]);\r\n\r\n  const [filterMesOn, setFilterMesOn] = useState(false);\r\n  const [idService, setidService] = useState(null);\r\n  const [idAnioAcademico, setIdAnioAcademico] = useState(null);\r\n  const [idMes, setIdMes] = useState(null);\r\n\r\n  const [filterServiceOn, setfilterServiceOn] = useState(false);\r\n  const [filterAnioAcademicoOn, setFilterAnioAcademicoOn] = useState(false);\r\n\r\n  const listar = () => {\r\n    getServiciosDoctor2().then(setServiciosDoctor);\r\n  };\r\n\r\n  function openNotification(msg, description, placement, type) {\r\n    if (type === \"exito\") {\r\n      notification.success({\r\n        message: msg,\r\n        description: description,\r\n        placement,\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (type === \"warning\") {\r\n      notification.warning({\r\n        message: msg,\r\n        description: description,\r\n        placement,\r\n      });\r\n      return;\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    getAniosAcademicos().then((data) => setaniosAcademico(data));\r\n    getServiciosWithSpecialityName().then((data) => setServicios(data));\r\n  }, []);\r\n\r\n  const FilterDoctorsByServicioAndYear = () => {\r\n    if (filterAnioAcademicoOn && filterServiceOn) {\r\n      getServiciosDoctorByAnioAndServicio2(idService, idAnioAcademico).then(\r\n        (data) => {\r\n          console.log(data);\r\n          setServiciosDoctor(data);\r\n        }\r\n      );\r\n    } else {\r\n      alert(\"no Selecionno los campos requeridos\");\r\n    }\r\n  };\r\n\r\n  const handleAnio = (id) => {\r\n    setIdAnioAcademico(id);\r\n    setFilterAnioAcademicoOn(true);\r\n  };\r\n  const handleService = (id) => {\r\n    setidService(id);\r\n    setfilterServiceOn(true);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <header>\r\n        <h2 className=\"title\">\r\n          <Breadcrumb>\r\n            <Breadcrumb.Item>Reporte</Breadcrumb.Item>\r\n            <Breadcrumb.Item>\r\n              Medicos Residentes de otras Especialidades por Periodo 2\r\n            </Breadcrumb.Item>\r\n          </Breadcrumb>\r\n        </h2>\r\n        <Button\r\n          type=\"dashed\"\r\n          color=\"red\"\r\n          size=\"large\"\r\n          danger\r\n          //   onClick={exportToPdf}\r\n        >\r\n          <FilePdfTwoTone twoToneColor=\"red\" /> Exportar a PDF\r\n        </Button>\r\n      </header>\r\n\r\n      <FormularioGrupo2\r\n        servicios={servicios}\r\n        idService={idService}\r\n        handleService={handleService}\r\n        idAnioAcademico={idAnioAcademico}\r\n        handleAnio={handleAnio}\r\n        aniosAcademico={aniosAcademico}\r\n        FilterDoctorsByServicioAndYear={FilterDoctorsByServicioAndYear}\r\n      />\r\n\r\n      {serviciosDoctor.length == 0 ? (\r\n        <Empty style={{marginTop:50}}/>\r\n      ) : (\r\n        <TableGrupo2\r\n          setServiciosDoctor={setServiciosDoctor}\r\n          serviciosDoctor={serviciosDoctor}\r\n          idService={idService}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MedicoResidenteGrupo2;\r\n","F:\\Hospital Almenara\\Front\\almenara-reactapp\\src\\pages\\Reporte\\MedicoResidenteGrupo2\\FormularioGrupo2.jsx",[],"F:\\Hospital Almenara\\Front\\almenara-reactapp\\src\\pages\\Reporte\\MedicoResidenteGrupo2\\TableGrupo2.jsx",["773","774","775","776","777"],"import { Empty } from \"antd\";\r\nimport React from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { getServiciosDoctor } from \"../../../services/ServicioDoctorService\";\r\nconst TableGrupo2 = ({ serviciosDoctor, idService }) => {\r\n\r\n\r\n  return (\r\n    <div className=\"table-responsive\" style={{ marginTop: 40 }}>\r\n      <table\r\n        className=\"table table-hover table-striped\"\r\n        border=\"1\"\r\n        style={{ textAlign: \"center\" }}\r\n      >\r\n        <thead>\r\n          <tr>\r\n            <th style={{ width: \"300px\" }}>Residente</th>\r\n            <th>Especialidad</th>\r\n            <th>NIV.</th>\r\n            <th>AÑO</th>\r\n            <th>DIC</th>\r\n            <th>ENE</th>\r\n            <th>FEB</th>\r\n            <th>MAR</th>\r\n            <th>ABR</th>\r\n            <th>MAY</th>\r\n            <th>JUN</th>\r\n            <th>JUL</th>\r\n            <th>AGO</th>\r\n            <th>SET</th>\r\n            <th>OCT</th>\r\n            <th>NOV</th>\r\n          </tr>\r\n        </thead>\r\n\r\n        <tbody>\r\n          {serviciosDoctor.lenght != 0 ? (\r\n            serviciosDoctor.map((data, key1) => (\r\n              <React.Fragment key={data.id}>\r\n                <tr>\r\n                  <td style={{ padding: \"10px 30px\", border: \"none\" }}>\r\n                    {`${data.doctor.name} ${data.doctor.lastname}`}-{\" \"}\r\n                    {data.doctor.schoolAgreement.school.shortName}\r\n                  </td>\r\n                  <td>{data.doctor.specialty.name}</td>\r\n                  {data.anioAcademicoDelegados.map((data2, key2) => (\r\n                    <React.Fragment key={data2.id}>\r\n                      <td>{data2.anioAcademico.codigo}</td>\r\n                      <td>\r\n                        {data2.anioAcademico.anioInicio} -{\" \"}\r\n                        {data2.anioAcademico.anioFinal}\r\n                      </td>\r\n\r\n                      {data2.servicioDelegados.map((data3, key3) => (\r\n                        <td\r\n                          key={String(\r\n                            data != null && data.id != null ? key1 : data.id\r\n                          )\r\n                            .concat(\r\n                              String(\r\n                                data2 != null && data2.id != null\r\n                                  ? key2\r\n                                  : data2.id\r\n                              )\r\n                            )\r\n                            .concat(\r\n                              String(\r\n                                data3 != null && data3.id != null\r\n                                  ? key3\r\n                                  : data3.id\r\n                              )\r\n                            )}\r\n                        >\r\n                          {data3.servicio != null\r\n                            ? data3.servicio.id == idService &&\r\n                              data3.servicio != null\r\n                              ? 1\r\n                              : null\r\n                            : null}\r\n                        </td>\r\n                      ))}\r\n                    </React.Fragment>\r\n                  ))}\r\n                </tr>\r\n              </React.Fragment>\r\n            ))\r\n          ) : (\r\n            <tr>\r\n              <td colSpan={6}>\"No hay Datos con esta\"</td>\r\n            </tr>\r\n          )}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TableGrupo2;\r\n","F:\\Hospital Almenara\\Front\\almenara-reactapp\\src\\pages\\Reporte\\Servicio2\\index.jsx",[],"F:\\Hospital Almenara\\reactdos\\alemanra\\src\\index.js",[],["778","779"],"F:\\Hospital Almenara\\reactdos\\alemanra\\src\\App.js",[],"F:\\Hospital Almenara\\reactdos\\alemanra\\src\\auth\\AuthContext.js",[],"F:\\Hospital Almenara\\reactdos\\alemanra\\src\\auth\\authReducer.js",[],"F:\\Hospital Almenara\\reactdos\\alemanra\\src\\config\\token.js",[],"F:\\Hospital Almenara\\reactdos\\alemanra\\src\\routers\\AppRouter.js",[],"F:\\Hospital Almenara\\reactdos\\alemanra\\src\\routers\\PrivateRoute.js",[],"F:\\Hospital Almenara\\reactdos\\alemanra\\src\\routers\\PublicRoute.js",[],"F:\\Hospital Almenara\\reactdos\\alemanra\\src\\config\\clienteAxios.js",[],"F:\\Hospital Almenara\\reactdos\\alemanra\\src\\routers\\DashboardRoutes.js",[],"F:\\Hospital Almenara\\reactdos\\alemanra\\src\\types\\types.js",[],"F:\\Hospital Almenara\\reactdos\\alemanra\\src\\pages\\Login\\index.js",[],"F:\\Hospital Almenara\\reactdos\\alemanra\\src\\pages\\Inicio\\index.js",[],"F:\\Hospital Almenara\\reactdos\\alemanra\\src\\pages\\Proceso\\AsignarGrupo\\index.js",[],"F:\\Hospital Almenara\\reactdos\\alemanra\\src\\pages\\Proceso\\AsignarServicio2\\index.js",["780","781","782","783","784","785","786","787","788"],"F:\\Hospital Almenara\\reactdos\\alemanra\\src\\pages\\Proceso\\AsignarServicio\\index.js",["789","790","791","792","793","794","795","796","797"],"F:\\Hospital Almenara\\reactdos\\alemanra\\src\\pages\\Proceso\\AsignarConvenio\\index.js",[],"F:\\Hospital Almenara\\reactdos\\alemanra\\src\\components\\Layout\\index.js",[],"F:\\Hospital Almenara\\reactdos\\alemanra\\src\\pages\\Mantenimiento\\Universidad\\index.js",["798","799"],"F:\\Hospital Almenara\\reactdos\\alemanra\\src\\pages\\Mantenimiento\\Especialidad\\index.js",["800"],"F:\\Hospital Almenara\\reactdos\\alemanra\\src\\pages\\Mantenimiento\\GrupoMant\\index.js",["801","802","803","804","805","806","807","808","809","810","811","812","813","814","815","816","817","818","819","820","821"],"F:\\Hospital Almenara\\reactdos\\alemanra\\src\\pages\\Mantenimiento\\Medico\\index.js",["822","823","824","825","826","827","828","829","830","831","832","833","834","835","836","837","838","839","840","841","842","843","844","845","846","847","848"],"F:\\Hospital Almenara\\reactdos\\alemanra\\src\\pages\\Mantenimiento\\Usuario\\index.js",["849","850","851","852","853","854","855","856","857"],"F:\\Hospital Almenara\\reactdos\\alemanra\\src\\pages\\Mantenimiento\\Servicio\\index.js",["858","859"],"F:\\Hospital Almenara\\reactdos\\alemanra\\src\\pages\\Mantenimiento\\Grupo\\index.js",["860","861","862","863","864","865","866","867","868","869","870","871","872","873","874","875","876","877","878","879","880","881","882","883"],"F:\\Hospital Almenara\\reactdos\\alemanra\\src\\pages\\Mantenimiento\\EspecialidadServicio\\index.js",["884","885"],"F:\\Hospital Almenara\\reactdos\\alemanra\\src\\pages\\Reporte\\Servicio\\index.js",["886"],"F:\\Hospital Almenara\\reactdos\\alemanra\\src\\pages\\Reporte\\Medico\\index.js",["887","888"],"F:\\Hospital Almenara\\reactdos\\alemanra\\src\\pages\\Mantenimiento\\Medico2\\index.js",["889","890","891","892","893","894","895","896","897","898","899","900","901","902","903","904","905","906","907","908","909","910","911","912","913","914","915"],"F:\\Hospital Almenara\\reactdos\\alemanra\\src\\pages\\Reporte\\Especialidad\\index.js",["916","917","918"],"F:\\Hospital Almenara\\reactdos\\alemanra\\src\\pages\\Reporte\\Servicio\\RotacionServiciosPorPeriodo\\index.js",["919","920","921","922","923","924","925"],"F:\\Hospital Almenara\\reactdos\\alemanra\\src\\services\\UserService.js",[],"F:\\Hospital Almenara\\reactdos\\alemanra\\src\\pages\\Reporte\\MedicoResidenteGrupo2\\index.jsx",["926","927","928","929","930","931","932","933","934","935","936","937","938","939","940","941","942","943","944","945"],"F:\\Hospital Almenara\\reactdos\\alemanra\\src\\pages\\Reporte\\Servicio2\\index.jsx",[],"F:\\Hospital Almenara\\reactdos\\alemanra\\src\\services\\SpecialtyService.js",[],"F:\\Hospital Almenara\\reactdos\\alemanra\\src\\services\\ServicioDoctorService.js",["946"],"F:\\Hospital Almenara\\reactdos\\alemanra\\src\\services\\ServicioDelegadoService.js",[],"F:\\Hospital Almenara\\reactdos\\alemanra\\src\\services\\DoctorService.js",[],"F:\\Hospital Almenara\\reactdos\\alemanra\\src\\services\\TeamService.js",[],"F:\\Hospital Almenara\\reactdos\\alemanra\\src\\services\\SchoolService.js",[],"F:\\Hospital Almenara\\reactdos\\alemanra\\src\\services\\MesService.js",[],"F:\\Hospital Almenara\\reactdos\\alemanra\\src\\services\\ServicioService.js",[],"F:\\Hospital Almenara\\reactdos\\alemanra\\src\\services\\AnioAcademicoService.js",[],"F:\\Hospital Almenara\\reactdos\\alemanra\\src\\services\\NivelService.js",[],"F:\\Hospital Almenara\\reactdos\\alemanra\\src\\services\\CampusService.js",[],"F:\\Hospital Almenara\\reactdos\\alemanra\\src\\pages\\Mantenimiento\\Medico2\\ImportFromExcel.js",["947","948","949","950","951","952","953","954","955","956","957","958","959","960","961","962","963","964"],"F:\\Hospital Almenara\\reactdos\\alemanra\\src\\services\\PlazaService.js",[],"F:\\Hospital Almenara\\reactdos\\alemanra\\src\\services\\SchoolAgreementService.js",[],"F:\\Hospital Almenara\\reactdos\\alemanra\\src\\components\\Grupos\\TableMesList.js",["965","966","967","968","969","970","971","972","973","974","975","976","977","978","979","980","981","982","983","984","985","986","987"],"F:\\Hospital Almenara\\reactdos\\alemanra\\src\\pages\\Mantenimiento\\Medico\\ImportFromExcel.js",["988","989","990","991","992","993","994","995","996","997","998","999","1000","1001","1002","1003","1004","1005"],"F:\\Hospital Almenara\\reactdos\\alemanra\\src\\services\\RoleService.js",[],"F:\\Hospital Almenara\\reactdos\\alemanra\\src\\pages\\Proceso\\AsignarServicio2\\TablaServicio2.jsx",["1006","1007"],"F:\\Hospital Almenara\\reactdos\\alemanra\\src\\pages\\Proceso\\AsignarServicio2\\Formulario.jsx",["1008","1009","1010","1011","1012","1013","1014","1015"],"F:\\Hospital Almenara\\reactdos\\alemanra\\src\\pages\\Proceso\\AsignarServicio2\\FormularioAsignarServicio.jsx",[],"F:\\Hospital Almenara\\reactdos\\alemanra\\src\\pages\\Reporte\\MedicoResidenteGrupo2\\TableGrupo2.jsx",["1016","1017","1018","1019","1020"],"F:\\Hospital Almenara\\reactdos\\alemanra\\src\\pages\\Reporte\\MedicoResidenteGrupo2\\FormularioGrupo2.jsx",[],"F:\\Hospital Almenara\\reactdos\\alemanra\\src\\components\\Sidebar\\index.js",["1021","1022"],"F:\\Hospital Almenara\\reactdos\\alemanra\\src\\components\\Header\\index.js",[],"F:\\Hospital Almenara\\reactdos\\alemanra\\src\\services\\MesDiaService.js",[],"F:\\Hospital Almenara\\reactdos\\alemanra\\src\\components\\Grupos\\TableMes.js",["1023","1024","1025","1026","1027","1028","1029"],"F:\\Hospital Almenara\\reactdos\\alemanra\\src\\components\\Grupos\\SelectTd.js",["1030","1031","1032","1033"],{"ruleId":"1034","replacedBy":"1035"},{"ruleId":"1036","replacedBy":"1037"},{"ruleId":"1038","severity":1,"message":"1039","line":14,"column":36,"nodeType":"1040","messageId":"1041","endLine":14,"endColumn":52},{"ruleId":"1038","severity":1,"message":"1042","line":29,"column":10,"nodeType":"1040","messageId":"1041","endLine":29,"endColumn":17},{"ruleId":"1038","severity":1,"message":"1043","line":1,"column":10,"nodeType":"1040","messageId":"1041","endLine":1,"endColumn":24},{"ruleId":"1038","severity":1,"message":"1044","line":16,"column":3,"nodeType":"1040","messageId":"1041","endLine":16,"endColumn":8},{"ruleId":"1038","severity":1,"message":"1045","line":18,"column":3,"nodeType":"1040","messageId":"1041","endLine":18,"endColumn":6},{"ruleId":"1038","severity":1,"message":"1046","line":19,"column":3,"nodeType":"1040","messageId":"1041","endLine":19,"endColumn":6},{"ruleId":"1047","severity":1,"message":"1048","line":60,"column":42,"nodeType":"1049","messageId":"1050","endLine":60,"endColumn":44},{"ruleId":"1038","severity":1,"message":"1051","line":169,"column":9,"nodeType":"1040","messageId":"1041","endLine":169,"endColumn":20},{"ruleId":"1038","severity":1,"message":"1052","line":188,"column":9,"nodeType":"1040","messageId":"1041","endLine":188,"endColumn":24},{"ruleId":"1047","severity":1,"message":"1048","line":192,"column":35,"nodeType":"1049","messageId":"1050","endLine":192,"endColumn":37},{"ruleId":"1047","severity":1,"message":"1048","line":356,"column":53,"nodeType":"1049","messageId":"1050","endLine":356,"endColumn":55},{"ruleId":"1038","severity":1,"message":"1042","line":29,"column":10,"nodeType":"1040","messageId":"1041","endLine":29,"endColumn":17},{"ruleId":"1053","severity":1,"message":"1054","line":177,"column":6,"nodeType":"1055","endLine":177,"endColumn":8,"suggestions":"1056"},{"ruleId":"1038","severity":1,"message":"1042","line":35,"column":10,"nodeType":"1040","messageId":"1041","endLine":35,"endColumn":17},{"ruleId":"1038","severity":1,"message":"1057","line":8,"column":3,"nodeType":"1040","messageId":"1041","endLine":8,"endColumn":8},{"ruleId":"1038","severity":1,"message":"1058","line":9,"column":3,"nodeType":"1040","messageId":"1041","endLine":9,"endColumn":6},{"ruleId":"1038","severity":1,"message":"1059","line":11,"column":3,"nodeType":"1040","messageId":"1041","endLine":11,"endColumn":8},{"ruleId":"1038","severity":1,"message":"1060","line":13,"column":3,"nodeType":"1040","messageId":"1041","endLine":13,"endColumn":15},{"ruleId":"1038","severity":1,"message":"1061","line":16,"column":22,"nodeType":"1040","messageId":"1041","endLine":16,"endColumn":38},{"ruleId":"1038","severity":1,"message":"1062","line":17,"column":3,"nodeType":"1040","messageId":"1041","endLine":17,"endColumn":15},{"ruleId":"1038","severity":1,"message":"1063","line":31,"column":10,"nodeType":"1040","messageId":"1041","endLine":31,"endColumn":20},{"ruleId":"1047","severity":1,"message":"1048","line":61,"column":42,"nodeType":"1049","messageId":"1050","endLine":61,"endColumn":44},{"ruleId":"1047","severity":1,"message":"1048","line":63,"column":45,"nodeType":"1049","messageId":"1050","endLine":63,"endColumn":47},{"ruleId":"1047","severity":1,"message":"1048","line":71,"column":42,"nodeType":"1049","messageId":"1050","endLine":71,"endColumn":44},{"ruleId":"1047","severity":1,"message":"1048","line":73,"column":45,"nodeType":"1049","messageId":"1050","endLine":73,"endColumn":47},{"ruleId":"1038","severity":1,"message":"1064","line":113,"column":9,"nodeType":"1040","messageId":"1041","endLine":113,"endColumn":21},{"ruleId":"1038","severity":1,"message":"1065","line":118,"column":9,"nodeType":"1040","messageId":"1041","endLine":118,"endColumn":27},{"ruleId":"1047","severity":1,"message":"1048","line":129,"column":12,"nodeType":"1049","messageId":"1050","endLine":129,"endColumn":14},{"ruleId":"1047","severity":1,"message":"1048","line":134,"column":12,"nodeType":"1049","messageId":"1050","endLine":134,"endColumn":14},{"ruleId":"1066","severity":1,"message":"1067","line":146,"column":24,"nodeType":"1068","messageId":"1069","endLine":146,"endColumn":26},{"ruleId":"1047","severity":1,"message":"1048","line":147,"column":15,"nodeType":"1049","messageId":"1050","endLine":147,"endColumn":17},{"ruleId":"1066","severity":1,"message":"1067","line":161,"column":18,"nodeType":"1068","messageId":"1069","endLine":161,"endColumn":20},{"ruleId":"1047","severity":1,"message":"1048","line":163,"column":20,"nodeType":"1049","messageId":"1050","endLine":163,"endColumn":22},{"ruleId":"1070","severity":1,"message":"1071","line":346,"column":139,"nodeType":"1072","messageId":"1050","endLine":346,"endColumn":144},{"ruleId":"1070","severity":1,"message":"1071","line":348,"column":139,"nodeType":"1072","messageId":"1050","endLine":348,"endColumn":144},{"ruleId":"1070","severity":1,"message":"1071","line":350,"column":139,"nodeType":"1072","messageId":"1050","endLine":350,"endColumn":144},{"ruleId":"1047","severity":1,"message":"1048","line":369,"column":32,"nodeType":"1049","messageId":"1050","endLine":369,"endColumn":34},{"ruleId":"1047","severity":1,"message":"1048","line":373,"column":35,"nodeType":"1049","messageId":"1050","endLine":373,"endColumn":37},{"ruleId":"1038","severity":1,"message":"1073","line":17,"column":10,"nodeType":"1040","messageId":"1041","endLine":17,"endColumn":21},{"ruleId":"1038","severity":1,"message":"1074","line":18,"column":33,"nodeType":"1040","messageId":"1041","endLine":18,"endColumn":41},{"ruleId":"1038","severity":1,"message":"1075","line":23,"column":10,"nodeType":"1040","messageId":"1041","endLine":23,"endColumn":16},{"ruleId":"1038","severity":1,"message":"1042","line":42,"column":10,"nodeType":"1040","messageId":"1041","endLine":42,"endColumn":17},{"ruleId":"1038","severity":1,"message":"1076","line":82,"column":12,"nodeType":"1040","messageId":"1041","endLine":82,"endColumn":30},{"ruleId":"1047","severity":1,"message":"1048","line":136,"column":23,"nodeType":"1049","messageId":"1050","endLine":136,"endColumn":25},{"ruleId":"1047","severity":1,"message":"1048","line":136,"column":42,"nodeType":"1049","messageId":"1050","endLine":136,"endColumn":44},{"ruleId":"1047","severity":1,"message":"1048","line":151,"column":28,"nodeType":"1049","messageId":"1050","endLine":151,"endColumn":30},{"ruleId":"1047","severity":1,"message":"1048","line":151,"column":50,"nodeType":"1049","messageId":"1050","endLine":151,"endColumn":52},{"ruleId":"1038","severity":1,"message":"1044","line":3,"column":15,"nodeType":"1040","messageId":"1041","endLine":3,"endColumn":20},{"ruleId":"1038","severity":1,"message":"1058","line":8,"column":3,"nodeType":"1040","messageId":"1041","endLine":8,"endColumn":6},{"ruleId":"1038","severity":1,"message":"1059","line":10,"column":3,"nodeType":"1040","messageId":"1041","endLine":10,"endColumn":8},{"ruleId":"1038","severity":1,"message":"1060","line":12,"column":3,"nodeType":"1040","messageId":"1041","endLine":12,"endColumn":15},{"ruleId":"1038","severity":1,"message":"1077","line":15,"column":10,"nodeType":"1040","messageId":"1041","endLine":15,"endColumn":22},{"ruleId":"1038","severity":1,"message":"1078","line":15,"column":24,"nodeType":"1040","messageId":"1041","endLine":15,"endColumn":34},{"ruleId":"1038","severity":1,"message":"1039","line":15,"column":36,"nodeType":"1040","messageId":"1041","endLine":15,"endColumn":52},{"ruleId":"1038","severity":1,"message":"1079","line":16,"column":10,"nodeType":"1040","messageId":"1041","endLine":16,"endColumn":20},{"ruleId":"1038","severity":1,"message":"1061","line":16,"column":22,"nodeType":"1040","messageId":"1041","endLine":16,"endColumn":38},{"ruleId":"1038","severity":1,"message":"1080","line":16,"column":40,"nodeType":"1040","messageId":"1041","endLine":16,"endColumn":60},{"ruleId":"1038","severity":1,"message":"1081","line":16,"column":62,"nodeType":"1040","messageId":"1041","endLine":16,"endColumn":85},{"ruleId":"1038","severity":1,"message":"1082","line":16,"column":87,"nodeType":"1040","messageId":"1041","endLine":16,"endColumn":110},{"ruleId":"1038","severity":1,"message":"1062","line":17,"column":3,"nodeType":"1040","messageId":"1041","endLine":17,"endColumn":15},{"ruleId":"1038","severity":1,"message":"1083","line":17,"column":17,"nodeType":"1040","messageId":"1041","endLine":17,"endColumn":34},{"ruleId":"1038","severity":1,"message":"1084","line":17,"column":36,"nodeType":"1040","messageId":"1041","endLine":17,"endColumn":53},{"ruleId":"1038","severity":1,"message":"1085","line":19,"column":22,"nodeType":"1040","messageId":"1041","endLine":19,"endColumn":33},{"ruleId":"1038","severity":1,"message":"1086","line":19,"column":35,"nodeType":"1040","messageId":"1041","endLine":19,"endColumn":50},{"ruleId":"1038","severity":1,"message":"1087","line":43,"column":10,"nodeType":"1040","messageId":"1041","endLine":43,"endColumn":16},{"ruleId":"1047","severity":1,"message":"1048","line":82,"column":28,"nodeType":"1049","messageId":"1050","endLine":82,"endColumn":30},{"ruleId":"1047","severity":1,"message":"1048","line":192,"column":10,"nodeType":"1049","messageId":"1050","endLine":192,"endColumn":12},{"ruleId":"1047","severity":1,"message":"1048","line":196,"column":10,"nodeType":"1049","messageId":"1050","endLine":196,"endColumn":12},{"ruleId":"1038","severity":1,"message":"1088","line":16,"column":3,"nodeType":"1040","messageId":"1041","endLine":16,"endColumn":10},{"ruleId":"1038","severity":1,"message":"1089","line":18,"column":3,"nodeType":"1040","messageId":"1041","endLine":18,"endColumn":9},{"ruleId":"1038","severity":1,"message":"1090","line":24,"column":3,"nodeType":"1040","messageId":"1041","endLine":24,"endColumn":22},{"ruleId":"1038","severity":1,"message":"1091","line":25,"column":3,"nodeType":"1040","messageId":"1041","endLine":25,"endColumn":17},{"ruleId":"1038","severity":1,"message":"1092","line":28,"column":10,"nodeType":"1040","messageId":"1041","endLine":28,"endColumn":18},{"ruleId":"1038","severity":1,"message":"1042","line":69,"column":10,"nodeType":"1040","messageId":"1041","endLine":69,"endColumn":17},{"ruleId":"1038","severity":1,"message":"1093","line":83,"column":10,"nodeType":"1040","messageId":"1041","endLine":83,"endColumn":15},{"ruleId":"1038","severity":1,"message":"1094","line":86,"column":10,"nodeType":"1040","messageId":"1041","endLine":86,"endColumn":16},{"ruleId":"1038","severity":1,"message":"1095","line":86,"column":18,"nodeType":"1040","messageId":"1041","endLine":86,"endColumn":25},{"ruleId":"1038","severity":1,"message":"1096","line":87,"column":10,"nodeType":"1040","messageId":"1041","endLine":87,"endColumn":20},{"ruleId":"1038","severity":1,"message":"1097","line":88,"column":10,"nodeType":"1040","messageId":"1041","endLine":88,"endColumn":23},{"ruleId":"1038","severity":1,"message":"1098","line":89,"column":10,"nodeType":"1040","messageId":"1041","endLine":89,"endColumn":14},{"ruleId":"1038","severity":1,"message":"1099","line":90,"column":10,"nodeType":"1040","messageId":"1041","endLine":90,"endColumn":14},{"ruleId":"1038","severity":1,"message":"1100","line":91,"column":10,"nodeType":"1040","messageId":"1041","endLine":91,"endColumn":26},{"ruleId":"1047","severity":1,"message":"1048","line":113,"column":51,"nodeType":"1049","messageId":"1050","endLine":113,"endColumn":53},{"ruleId":"1047","severity":1,"message":"1048","line":117,"column":51,"nodeType":"1049","messageId":"1050","endLine":117,"endColumn":53},{"ruleId":"1047","severity":1,"message":"1048","line":121,"column":59,"nodeType":"1049","messageId":"1050","endLine":121,"endColumn":61},{"ruleId":"1047","severity":1,"message":"1048","line":125,"column":55,"nodeType":"1049","messageId":"1050","endLine":125,"endColumn":57},{"ruleId":"1047","severity":1,"message":"1048","line":230,"column":24,"nodeType":"1049","messageId":"1050","endLine":230,"endColumn":26},{"ruleId":"1047","severity":1,"message":"1048","line":230,"column":43,"nodeType":"1049","messageId":"1050","endLine":230,"endColumn":45},{"ruleId":"1047","severity":1,"message":"1048","line":248,"column":31,"nodeType":"1049","messageId":"1050","endLine":248,"endColumn":33},{"ruleId":"1047","severity":1,"message":"1048","line":248,"column":53,"nodeType":"1049","messageId":"1050","endLine":248,"endColumn":55},{"ruleId":"1047","severity":1,"message":"1048","line":268,"column":31,"nodeType":"1049","messageId":"1050","endLine":268,"endColumn":33},{"ruleId":"1038","severity":1,"message":"1101","line":274,"column":12,"nodeType":"1040","messageId":"1041","endLine":274,"endColumn":26},{"ruleId":"1038","severity":1,"message":"1102","line":539,"column":9,"nodeType":"1040","messageId":"1041","endLine":539,"endColumn":28},{"ruleId":"1038","severity":1,"message":"1103","line":581,"column":9,"nodeType":"1040","messageId":"1041","endLine":581,"endColumn":14},{"ruleId":"1038","severity":1,"message":"1104","line":617,"column":9,"nodeType":"1040","messageId":"1041","endLine":617,"endColumn":20},{"ruleId":"1038","severity":1,"message":"1105","line":3,"column":10,"nodeType":"1040","messageId":"1041","endLine":3,"endColumn":22},{"ruleId":"1038","severity":1,"message":"1042","line":9,"column":10,"nodeType":"1040","messageId":"1041","endLine":9,"endColumn":17},{"ruleId":"1038","severity":1,"message":"1106","line":51,"column":10,"nodeType":"1040","messageId":"1041","endLine":51,"endColumn":16},{"ruleId":"1038","severity":1,"message":"1107","line":54,"column":30,"nodeType":"1040","messageId":"1041","endLine":54,"endColumn":51},{"ruleId":"1038","severity":1,"message":"1043","line":1,"column":10,"nodeType":"1040","messageId":"1041","endLine":1,"endColumn":24},{"ruleId":"1038","severity":1,"message":"1108","line":3,"column":17,"nodeType":"1040","messageId":"1041","endLine":3,"endColumn":23},{"ruleId":"1038","severity":1,"message":"1109","line":55,"column":9,"nodeType":"1040","messageId":"1041","endLine":55,"endColumn":22},{"ruleId":"1038","severity":1,"message":"1110","line":7,"column":3,"nodeType":"1040","messageId":"1041","endLine":7,"endColumn":40},{"ruleId":"1038","severity":1,"message":"1111","line":13,"column":10,"nodeType":"1040","messageId":"1041","endLine":13,"endColumn":24},{"ruleId":"1038","severity":1,"message":"1112","line":18,"column":10,"nodeType":"1040","messageId":"1041","endLine":18,"endColumn":15},{"ruleId":"1038","severity":1,"message":"1113","line":22,"column":10,"nodeType":"1040","messageId":"1041","endLine":22,"endColumn":21},{"ruleId":"1038","severity":1,"message":"1114","line":25,"column":10,"nodeType":"1040","messageId":"1041","endLine":25,"endColumn":15},{"ruleId":"1038","severity":1,"message":"1115","line":65,"column":9,"nodeType":"1040","messageId":"1041","endLine":65,"endColumn":20},{"ruleId":"1047","severity":1,"message":"1048","line":237,"column":53,"nodeType":"1049","messageId":"1050","endLine":237,"endColumn":55},{"ruleId":"1047","severity":1,"message":"1048","line":167,"column":53,"nodeType":"1049","messageId":"1050","endLine":167,"endColumn":55},{"ruleId":"1038","severity":1,"message":"1116","line":18,"column":7,"nodeType":"1040","messageId":"1041","endLine":18,"endColumn":36},{"ruleId":"1038","severity":1,"message":"1044","line":2,"column":10,"nodeType":"1040","messageId":"1041","endLine":2,"endColumn":15},{"ruleId":"1038","severity":1,"message":"1117","line":5,"column":3,"nodeType":"1040","messageId":"1041","endLine":5,"endColumn":12},{"ruleId":"1038","severity":1,"message":"1118","line":11,"column":3,"nodeType":"1040","messageId":"1041","endLine":11,"endColumn":12},{"ruleId":"1038","severity":1,"message":"1119","line":12,"column":3,"nodeType":"1040","messageId":"1041","endLine":12,"endColumn":8},{"ruleId":"1038","severity":1,"message":"1120","line":18,"column":8,"nodeType":"1040","messageId":"1041","endLine":18,"endColumn":14},{"ruleId":"1038","severity":1,"message":"1121","line":21,"column":7,"nodeType":"1040","messageId":"1041","endLine":21,"endColumn":27},{"ruleId":"1047","severity":1,"message":"1048","line":158,"column":24,"nodeType":"1049","messageId":"1050","endLine":158,"endColumn":26},{"ruleId":"1047","severity":1,"message":"1048","line":159,"column":20,"nodeType":"1049","messageId":"1050","endLine":159,"endColumn":22},{"ruleId":"1047","severity":1,"message":"1048","line":160,"column":31,"nodeType":"1049","messageId":"1050","endLine":160,"endColumn":33},{"ruleId":"1047","severity":1,"message":"1048","line":161,"column":31,"nodeType":"1049","messageId":"1050","endLine":161,"endColumn":33},{"ruleId":"1047","severity":1,"message":"1048","line":163,"column":41,"nodeType":"1049","messageId":"1050","endLine":163,"endColumn":43},{"ruleId":"1047","severity":1,"message":"1048","line":169,"column":16,"nodeType":"1049","messageId":"1050","endLine":169,"endColumn":18},{"ruleId":"1047","severity":1,"message":"1048","line":171,"column":24,"nodeType":"1049","messageId":"1050","endLine":171,"endColumn":26},{"ruleId":"1047","severity":1,"message":"1048","line":172,"column":20,"nodeType":"1049","messageId":"1050","endLine":172,"endColumn":22},{"ruleId":"1047","severity":1,"message":"1048","line":173,"column":22,"nodeType":"1049","messageId":"1050","endLine":173,"endColumn":24},{"ruleId":"1047","severity":1,"message":"1048","line":174,"column":22,"nodeType":"1049","messageId":"1050","endLine":174,"endColumn":24},{"ruleId":"1047","severity":1,"message":"1048","line":177,"column":29,"nodeType":"1049","messageId":"1050","endLine":177,"endColumn":31},{"ruleId":"1047","severity":1,"message":"1048","line":189,"column":17,"nodeType":"1049","messageId":"1050","endLine":189,"endColumn":19},{"ruleId":"1038","severity":1,"message":"1105","line":2,"column":26,"nodeType":"1040","messageId":"1041","endLine":2,"endColumn":38},{"ruleId":"1038","severity":1,"message":"1122","line":8,"column":10,"nodeType":"1040","messageId":"1041","endLine":8,"endColumn":18},{"ruleId":"1038","severity":1,"message":"1123","line":10,"column":5,"nodeType":"1040","messageId":"1041","endLine":10,"endColumn":20},{"ruleId":"1038","severity":1,"message":"1124","line":78,"column":10,"nodeType":"1040","messageId":"1041","endLine":78,"endColumn":17},{"ruleId":"1038","severity":1,"message":"1125","line":85,"column":26,"nodeType":"1040","messageId":"1041","endLine":85,"endColumn":43},{"ruleId":"1038","severity":1,"message":"1087","line":86,"column":10,"nodeType":"1040","messageId":"1041","endLine":86,"endColumn":16},{"ruleId":"1038","severity":1,"message":"1126","line":86,"column":18,"nodeType":"1040","messageId":"1041","endLine":86,"endColumn":27},{"ruleId":"1038","severity":1,"message":"1127","line":91,"column":10,"nodeType":"1040","messageId":"1041","endLine":91,"endColumn":28},{"ruleId":"1038","severity":1,"message":"1115","line":99,"column":9,"nodeType":"1040","messageId":"1041","endLine":99,"endColumn":20},{"ruleId":"1038","severity":1,"message":"1128","line":101,"column":9,"nodeType":"1040","messageId":"1041","endLine":101,"endColumn":16},{"ruleId":"1038","severity":1,"message":"1129","line":105,"column":12,"nodeType":"1040","messageId":"1041","endLine":105,"endColumn":17},{"ruleId":"1038","severity":1,"message":"1128","line":106,"column":9,"nodeType":"1040","messageId":"1041","endLine":106,"endColumn":16},{"ruleId":"1047","severity":1,"message":"1130","line":121,"column":13,"nodeType":"1049","messageId":"1050","endLine":121,"endColumn":15},{"ruleId":"1047","severity":1,"message":"1130","line":121,"column":57,"nodeType":"1049","messageId":"1050","endLine":121,"endColumn":59},{"ruleId":"1047","severity":1,"message":"1130","line":140,"column":13,"nodeType":"1049","messageId":"1050","endLine":140,"endColumn":15},{"ruleId":"1047","severity":1,"message":"1130","line":140,"column":27,"nodeType":"1049","messageId":"1050","endLine":140,"endColumn":29},{"ruleId":"1047","severity":1,"message":"1048","line":142,"column":14,"nodeType":"1049","messageId":"1050","endLine":142,"endColumn":16},{"ruleId":"1047","severity":1,"message":"1130","line":165,"column":17,"nodeType":"1049","messageId":"1050","endLine":165,"endColumn":19},{"ruleId":"1047","severity":1,"message":"1130","line":165,"column":31,"nodeType":"1049","messageId":"1050","endLine":165,"endColumn":33},{"ruleId":"1047","severity":1,"message":"1130","line":185,"column":59,"nodeType":"1049","messageId":"1050","endLine":185,"endColumn":61},{"ruleId":"1047","severity":1,"message":"1130","line":185,"column":73,"nodeType":"1049","messageId":"1050","endLine":185,"endColumn":75},{"ruleId":"1047","severity":1,"message":"1130","line":185,"column":86,"nodeType":"1049","messageId":"1050","endLine":185,"endColumn":88},{"ruleId":"1047","severity":1,"message":"1048","line":194,"column":16,"nodeType":"1049","messageId":"1050","endLine":194,"endColumn":18},{"ruleId":"1038","severity":1,"message":"1131","line":9,"column":10,"nodeType":"1040","messageId":"1041","endLine":9,"endColumn":17},{"ruleId":"1038","severity":1,"message":"1132","line":9,"column":19,"nodeType":"1040","messageId":"1041","endLine":9,"endColumn":29},{"ruleId":"1038","severity":1,"message":"1133","line":9,"column":5,"nodeType":"1040","messageId":"1041","endLine":9,"endColumn":15},{"ruleId":"1038","severity":1,"message":"1134","line":22,"column":7,"nodeType":"1040","messageId":"1041","endLine":22,"endColumn":11},{"ruleId":"1038","severity":1,"message":"1135","line":23,"column":7,"nodeType":"1040","messageId":"1041","endLine":23,"endColumn":15},{"ruleId":"1038","severity":1,"message":"1136","line":24,"column":7,"nodeType":"1040","messageId":"1041","endLine":24,"endColumn":15},{"ruleId":"1038","severity":1,"message":"1137","line":25,"column":7,"nodeType":"1040","messageId":"1041","endLine":25,"endColumn":10},{"ruleId":"1038","severity":1,"message":"1138","line":26,"column":7,"nodeType":"1040","messageId":"1041","endLine":26,"endColumn":12},{"ruleId":"1038","severity":1,"message":"1139","line":27,"column":7,"nodeType":"1040","messageId":"1041","endLine":27,"endColumn":10},{"ruleId":"1038","severity":1,"message":"1093","line":8,"column":5,"nodeType":"1040","messageId":"1041","endLine":8,"endColumn":10},{"ruleId":"1038","severity":1,"message":"1140","line":13,"column":10,"nodeType":"1040","messageId":"1041","endLine":13,"endColumn":18},{"ruleId":"1038","severity":1,"message":"1141","line":13,"column":20,"nodeType":"1040","messageId":"1041","endLine":13,"endColumn":31},{"ruleId":"1053","severity":1,"message":"1142","line":74,"column":6,"nodeType":"1055","endLine":74,"endColumn":16,"suggestions":"1143"},{"ruleId":"1034","replacedBy":"1144"},{"ruleId":"1036","replacedBy":"1145"},{"ruleId":"1038","severity":1,"message":"1146","line":1,"column":22,"nodeType":"1040","messageId":"1041","endLine":1,"endColumn":28},{"ruleId":"1038","severity":1,"message":"1147","line":1,"column":44,"nodeType":"1040","messageId":"1041","endLine":1,"endColumn":50},{"ruleId":"1038","severity":1,"message":"1043","line":2,"column":10,"nodeType":"1040","messageId":"1041","endLine":2,"endColumn":24},{"ruleId":"1038","severity":1,"message":"1105","line":2,"column":26,"nodeType":"1040","messageId":"1041","endLine":2,"endColumn":38},{"ruleId":"1038","severity":1,"message":"1148","line":3,"column":8,"nodeType":"1040","messageId":"1041","endLine":3,"endColumn":12},{"ruleId":"1047","severity":1,"message":"1048","line":50,"column":42,"nodeType":"1049","messageId":"1050","endLine":50,"endColumn":44},{"ruleId":"1038","severity":1,"message":"1149","line":153,"column":9,"nodeType":"1040","messageId":"1041","endLine":153,"endColumn":30},{"ruleId":"1038","severity":1,"message":"1051","line":159,"column":9,"nodeType":"1040","messageId":"1041","endLine":159,"endColumn":20},{"ruleId":"1038","severity":1,"message":"1115","line":167,"column":9,"nodeType":"1040","messageId":"1041","endLine":167,"endColumn":20},{"ruleId":"1038","severity":1,"message":"1150","line":3,"column":3,"nodeType":"1040","messageId":"1041","endLine":3,"endColumn":13},{"ruleId":"1038","severity":1,"message":"1151","line":6,"column":3,"nodeType":"1040","messageId":"1041","endLine":6,"endColumn":8},{"ruleId":"1038","severity":1,"message":"1044","line":7,"column":3,"nodeType":"1040","messageId":"1041","endLine":7,"endColumn":8},{"ruleId":"1038","severity":1,"message":"1152","line":8,"column":3,"nodeType":"1040","messageId":"1041","endLine":8,"endColumn":8},{"ruleId":"1038","severity":1,"message":"1045","line":9,"column":3,"nodeType":"1040","messageId":"1041","endLine":9,"endColumn":6},{"ruleId":"1038","severity":1,"message":"1046","line":10,"column":3,"nodeType":"1040","messageId":"1041","endLine":10,"endColumn":6},{"ruleId":"1038","severity":1,"message":"1153","line":11,"column":3,"nodeType":"1040","messageId":"1041","endLine":11,"endColumn":9},{"ruleId":"1038","severity":1,"message":"1154","line":12,"column":3,"nodeType":"1040","messageId":"1041","endLine":12,"endColumn":15},{"ruleId":"1038","severity":1,"message":"1155","line":2,"column":25,"nodeType":"1040","messageId":"1041","endLine":2,"endColumn":29},{"ruleId":"1047","severity":1,"message":"1048","line":97,"column":47,"nodeType":"1049","messageId":"1050","endLine":97,"endColumn":49},{"ruleId":"1038","severity":1,"message":"1088","line":16,"column":3,"nodeType":"1040","messageId":"1041","endLine":16,"endColumn":10},{"ruleId":"1038","severity":1,"message":"1089","line":18,"column":3,"nodeType":"1040","messageId":"1041","endLine":18,"endColumn":9},{"ruleId":"1038","severity":1,"message":"1090","line":24,"column":3,"nodeType":"1040","messageId":"1041","endLine":24,"endColumn":22},{"ruleId":"1038","severity":1,"message":"1091","line":25,"column":3,"nodeType":"1040","messageId":"1041","endLine":25,"endColumn":17},{"ruleId":"1038","severity":1,"message":"1092","line":28,"column":10,"nodeType":"1040","messageId":"1041","endLine":28,"endColumn":18},{"ruleId":"1038","severity":1,"message":"1042","line":69,"column":10,"nodeType":"1040","messageId":"1041","endLine":69,"endColumn":17},{"ruleId":"1038","severity":1,"message":"1093","line":83,"column":10,"nodeType":"1040","messageId":"1041","endLine":83,"endColumn":15},{"ruleId":"1038","severity":1,"message":"1094","line":86,"column":10,"nodeType":"1040","messageId":"1041","endLine":86,"endColumn":16},{"ruleId":"1038","severity":1,"message":"1095","line":86,"column":18,"nodeType":"1040","messageId":"1041","endLine":86,"endColumn":25},{"ruleId":"1038","severity":1,"message":"1096","line":87,"column":10,"nodeType":"1040","messageId":"1041","endLine":87,"endColumn":20},{"ruleId":"1038","severity":1,"message":"1097","line":88,"column":10,"nodeType":"1040","messageId":"1041","endLine":88,"endColumn":23},{"ruleId":"1038","severity":1,"message":"1098","line":89,"column":10,"nodeType":"1040","messageId":"1041","endLine":89,"endColumn":14},{"ruleId":"1038","severity":1,"message":"1099","line":90,"column":10,"nodeType":"1040","messageId":"1041","endLine":90,"endColumn":14},{"ruleId":"1038","severity":1,"message":"1100","line":91,"column":10,"nodeType":"1040","messageId":"1041","endLine":91,"endColumn":26},{"ruleId":"1047","severity":1,"message":"1048","line":113,"column":51,"nodeType":"1049","messageId":"1050","endLine":113,"endColumn":53},{"ruleId":"1047","severity":1,"message":"1048","line":117,"column":51,"nodeType":"1049","messageId":"1050","endLine":117,"endColumn":53},{"ruleId":"1047","severity":1,"message":"1048","line":121,"column":59,"nodeType":"1049","messageId":"1050","endLine":121,"endColumn":61},{"ruleId":"1047","severity":1,"message":"1048","line":125,"column":55,"nodeType":"1049","messageId":"1050","endLine":125,"endColumn":57},{"ruleId":"1047","severity":1,"message":"1048","line":230,"column":24,"nodeType":"1049","messageId":"1050","endLine":230,"endColumn":26},{"ruleId":"1047","severity":1,"message":"1048","line":230,"column":43,"nodeType":"1049","messageId":"1050","endLine":230,"endColumn":45},{"ruleId":"1047","severity":1,"message":"1048","line":248,"column":31,"nodeType":"1049","messageId":"1050","endLine":248,"endColumn":33},{"ruleId":"1047","severity":1,"message":"1048","line":248,"column":53,"nodeType":"1049","messageId":"1050","endLine":248,"endColumn":55},{"ruleId":"1047","severity":1,"message":"1048","line":268,"column":31,"nodeType":"1049","messageId":"1050","endLine":268,"endColumn":33},{"ruleId":"1038","severity":1,"message":"1101","line":274,"column":12,"nodeType":"1040","messageId":"1041","endLine":274,"endColumn":26},{"ruleId":"1038","severity":1,"message":"1102","line":539,"column":9,"nodeType":"1040","messageId":"1041","endLine":539,"endColumn":28},{"ruleId":"1038","severity":1,"message":"1103","line":568,"column":9,"nodeType":"1040","messageId":"1041","endLine":568,"endColumn":14},{"ruleId":"1038","severity":1,"message":"1104","line":599,"column":9,"nodeType":"1040","messageId":"1041","endLine":599,"endColumn":20},{"ruleId":"1038","severity":1,"message":"1044","line":2,"column":10,"nodeType":"1040","messageId":"1041","endLine":2,"endColumn":15},{"ruleId":"1038","severity":1,"message":"1117","line":5,"column":3,"nodeType":"1040","messageId":"1041","endLine":5,"endColumn":12},{"ruleId":"1038","severity":1,"message":"1118","line":11,"column":3,"nodeType":"1040","messageId":"1041","endLine":11,"endColumn":12},{"ruleId":"1038","severity":1,"message":"1119","line":12,"column":3,"nodeType":"1040","messageId":"1041","endLine":12,"endColumn":8},{"ruleId":"1038","severity":1,"message":"1120","line":18,"column":8,"nodeType":"1040","messageId":"1041","endLine":18,"endColumn":14},{"ruleId":"1038","severity":1,"message":"1121","line":21,"column":7,"nodeType":"1040","messageId":"1041","endLine":21,"endColumn":27},{"ruleId":"1047","severity":1,"message":"1048","line":164,"column":24,"nodeType":"1049","messageId":"1050","endLine":164,"endColumn":26},{"ruleId":"1047","severity":1,"message":"1048","line":165,"column":20,"nodeType":"1049","messageId":"1050","endLine":165,"endColumn":22},{"ruleId":"1047","severity":1,"message":"1048","line":166,"column":31,"nodeType":"1049","messageId":"1050","endLine":166,"endColumn":33},{"ruleId":"1047","severity":1,"message":"1048","line":167,"column":31,"nodeType":"1049","messageId":"1050","endLine":167,"endColumn":33},{"ruleId":"1047","severity":1,"message":"1048","line":169,"column":41,"nodeType":"1049","messageId":"1050","endLine":169,"endColumn":43},{"ruleId":"1047","severity":1,"message":"1048","line":175,"column":16,"nodeType":"1049","messageId":"1050","endLine":175,"endColumn":18},{"ruleId":"1047","severity":1,"message":"1048","line":177,"column":24,"nodeType":"1049","messageId":"1050","endLine":177,"endColumn":26},{"ruleId":"1047","severity":1,"message":"1048","line":178,"column":20,"nodeType":"1049","messageId":"1050","endLine":178,"endColumn":22},{"ruleId":"1047","severity":1,"message":"1048","line":179,"column":22,"nodeType":"1049","messageId":"1050","endLine":179,"endColumn":24},{"ruleId":"1047","severity":1,"message":"1048","line":180,"column":22,"nodeType":"1049","messageId":"1050","endLine":180,"endColumn":24},{"ruleId":"1047","severity":1,"message":"1048","line":183,"column":29,"nodeType":"1049","messageId":"1050","endLine":183,"endColumn":31},{"ruleId":"1047","severity":1,"message":"1048","line":195,"column":17,"nodeType":"1049","messageId":"1050","endLine":195,"endColumn":19},{"ruleId":"1038","severity":1,"message":"1156","line":2,"column":10,"nodeType":"1040","messageId":"1041","endLine":2,"endColumn":15},{"ruleId":"1038","severity":1,"message":"1057","line":2,"column":58,"nodeType":"1040","messageId":"1041","endLine":2,"endColumn":63},{"ruleId":"1038","severity":1,"message":"1111","line":6,"column":10,"nodeType":"1040","messageId":"1041","endLine":6,"endColumn":24},{"ruleId":"1038","severity":1,"message":"1157","line":13,"column":3,"nodeType":"1040","messageId":"1041","endLine":13,"endColumn":42},{"ruleId":"1038","severity":1,"message":"1110","line":14,"column":3,"nodeType":"1040","messageId":"1041","endLine":14,"endColumn":40},{"ruleId":"1038","severity":1,"message":"1158","line":19,"column":10,"nodeType":"1040","messageId":"1041","endLine":19,"endColumn":21},{"ruleId":"1038","severity":1,"message":"1159","line":19,"column":23,"nodeType":"1040","messageId":"1041","endLine":19,"endColumn":37},{"ruleId":"1038","severity":1,"message":"1112","line":20,"column":10,"nodeType":"1040","messageId":"1041","endLine":20,"endColumn":15},{"ruleId":"1038","severity":1,"message":"1160","line":20,"column":17,"nodeType":"1040","messageId":"1041","endLine":20,"endColumn":25},{"ruleId":"1038","severity":1,"message":"1161","line":21,"column":10,"nodeType":"1040","messageId":"1041","endLine":21,"endColumn":21},{"ruleId":"1038","severity":1,"message":"1162","line":21,"column":23,"nodeType":"1040","messageId":"1041","endLine":21,"endColumn":37},{"ruleId":"1038","severity":1,"message":"1163","line":23,"column":10,"nodeType":"1040","messageId":"1041","endLine":23,"endColumn":27},{"ruleId":"1038","severity":1,"message":"1164","line":23,"column":29,"nodeType":"1040","messageId":"1041","endLine":23,"endColumn":49},{"ruleId":"1038","severity":1,"message":"1113","line":26,"column":10,"nodeType":"1040","messageId":"1041","endLine":26,"endColumn":21},{"ruleId":"1038","severity":1,"message":"1165","line":26,"column":23,"nodeType":"1040","messageId":"1041","endLine":26,"endColumn":37},{"ruleId":"1038","severity":1,"message":"1114","line":29,"column":10,"nodeType":"1040","messageId":"1041","endLine":29,"endColumn":15},{"ruleId":"1038","severity":1,"message":"1166","line":29,"column":17,"nodeType":"1040","messageId":"1041","endLine":29,"endColumn":25},{"ruleId":"1038","severity":1,"message":"1167","line":34,"column":9,"nodeType":"1040","messageId":"1041","endLine":34,"endColumn":15},{"ruleId":"1038","severity":1,"message":"1168","line":38,"column":12,"nodeType":"1040","messageId":"1041","endLine":38,"endColumn":28},{"ruleId":"1047","severity":1,"message":"1048","line":116,"column":31,"nodeType":"1049","messageId":"1050","endLine":116,"endColumn":33},{"ruleId":"1038","severity":1,"message":"1151","line":1,"column":10,"nodeType":"1040","messageId":"1041","endLine":1,"endColumn":15},{"ruleId":"1038","severity":1,"message":"1169","line":3,"column":10,"nodeType":"1040","messageId":"1041","endLine":3,"endColumn":19},{"ruleId":"1038","severity":1,"message":"1170","line":4,"column":10,"nodeType":"1040","messageId":"1041","endLine":4,"endColumn":28},{"ruleId":"1047","severity":1,"message":"1130","line":37,"column":35,"nodeType":"1049","messageId":"1050","endLine":37,"endColumn":37},{"ruleId":"1047","severity":1,"message":"1048","line":75,"column":49,"nodeType":"1049","messageId":"1050","endLine":75,"endColumn":51},{"ruleId":"1034","replacedBy":"1171"},{"ruleId":"1036","replacedBy":"1172"},{"ruleId":"1038","severity":1,"message":"1146","line":1,"column":22,"nodeType":"1040","messageId":"1041","endLine":1,"endColumn":28},{"ruleId":"1038","severity":1,"message":"1147","line":1,"column":44,"nodeType":"1040","messageId":"1041","endLine":1,"endColumn":50},{"ruleId":"1038","severity":1,"message":"1043","line":2,"column":10,"nodeType":"1040","messageId":"1041","endLine":2,"endColumn":24},{"ruleId":"1038","severity":1,"message":"1105","line":2,"column":26,"nodeType":"1040","messageId":"1041","endLine":2,"endColumn":38},{"ruleId":"1038","severity":1,"message":"1148","line":3,"column":8,"nodeType":"1040","messageId":"1041","endLine":3,"endColumn":12},{"ruleId":"1047","severity":1,"message":"1048","line":50,"column":42,"nodeType":"1049","messageId":"1050","endLine":50,"endColumn":44},{"ruleId":"1038","severity":1,"message":"1149","line":153,"column":9,"nodeType":"1040","messageId":"1041","endLine":153,"endColumn":30},{"ruleId":"1038","severity":1,"message":"1051","line":159,"column":9,"nodeType":"1040","messageId":"1041","endLine":159,"endColumn":20},{"ruleId":"1038","severity":1,"message":"1115","line":167,"column":9,"nodeType":"1040","messageId":"1041","endLine":167,"endColumn":20},{"ruleId":"1038","severity":1,"message":"1043","line":1,"column":10,"nodeType":"1040","messageId":"1041","endLine":1,"endColumn":24},{"ruleId":"1038","severity":1,"message":"1044","line":16,"column":3,"nodeType":"1040","messageId":"1041","endLine":16,"endColumn":8},{"ruleId":"1038","severity":1,"message":"1045","line":18,"column":3,"nodeType":"1040","messageId":"1041","endLine":18,"endColumn":6},{"ruleId":"1038","severity":1,"message":"1046","line":19,"column":3,"nodeType":"1040","messageId":"1041","endLine":19,"endColumn":6},{"ruleId":"1047","severity":1,"message":"1048","line":60,"column":42,"nodeType":"1049","messageId":"1050","endLine":60,"endColumn":44},{"ruleId":"1038","severity":1,"message":"1051","line":169,"column":9,"nodeType":"1040","messageId":"1041","endLine":169,"endColumn":20},{"ruleId":"1038","severity":1,"message":"1052","line":188,"column":9,"nodeType":"1040","messageId":"1041","endLine":188,"endColumn":24},{"ruleId":"1047","severity":1,"message":"1048","line":192,"column":35,"nodeType":"1049","messageId":"1050","endLine":192,"endColumn":37},{"ruleId":"1047","severity":1,"message":"1048","line":356,"column":53,"nodeType":"1049","messageId":"1050","endLine":356,"endColumn":55},{"ruleId":"1038","severity":1,"message":"1039","line":14,"column":36,"nodeType":"1040","messageId":"1041","endLine":14,"endColumn":52},{"ruleId":"1038","severity":1,"message":"1042","line":29,"column":10,"nodeType":"1040","messageId":"1041","endLine":29,"endColumn":17},{"ruleId":"1038","severity":1,"message":"1042","line":35,"column":10,"nodeType":"1040","messageId":"1041","endLine":35,"endColumn":17},{"ruleId":"1038","severity":1,"message":"1044","line":3,"column":15,"nodeType":"1040","messageId":"1041","endLine":3,"endColumn":20},{"ruleId":"1038","severity":1,"message":"1058","line":8,"column":3,"nodeType":"1040","messageId":"1041","endLine":8,"endColumn":6},{"ruleId":"1038","severity":1,"message":"1059","line":10,"column":3,"nodeType":"1040","messageId":"1041","endLine":10,"endColumn":8},{"ruleId":"1038","severity":1,"message":"1060","line":12,"column":3,"nodeType":"1040","messageId":"1041","endLine":12,"endColumn":15},{"ruleId":"1038","severity":1,"message":"1077","line":15,"column":10,"nodeType":"1040","messageId":"1041","endLine":15,"endColumn":22},{"ruleId":"1038","severity":1,"message":"1078","line":15,"column":24,"nodeType":"1040","messageId":"1041","endLine":15,"endColumn":34},{"ruleId":"1038","severity":1,"message":"1039","line":15,"column":36,"nodeType":"1040","messageId":"1041","endLine":15,"endColumn":52},{"ruleId":"1038","severity":1,"message":"1079","line":16,"column":10,"nodeType":"1040","messageId":"1041","endLine":16,"endColumn":20},{"ruleId":"1038","severity":1,"message":"1061","line":16,"column":22,"nodeType":"1040","messageId":"1041","endLine":16,"endColumn":38},{"ruleId":"1038","severity":1,"message":"1080","line":16,"column":40,"nodeType":"1040","messageId":"1041","endLine":16,"endColumn":60},{"ruleId":"1038","severity":1,"message":"1081","line":16,"column":62,"nodeType":"1040","messageId":"1041","endLine":16,"endColumn":85},{"ruleId":"1038","severity":1,"message":"1082","line":16,"column":87,"nodeType":"1040","messageId":"1041","endLine":16,"endColumn":110},{"ruleId":"1038","severity":1,"message":"1062","line":17,"column":3,"nodeType":"1040","messageId":"1041","endLine":17,"endColumn":15},{"ruleId":"1038","severity":1,"message":"1083","line":17,"column":17,"nodeType":"1040","messageId":"1041","endLine":17,"endColumn":34},{"ruleId":"1038","severity":1,"message":"1084","line":17,"column":36,"nodeType":"1040","messageId":"1041","endLine":17,"endColumn":53},{"ruleId":"1038","severity":1,"message":"1085","line":19,"column":22,"nodeType":"1040","messageId":"1041","endLine":19,"endColumn":33},{"ruleId":"1038","severity":1,"message":"1086","line":19,"column":35,"nodeType":"1040","messageId":"1041","endLine":19,"endColumn":50},{"ruleId":"1038","severity":1,"message":"1087","line":43,"column":10,"nodeType":"1040","messageId":"1041","endLine":43,"endColumn":16},{"ruleId":"1047","severity":1,"message":"1048","line":82,"column":28,"nodeType":"1049","messageId":"1050","endLine":82,"endColumn":30},{"ruleId":"1047","severity":1,"message":"1048","line":192,"column":10,"nodeType":"1049","messageId":"1050","endLine":192,"endColumn":12},{"ruleId":"1047","severity":1,"message":"1048","line":196,"column":10,"nodeType":"1049","messageId":"1050","endLine":196,"endColumn":12},{"ruleId":"1038","severity":1,"message":"1088","line":16,"column":3,"nodeType":"1040","messageId":"1041","endLine":16,"endColumn":10},{"ruleId":"1038","severity":1,"message":"1089","line":18,"column":3,"nodeType":"1040","messageId":"1041","endLine":18,"endColumn":9},{"ruleId":"1038","severity":1,"message":"1090","line":24,"column":3,"nodeType":"1040","messageId":"1041","endLine":24,"endColumn":22},{"ruleId":"1038","severity":1,"message":"1091","line":25,"column":3,"nodeType":"1040","messageId":"1041","endLine":25,"endColumn":17},{"ruleId":"1038","severity":1,"message":"1092","line":28,"column":10,"nodeType":"1040","messageId":"1041","endLine":28,"endColumn":18},{"ruleId":"1038","severity":1,"message":"1042","line":69,"column":10,"nodeType":"1040","messageId":"1041","endLine":69,"endColumn":17},{"ruleId":"1038","severity":1,"message":"1093","line":83,"column":10,"nodeType":"1040","messageId":"1041","endLine":83,"endColumn":15},{"ruleId":"1038","severity":1,"message":"1094","line":86,"column":10,"nodeType":"1040","messageId":"1041","endLine":86,"endColumn":16},{"ruleId":"1038","severity":1,"message":"1095","line":86,"column":18,"nodeType":"1040","messageId":"1041","endLine":86,"endColumn":25},{"ruleId":"1038","severity":1,"message":"1096","line":87,"column":10,"nodeType":"1040","messageId":"1041","endLine":87,"endColumn":20},{"ruleId":"1038","severity":1,"message":"1097","line":88,"column":10,"nodeType":"1040","messageId":"1041","endLine":88,"endColumn":23},{"ruleId":"1038","severity":1,"message":"1098","line":89,"column":10,"nodeType":"1040","messageId":"1041","endLine":89,"endColumn":14},{"ruleId":"1038","severity":1,"message":"1099","line":90,"column":10,"nodeType":"1040","messageId":"1041","endLine":90,"endColumn":14},{"ruleId":"1038","severity":1,"message":"1100","line":91,"column":10,"nodeType":"1040","messageId":"1041","endLine":91,"endColumn":26},{"ruleId":"1047","severity":1,"message":"1048","line":113,"column":51,"nodeType":"1049","messageId":"1050","endLine":113,"endColumn":53},{"ruleId":"1047","severity":1,"message":"1048","line":117,"column":51,"nodeType":"1049","messageId":"1050","endLine":117,"endColumn":53},{"ruleId":"1047","severity":1,"message":"1048","line":121,"column":59,"nodeType":"1049","messageId":"1050","endLine":121,"endColumn":61},{"ruleId":"1047","severity":1,"message":"1048","line":125,"column":55,"nodeType":"1049","messageId":"1050","endLine":125,"endColumn":57},{"ruleId":"1047","severity":1,"message":"1048","line":230,"column":24,"nodeType":"1049","messageId":"1050","endLine":230,"endColumn":26},{"ruleId":"1047","severity":1,"message":"1048","line":230,"column":43,"nodeType":"1049","messageId":"1050","endLine":230,"endColumn":45},{"ruleId":"1047","severity":1,"message":"1048","line":248,"column":31,"nodeType":"1049","messageId":"1050","endLine":248,"endColumn":33},{"ruleId":"1047","severity":1,"message":"1048","line":248,"column":53,"nodeType":"1049","messageId":"1050","endLine":248,"endColumn":55},{"ruleId":"1047","severity":1,"message":"1048","line":268,"column":31,"nodeType":"1049","messageId":"1050","endLine":268,"endColumn":33},{"ruleId":"1038","severity":1,"message":"1101","line":274,"column":12,"nodeType":"1040","messageId":"1041","endLine":274,"endColumn":26},{"ruleId":"1038","severity":1,"message":"1102","line":539,"column":9,"nodeType":"1040","messageId":"1041","endLine":539,"endColumn":28},{"ruleId":"1038","severity":1,"message":"1103","line":581,"column":9,"nodeType":"1040","messageId":"1041","endLine":581,"endColumn":14},{"ruleId":"1038","severity":1,"message":"1104","line":617,"column":9,"nodeType":"1040","messageId":"1041","endLine":617,"endColumn":20},{"ruleId":"1038","severity":1,"message":"1073","line":17,"column":10,"nodeType":"1040","messageId":"1041","endLine":17,"endColumn":21},{"ruleId":"1038","severity":1,"message":"1074","line":18,"column":33,"nodeType":"1040","messageId":"1041","endLine":18,"endColumn":41},{"ruleId":"1038","severity":1,"message":"1075","line":23,"column":10,"nodeType":"1040","messageId":"1041","endLine":23,"endColumn":16},{"ruleId":"1038","severity":1,"message":"1042","line":42,"column":10,"nodeType":"1040","messageId":"1041","endLine":42,"endColumn":17},{"ruleId":"1038","severity":1,"message":"1076","line":82,"column":12,"nodeType":"1040","messageId":"1041","endLine":82,"endColumn":30},{"ruleId":"1047","severity":1,"message":"1048","line":136,"column":23,"nodeType":"1049","messageId":"1050","endLine":136,"endColumn":25},{"ruleId":"1047","severity":1,"message":"1048","line":136,"column":42,"nodeType":"1049","messageId":"1050","endLine":136,"endColumn":44},{"ruleId":"1047","severity":1,"message":"1048","line":151,"column":28,"nodeType":"1049","messageId":"1050","endLine":151,"endColumn":30},{"ruleId":"1047","severity":1,"message":"1048","line":151,"column":50,"nodeType":"1049","messageId":"1050","endLine":151,"endColumn":52},{"ruleId":"1038","severity":1,"message":"1042","line":29,"column":10,"nodeType":"1040","messageId":"1041","endLine":29,"endColumn":17},{"ruleId":"1053","severity":1,"message":"1054","line":177,"column":6,"nodeType":"1055","endLine":177,"endColumn":8,"suggestions":"1173"},{"ruleId":"1038","severity":1,"message":"1057","line":8,"column":3,"nodeType":"1040","messageId":"1041","endLine":8,"endColumn":8},{"ruleId":"1038","severity":1,"message":"1058","line":9,"column":3,"nodeType":"1040","messageId":"1041","endLine":9,"endColumn":6},{"ruleId":"1038","severity":1,"message":"1059","line":11,"column":3,"nodeType":"1040","messageId":"1041","endLine":11,"endColumn":8},{"ruleId":"1038","severity":1,"message":"1060","line":13,"column":3,"nodeType":"1040","messageId":"1041","endLine":13,"endColumn":15},{"ruleId":"1038","severity":1,"message":"1061","line":16,"column":22,"nodeType":"1040","messageId":"1041","endLine":16,"endColumn":38},{"ruleId":"1038","severity":1,"message":"1062","line":17,"column":3,"nodeType":"1040","messageId":"1041","endLine":17,"endColumn":15},{"ruleId":"1038","severity":1,"message":"1063","line":31,"column":10,"nodeType":"1040","messageId":"1041","endLine":31,"endColumn":20},{"ruleId":"1047","severity":1,"message":"1048","line":61,"column":42,"nodeType":"1049","messageId":"1050","endLine":61,"endColumn":44},{"ruleId":"1047","severity":1,"message":"1048","line":63,"column":45,"nodeType":"1049","messageId":"1050","endLine":63,"endColumn":47},{"ruleId":"1047","severity":1,"message":"1048","line":71,"column":42,"nodeType":"1049","messageId":"1050","endLine":71,"endColumn":44},{"ruleId":"1047","severity":1,"message":"1048","line":73,"column":45,"nodeType":"1049","messageId":"1050","endLine":73,"endColumn":47},{"ruleId":"1038","severity":1,"message":"1064","line":113,"column":9,"nodeType":"1040","messageId":"1041","endLine":113,"endColumn":21},{"ruleId":"1038","severity":1,"message":"1065","line":118,"column":9,"nodeType":"1040","messageId":"1041","endLine":118,"endColumn":27},{"ruleId":"1047","severity":1,"message":"1048","line":129,"column":12,"nodeType":"1049","messageId":"1050","endLine":129,"endColumn":14},{"ruleId":"1047","severity":1,"message":"1048","line":134,"column":12,"nodeType":"1049","messageId":"1050","endLine":134,"endColumn":14},{"ruleId":"1066","severity":1,"message":"1067","line":146,"column":24,"nodeType":"1068","messageId":"1069","endLine":146,"endColumn":26},{"ruleId":"1047","severity":1,"message":"1048","line":147,"column":15,"nodeType":"1049","messageId":"1050","endLine":147,"endColumn":17},{"ruleId":"1066","severity":1,"message":"1067","line":161,"column":18,"nodeType":"1068","messageId":"1069","endLine":161,"endColumn":20},{"ruleId":"1047","severity":1,"message":"1048","line":163,"column":20,"nodeType":"1049","messageId":"1050","endLine":163,"endColumn":22},{"ruleId":"1070","severity":1,"message":"1071","line":346,"column":139,"nodeType":"1072","messageId":"1050","endLine":346,"endColumn":144},{"ruleId":"1070","severity":1,"message":"1071","line":348,"column":139,"nodeType":"1072","messageId":"1050","endLine":348,"endColumn":144},{"ruleId":"1070","severity":1,"message":"1071","line":350,"column":139,"nodeType":"1072","messageId":"1050","endLine":350,"endColumn":144},{"ruleId":"1047","severity":1,"message":"1048","line":369,"column":32,"nodeType":"1049","messageId":"1050","endLine":369,"endColumn":34},{"ruleId":"1047","severity":1,"message":"1048","line":373,"column":35,"nodeType":"1049","messageId":"1050","endLine":373,"endColumn":37},{"ruleId":"1038","severity":1,"message":"1106","line":51,"column":10,"nodeType":"1040","messageId":"1041","endLine":51,"endColumn":16},{"ruleId":"1038","severity":1,"message":"1107","line":54,"column":30,"nodeType":"1040","messageId":"1041","endLine":54,"endColumn":51},{"ruleId":"1047","severity":1,"message":"1048","line":167,"column":53,"nodeType":"1049","messageId":"1050","endLine":167,"endColumn":55},{"ruleId":"1038","severity":1,"message":"1105","line":3,"column":10,"nodeType":"1040","messageId":"1041","endLine":3,"endColumn":22},{"ruleId":"1038","severity":1,"message":"1042","line":9,"column":10,"nodeType":"1040","messageId":"1041","endLine":9,"endColumn":17},{"ruleId":"1038","severity":1,"message":"1088","line":16,"column":3,"nodeType":"1040","messageId":"1041","endLine":16,"endColumn":10},{"ruleId":"1038","severity":1,"message":"1089","line":18,"column":3,"nodeType":"1040","messageId":"1041","endLine":18,"endColumn":9},{"ruleId":"1038","severity":1,"message":"1090","line":24,"column":3,"nodeType":"1040","messageId":"1041","endLine":24,"endColumn":22},{"ruleId":"1038","severity":1,"message":"1091","line":25,"column":3,"nodeType":"1040","messageId":"1041","endLine":25,"endColumn":17},{"ruleId":"1038","severity":1,"message":"1092","line":28,"column":10,"nodeType":"1040","messageId":"1041","endLine":28,"endColumn":18},{"ruleId":"1038","severity":1,"message":"1042","line":69,"column":10,"nodeType":"1040","messageId":"1041","endLine":69,"endColumn":17},{"ruleId":"1038","severity":1,"message":"1093","line":83,"column":10,"nodeType":"1040","messageId":"1041","endLine":83,"endColumn":15},{"ruleId":"1038","severity":1,"message":"1094","line":86,"column":10,"nodeType":"1040","messageId":"1041","endLine":86,"endColumn":16},{"ruleId":"1038","severity":1,"message":"1095","line":86,"column":18,"nodeType":"1040","messageId":"1041","endLine":86,"endColumn":25},{"ruleId":"1038","severity":1,"message":"1096","line":87,"column":10,"nodeType":"1040","messageId":"1041","endLine":87,"endColumn":20},{"ruleId":"1038","severity":1,"message":"1097","line":88,"column":10,"nodeType":"1040","messageId":"1041","endLine":88,"endColumn":23},{"ruleId":"1038","severity":1,"message":"1098","line":89,"column":10,"nodeType":"1040","messageId":"1041","endLine":89,"endColumn":14},{"ruleId":"1038","severity":1,"message":"1099","line":90,"column":10,"nodeType":"1040","messageId":"1041","endLine":90,"endColumn":14},{"ruleId":"1038","severity":1,"message":"1100","line":91,"column":10,"nodeType":"1040","messageId":"1041","endLine":91,"endColumn":26},{"ruleId":"1047","severity":1,"message":"1048","line":113,"column":51,"nodeType":"1049","messageId":"1050","endLine":113,"endColumn":53},{"ruleId":"1047","severity":1,"message":"1048","line":117,"column":51,"nodeType":"1049","messageId":"1050","endLine":117,"endColumn":53},{"ruleId":"1047","severity":1,"message":"1048","line":121,"column":59,"nodeType":"1049","messageId":"1050","endLine":121,"endColumn":61},{"ruleId":"1047","severity":1,"message":"1048","line":125,"column":55,"nodeType":"1049","messageId":"1050","endLine":125,"endColumn":57},{"ruleId":"1047","severity":1,"message":"1048","line":230,"column":24,"nodeType":"1049","messageId":"1050","endLine":230,"endColumn":26},{"ruleId":"1047","severity":1,"message":"1048","line":230,"column":43,"nodeType":"1049","messageId":"1050","endLine":230,"endColumn":45},{"ruleId":"1047","severity":1,"message":"1048","line":248,"column":31,"nodeType":"1049","messageId":"1050","endLine":248,"endColumn":33},{"ruleId":"1047","severity":1,"message":"1048","line":248,"column":53,"nodeType":"1049","messageId":"1050","endLine":248,"endColumn":55},{"ruleId":"1047","severity":1,"message":"1048","line":268,"column":31,"nodeType":"1049","messageId":"1050","endLine":268,"endColumn":33},{"ruleId":"1038","severity":1,"message":"1101","line":274,"column":12,"nodeType":"1040","messageId":"1041","endLine":274,"endColumn":26},{"ruleId":"1038","severity":1,"message":"1102","line":539,"column":9,"nodeType":"1040","messageId":"1041","endLine":539,"endColumn":28},{"ruleId":"1038","severity":1,"message":"1103","line":568,"column":9,"nodeType":"1040","messageId":"1041","endLine":568,"endColumn":14},{"ruleId":"1038","severity":1,"message":"1104","line":599,"column":9,"nodeType":"1040","messageId":"1041","endLine":599,"endColumn":20},{"ruleId":"1038","severity":1,"message":"1043","line":1,"column":10,"nodeType":"1040","messageId":"1041","endLine":1,"endColumn":24},{"ruleId":"1038","severity":1,"message":"1108","line":3,"column":17,"nodeType":"1040","messageId":"1041","endLine":3,"endColumn":23},{"ruleId":"1038","severity":1,"message":"1109","line":55,"column":9,"nodeType":"1040","messageId":"1041","endLine":55,"endColumn":22},{"ruleId":"1038","severity":1,"message":"1110","line":7,"column":3,"nodeType":"1040","messageId":"1041","endLine":7,"endColumn":40},{"ruleId":"1038","severity":1,"message":"1111","line":13,"column":10,"nodeType":"1040","messageId":"1041","endLine":13,"endColumn":24},{"ruleId":"1038","severity":1,"message":"1112","line":18,"column":10,"nodeType":"1040","messageId":"1041","endLine":18,"endColumn":15},{"ruleId":"1038","severity":1,"message":"1113","line":22,"column":10,"nodeType":"1040","messageId":"1041","endLine":22,"endColumn":21},{"ruleId":"1038","severity":1,"message":"1114","line":25,"column":10,"nodeType":"1040","messageId":"1041","endLine":25,"endColumn":15},{"ruleId":"1038","severity":1,"message":"1115","line":65,"column":9,"nodeType":"1040","messageId":"1041","endLine":65,"endColumn":20},{"ruleId":"1047","severity":1,"message":"1048","line":237,"column":53,"nodeType":"1049","messageId":"1050","endLine":237,"endColumn":55},{"ruleId":"1038","severity":1,"message":"1156","line":2,"column":10,"nodeType":"1040","messageId":"1041","endLine":2,"endColumn":15},{"ruleId":"1038","severity":1,"message":"1057","line":2,"column":58,"nodeType":"1040","messageId":"1041","endLine":2,"endColumn":63},{"ruleId":"1038","severity":1,"message":"1111","line":6,"column":10,"nodeType":"1040","messageId":"1041","endLine":6,"endColumn":24},{"ruleId":"1038","severity":1,"message":"1157","line":13,"column":3,"nodeType":"1040","messageId":"1041","endLine":13,"endColumn":42},{"ruleId":"1038","severity":1,"message":"1110","line":14,"column":3,"nodeType":"1040","messageId":"1041","endLine":14,"endColumn":40},{"ruleId":"1038","severity":1,"message":"1158","line":19,"column":10,"nodeType":"1040","messageId":"1041","endLine":19,"endColumn":21},{"ruleId":"1038","severity":1,"message":"1159","line":19,"column":23,"nodeType":"1040","messageId":"1041","endLine":19,"endColumn":37},{"ruleId":"1038","severity":1,"message":"1112","line":20,"column":10,"nodeType":"1040","messageId":"1041","endLine":20,"endColumn":15},{"ruleId":"1038","severity":1,"message":"1160","line":20,"column":17,"nodeType":"1040","messageId":"1041","endLine":20,"endColumn":25},{"ruleId":"1038","severity":1,"message":"1161","line":21,"column":10,"nodeType":"1040","messageId":"1041","endLine":21,"endColumn":21},{"ruleId":"1038","severity":1,"message":"1162","line":21,"column":23,"nodeType":"1040","messageId":"1041","endLine":21,"endColumn":37},{"ruleId":"1038","severity":1,"message":"1163","line":23,"column":10,"nodeType":"1040","messageId":"1041","endLine":23,"endColumn":27},{"ruleId":"1038","severity":1,"message":"1164","line":23,"column":29,"nodeType":"1040","messageId":"1041","endLine":23,"endColumn":49},{"ruleId":"1038","severity":1,"message":"1113","line":26,"column":10,"nodeType":"1040","messageId":"1041","endLine":26,"endColumn":21},{"ruleId":"1038","severity":1,"message":"1165","line":26,"column":23,"nodeType":"1040","messageId":"1041","endLine":26,"endColumn":37},{"ruleId":"1038","severity":1,"message":"1114","line":29,"column":10,"nodeType":"1040","messageId":"1041","endLine":29,"endColumn":15},{"ruleId":"1038","severity":1,"message":"1166","line":29,"column":17,"nodeType":"1040","messageId":"1041","endLine":29,"endColumn":25},{"ruleId":"1038","severity":1,"message":"1167","line":34,"column":9,"nodeType":"1040","messageId":"1041","endLine":34,"endColumn":15},{"ruleId":"1038","severity":1,"message":"1168","line":38,"column":12,"nodeType":"1040","messageId":"1041","endLine":38,"endColumn":28},{"ruleId":"1047","severity":1,"message":"1048","line":116,"column":31,"nodeType":"1049","messageId":"1050","endLine":116,"endColumn":33},{"ruleId":"1038","severity":1,"message":"1116","line":18,"column":7,"nodeType":"1040","messageId":"1041","endLine":18,"endColumn":36},{"ruleId":"1038","severity":1,"message":"1044","line":2,"column":10,"nodeType":"1040","messageId":"1041","endLine":2,"endColumn":15},{"ruleId":"1038","severity":1,"message":"1117","line":5,"column":3,"nodeType":"1040","messageId":"1041","endLine":5,"endColumn":12},{"ruleId":"1038","severity":1,"message":"1118","line":11,"column":3,"nodeType":"1040","messageId":"1041","endLine":11,"endColumn":12},{"ruleId":"1038","severity":1,"message":"1119","line":12,"column":3,"nodeType":"1040","messageId":"1041","endLine":12,"endColumn":8},{"ruleId":"1038","severity":1,"message":"1120","line":18,"column":8,"nodeType":"1040","messageId":"1041","endLine":18,"endColumn":14},{"ruleId":"1038","severity":1,"message":"1121","line":21,"column":7,"nodeType":"1040","messageId":"1041","endLine":21,"endColumn":27},{"ruleId":"1047","severity":1,"message":"1048","line":164,"column":24,"nodeType":"1049","messageId":"1050","endLine":164,"endColumn":26},{"ruleId":"1047","severity":1,"message":"1048","line":165,"column":20,"nodeType":"1049","messageId":"1050","endLine":165,"endColumn":22},{"ruleId":"1047","severity":1,"message":"1048","line":166,"column":31,"nodeType":"1049","messageId":"1050","endLine":166,"endColumn":33},{"ruleId":"1047","severity":1,"message":"1048","line":167,"column":31,"nodeType":"1049","messageId":"1050","endLine":167,"endColumn":33},{"ruleId":"1047","severity":1,"message":"1048","line":169,"column":41,"nodeType":"1049","messageId":"1050","endLine":169,"endColumn":43},{"ruleId":"1047","severity":1,"message":"1048","line":175,"column":16,"nodeType":"1049","messageId":"1050","endLine":175,"endColumn":18},{"ruleId":"1047","severity":1,"message":"1048","line":177,"column":24,"nodeType":"1049","messageId":"1050","endLine":177,"endColumn":26},{"ruleId":"1047","severity":1,"message":"1048","line":178,"column":20,"nodeType":"1049","messageId":"1050","endLine":178,"endColumn":22},{"ruleId":"1047","severity":1,"message":"1048","line":179,"column":22,"nodeType":"1049","messageId":"1050","endLine":179,"endColumn":24},{"ruleId":"1047","severity":1,"message":"1048","line":180,"column":22,"nodeType":"1049","messageId":"1050","endLine":180,"endColumn":24},{"ruleId":"1047","severity":1,"message":"1048","line":183,"column":29,"nodeType":"1049","messageId":"1050","endLine":183,"endColumn":31},{"ruleId":"1047","severity":1,"message":"1048","line":195,"column":17,"nodeType":"1049","messageId":"1050","endLine":195,"endColumn":19},{"ruleId":"1038","severity":1,"message":"1105","line":2,"column":26,"nodeType":"1040","messageId":"1041","endLine":2,"endColumn":38},{"ruleId":"1038","severity":1,"message":"1122","line":8,"column":10,"nodeType":"1040","messageId":"1041","endLine":8,"endColumn":18},{"ruleId":"1038","severity":1,"message":"1123","line":10,"column":5,"nodeType":"1040","messageId":"1041","endLine":10,"endColumn":20},{"ruleId":"1038","severity":1,"message":"1124","line":78,"column":10,"nodeType":"1040","messageId":"1041","endLine":78,"endColumn":17},{"ruleId":"1038","severity":1,"message":"1125","line":85,"column":26,"nodeType":"1040","messageId":"1041","endLine":85,"endColumn":43},{"ruleId":"1038","severity":1,"message":"1087","line":86,"column":10,"nodeType":"1040","messageId":"1041","endLine":86,"endColumn":16},{"ruleId":"1038","severity":1,"message":"1126","line":86,"column":18,"nodeType":"1040","messageId":"1041","endLine":86,"endColumn":27},{"ruleId":"1038","severity":1,"message":"1127","line":91,"column":10,"nodeType":"1040","messageId":"1041","endLine":91,"endColumn":28},{"ruleId":"1038","severity":1,"message":"1115","line":99,"column":9,"nodeType":"1040","messageId":"1041","endLine":99,"endColumn":20},{"ruleId":"1038","severity":1,"message":"1128","line":101,"column":9,"nodeType":"1040","messageId":"1041","endLine":101,"endColumn":16},{"ruleId":"1038","severity":1,"message":"1129","line":105,"column":12,"nodeType":"1040","messageId":"1041","endLine":105,"endColumn":17},{"ruleId":"1038","severity":1,"message":"1128","line":106,"column":9,"nodeType":"1040","messageId":"1041","endLine":106,"endColumn":16},{"ruleId":"1047","severity":1,"message":"1130","line":121,"column":13,"nodeType":"1049","messageId":"1050","endLine":121,"endColumn":15},{"ruleId":"1047","severity":1,"message":"1130","line":121,"column":57,"nodeType":"1049","messageId":"1050","endLine":121,"endColumn":59},{"ruleId":"1047","severity":1,"message":"1130","line":140,"column":13,"nodeType":"1049","messageId":"1050","endLine":140,"endColumn":15},{"ruleId":"1047","severity":1,"message":"1130","line":140,"column":27,"nodeType":"1049","messageId":"1050","endLine":140,"endColumn":29},{"ruleId":"1047","severity":1,"message":"1048","line":142,"column":14,"nodeType":"1049","messageId":"1050","endLine":142,"endColumn":16},{"ruleId":"1047","severity":1,"message":"1130","line":165,"column":17,"nodeType":"1049","messageId":"1050","endLine":165,"endColumn":19},{"ruleId":"1047","severity":1,"message":"1130","line":165,"column":31,"nodeType":"1049","messageId":"1050","endLine":165,"endColumn":33},{"ruleId":"1047","severity":1,"message":"1130","line":185,"column":59,"nodeType":"1049","messageId":"1050","endLine":185,"endColumn":61},{"ruleId":"1047","severity":1,"message":"1130","line":185,"column":73,"nodeType":"1049","messageId":"1050","endLine":185,"endColumn":75},{"ruleId":"1047","severity":1,"message":"1130","line":185,"column":86,"nodeType":"1049","messageId":"1050","endLine":185,"endColumn":88},{"ruleId":"1047","severity":1,"message":"1048","line":194,"column":16,"nodeType":"1049","messageId":"1050","endLine":194,"endColumn":18},{"ruleId":"1038","severity":1,"message":"1044","line":2,"column":10,"nodeType":"1040","messageId":"1041","endLine":2,"endColumn":15},{"ruleId":"1038","severity":1,"message":"1117","line":5,"column":3,"nodeType":"1040","messageId":"1041","endLine":5,"endColumn":12},{"ruleId":"1038","severity":1,"message":"1118","line":11,"column":3,"nodeType":"1040","messageId":"1041","endLine":11,"endColumn":12},{"ruleId":"1038","severity":1,"message":"1119","line":12,"column":3,"nodeType":"1040","messageId":"1041","endLine":12,"endColumn":8},{"ruleId":"1038","severity":1,"message":"1120","line":18,"column":8,"nodeType":"1040","messageId":"1041","endLine":18,"endColumn":14},{"ruleId":"1038","severity":1,"message":"1121","line":21,"column":7,"nodeType":"1040","messageId":"1041","endLine":21,"endColumn":27},{"ruleId":"1047","severity":1,"message":"1048","line":158,"column":24,"nodeType":"1049","messageId":"1050","endLine":158,"endColumn":26},{"ruleId":"1047","severity":1,"message":"1048","line":159,"column":20,"nodeType":"1049","messageId":"1050","endLine":159,"endColumn":22},{"ruleId":"1047","severity":1,"message":"1048","line":160,"column":31,"nodeType":"1049","messageId":"1050","endLine":160,"endColumn":33},{"ruleId":"1047","severity":1,"message":"1048","line":161,"column":31,"nodeType":"1049","messageId":"1050","endLine":161,"endColumn":33},{"ruleId":"1047","severity":1,"message":"1048","line":163,"column":41,"nodeType":"1049","messageId":"1050","endLine":163,"endColumn":43},{"ruleId":"1047","severity":1,"message":"1048","line":169,"column":16,"nodeType":"1049","messageId":"1050","endLine":169,"endColumn":18},{"ruleId":"1047","severity":1,"message":"1048","line":171,"column":24,"nodeType":"1049","messageId":"1050","endLine":171,"endColumn":26},{"ruleId":"1047","severity":1,"message":"1048","line":172,"column":20,"nodeType":"1049","messageId":"1050","endLine":172,"endColumn":22},{"ruleId":"1047","severity":1,"message":"1048","line":173,"column":22,"nodeType":"1049","messageId":"1050","endLine":173,"endColumn":24},{"ruleId":"1047","severity":1,"message":"1048","line":174,"column":22,"nodeType":"1049","messageId":"1050","endLine":174,"endColumn":24},{"ruleId":"1047","severity":1,"message":"1048","line":177,"column":29,"nodeType":"1049","messageId":"1050","endLine":177,"endColumn":31},{"ruleId":"1047","severity":1,"message":"1048","line":189,"column":17,"nodeType":"1049","messageId":"1050","endLine":189,"endColumn":19},{"ruleId":"1038","severity":1,"message":"1155","line":2,"column":25,"nodeType":"1040","messageId":"1041","endLine":2,"endColumn":29},{"ruleId":"1047","severity":1,"message":"1048","line":97,"column":47,"nodeType":"1049","messageId":"1050","endLine":97,"endColumn":49},{"ruleId":"1038","severity":1,"message":"1150","line":3,"column":3,"nodeType":"1040","messageId":"1041","endLine":3,"endColumn":13},{"ruleId":"1038","severity":1,"message":"1151","line":6,"column":3,"nodeType":"1040","messageId":"1041","endLine":6,"endColumn":8},{"ruleId":"1038","severity":1,"message":"1044","line":7,"column":3,"nodeType":"1040","messageId":"1041","endLine":7,"endColumn":8},{"ruleId":"1038","severity":1,"message":"1152","line":8,"column":3,"nodeType":"1040","messageId":"1041","endLine":8,"endColumn":8},{"ruleId":"1038","severity":1,"message":"1045","line":9,"column":3,"nodeType":"1040","messageId":"1041","endLine":9,"endColumn":6},{"ruleId":"1038","severity":1,"message":"1046","line":10,"column":3,"nodeType":"1040","messageId":"1041","endLine":10,"endColumn":6},{"ruleId":"1038","severity":1,"message":"1153","line":11,"column":3,"nodeType":"1040","messageId":"1041","endLine":11,"endColumn":9},{"ruleId":"1038","severity":1,"message":"1154","line":12,"column":3,"nodeType":"1040","messageId":"1041","endLine":12,"endColumn":15},{"ruleId":"1038","severity":1,"message":"1151","line":1,"column":10,"nodeType":"1040","messageId":"1041","endLine":1,"endColumn":15},{"ruleId":"1038","severity":1,"message":"1169","line":3,"column":10,"nodeType":"1040","messageId":"1041","endLine":3,"endColumn":19},{"ruleId":"1038","severity":1,"message":"1170","line":4,"column":10,"nodeType":"1040","messageId":"1041","endLine":4,"endColumn":28},{"ruleId":"1047","severity":1,"message":"1130","line":37,"column":35,"nodeType":"1049","messageId":"1050","endLine":37,"endColumn":37},{"ruleId":"1047","severity":1,"message":"1048","line":75,"column":49,"nodeType":"1049","messageId":"1050","endLine":75,"endColumn":51},{"ruleId":"1038","severity":1,"message":"1131","line":9,"column":10,"nodeType":"1040","messageId":"1041","endLine":9,"endColumn":17},{"ruleId":"1038","severity":1,"message":"1132","line":9,"column":19,"nodeType":"1040","messageId":"1041","endLine":9,"endColumn":29},{"ruleId":"1038","severity":1,"message":"1133","line":9,"column":5,"nodeType":"1040","messageId":"1041","endLine":9,"endColumn":15},{"ruleId":"1038","severity":1,"message":"1134","line":22,"column":7,"nodeType":"1040","messageId":"1041","endLine":22,"endColumn":11},{"ruleId":"1038","severity":1,"message":"1135","line":23,"column":7,"nodeType":"1040","messageId":"1041","endLine":23,"endColumn":15},{"ruleId":"1038","severity":1,"message":"1136","line":24,"column":7,"nodeType":"1040","messageId":"1041","endLine":24,"endColumn":15},{"ruleId":"1038","severity":1,"message":"1137","line":25,"column":7,"nodeType":"1040","messageId":"1041","endLine":25,"endColumn":10},{"ruleId":"1038","severity":1,"message":"1138","line":26,"column":7,"nodeType":"1040","messageId":"1041","endLine":26,"endColumn":12},{"ruleId":"1038","severity":1,"message":"1139","line":27,"column":7,"nodeType":"1040","messageId":"1041","endLine":27,"endColumn":10},{"ruleId":"1038","severity":1,"message":"1093","line":8,"column":5,"nodeType":"1040","messageId":"1041","endLine":8,"endColumn":10},{"ruleId":"1038","severity":1,"message":"1140","line":13,"column":10,"nodeType":"1040","messageId":"1041","endLine":13,"endColumn":18},{"ruleId":"1038","severity":1,"message":"1141","line":13,"column":20,"nodeType":"1040","messageId":"1041","endLine":13,"endColumn":31},{"ruleId":"1053","severity":1,"message":"1142","line":74,"column":6,"nodeType":"1055","endLine":74,"endColumn":16,"suggestions":"1174"},"no-native-reassign",["1175"],"no-negated-in-lhs",["1176"],"no-unused-vars","'actualizarSchool' is defined but never used.","Identifier","unusedVar","'loading' is assigned a value but never used.","'FilePdfTwoTone' is defined but never used.","'Modal' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'exportToPdf' is assigned a value but never used.","'filtrarServicio' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'listar'. Either include it or remove the dependency array.","ArrayExpression",["1177"],"'Table' is defined but never used.","'Tag' is defined but never used.","'Radio' is defined but never used.","'AutoComplete' is defined but never used.","'getDoctorsByTeam' is defined but never used.","'createDoctor' is defined but never used.","'placeGrupo' is assigned a value but never used.","'editarMedico' is assigned a value but never used.","'hanldeSelectNombre' is assigned a value but never used.","array-callback-return","Array.prototype.find() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-dupe-keys","Duplicate key 'color'.","ObjectExpression","'getRoleById' is defined but never used.","'findById' is defined but never used.","'render' is defined but never used.","'roleOptionsChecked' is defined but never used.","'createSchool' is defined but never used.","'getSchools' is defined but never used.","'getDoctors' is defined but never used.","'getDoctorsByTeamTipo' is defined but never used.","'getTeamIdCategoriaTodos' is defined but never used.","'getFindAllByTeamIdGrupo' is defined but never used.","'createDoctorGrupo' is defined but never used.","'borrarDoctorGrupo' is defined but never used.","'createTeams' is defined but never used.","'actualizarTeams' is defined but never used.","'idTeam' is assigned a value but never used.","'Tooltip' is defined but never used.","'Upload' is defined but never used.","'ClockCircleOutlined' is defined but never used.","'UploadOutlined' is defined but never used.","'OutTable' is defined but never used.","'teams' is assigned a value but never used.","'isOpen' is assigned a value but never used.","'setOpen' is assigned a value but never used.","'dataLoaded' is assigned a value but never used.","'isFormInvalid' is assigned a value but never used.","'rows' is assigned a value but never used.","'cols' is assigned a value but never used.","'uploadedFileName' is assigned a value but never used.","'upgradeDoctors' is defined but never used.","'handleModalImportOk' is assigned a value but never used.","'props' is assigned a value but never used.","'fileHandler' is assigned a value but never used.","'EditOutlined' is defined but never used.","'editar' is assigned a value but never used.","'setFilterServiceTable' is assigned a value but never used.","'useRef' is defined but never used.","'ImprimirTabla' is assigned a value but never used.","'viewPdfServiciosDoctorFilterSpecialty' is defined but never used.","'getSpecialties' is defined but never used.","'meses' is assigned a value but never used.","'filterMesOn' is assigned a value but never used.","'idMes' is assigned a value but never used.","'clearFilter' is assigned a value but never used.","'getServiciosDoctorByServiceId' is assigned a value but never used.","'Container' is defined but never used.","'FormGroup' is defined but never used.","'Label' is defined but never used.","'moment' is defined but never used.","'validationDoctorData' is assigned a value but never used.","'getTeams' is defined but never used.","'aniosAcademicos' is assigned a value but never used.","'periodo' is assigned a value but never used.","'setPlaceCategoria' is assigned a value but never used.","'setIdTeam' is assigned a value but never used.","'anioAcademicoCombo' is assigned a value but never used.","'lstMain' is assigned a value but never used.","'clear' is defined but never used.","Expected '!==' and instead saw '!='.","'isAdmin' is assigned a value but never used.","'setIsAdmin' is assigned a value but never used.","'diasSemana' is assigned a value but never used.","'days' is assigned a value but never used.","'daysName' is assigned a value but never used.","'agrupado' is assigned a value but never used.","'mes' is assigned a value but never used.","'turno' is assigned a value but never used.","'dia' is assigned a value but never used.","'teamslst' is assigned a value but never used.","'setTeamslst' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'dia.grupo'. Either include it or remove the dependency array. If 'setTeamId' needs the current value of 'dia.grupo', you can also switch to useReducer instead of useState and read 'dia.grupo' in the reducer.",["1178"],["1175"],["1176"],"'Button' is defined but never used.","'Select' is defined but never used.","'Form' is defined but never used.","'hanldeSelectSpecialty' is assigned a value but never used.","'Breadcrumb' is defined but never used.","'Empty' is defined but never used.","'Input' is defined but never used.","'Drawer' is defined but never used.","'notification' is defined but never used.","'Spin' is defined but never used.","'Alert' is defined but never used.","'viewPdfServiciosDoctorByAnioAndServicio' is defined but never used.","'idSpecialty' is assigned a value but never used.","'setIdSpecialty' is assigned a value but never used.","'setMeses' is assigned a value but never used.","'specialties' is assigned a value but never used.","'setSpecialties' is assigned a value but never used.","'doctoresFiltrados' is assigned a value but never used.","'setDoctoresFiltrados' is assigned a value but never used.","'setFilterMesOn' is assigned a value but never used.","'setIdMes' is assigned a value but never used.","'listar' is assigned a value but never used.","'openNotification' is defined but never used.","'useEffect' is defined but never used.","'getServiciosDoctor' is defined but never used.",["1175"],["1176"],["1179"],["1180"],"no-global-assign","no-unsafe-negation",{"desc":"1181","fix":"1182"},{"desc":"1183","fix":"1184"},{"desc":"1181","fix":"1185"},{"desc":"1183","fix":"1186"},"Update the dependencies array to be: [listar]",{"range":"1187","text":"1188"},"Update the dependencies array to be: [dia.grupo, isBgGray]",{"range":"1189","text":"1190"},{"range":"1191","text":"1188"},{"range":"1192","text":"1190"},[4184,4186],"[listar]",[1627,1637],"[dia.grupo, isBgGray]",[4184,4186],[1627,1637]]